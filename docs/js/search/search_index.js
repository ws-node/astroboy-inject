var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/AstroboyContext.html",[0,1.356,1,1.766]],["body/injectables/AstroboyContext.html",[0,1.643,1,2.72,2,0.014,3,0.126,4,2.759,5,2.327,6,3.497,7,3.364,8,4.836,9,4.359,10,1.736,11,3.617,12,4.216,13,3.617,14,3.617,15,3.617,16,3.617,17,3.056,18,3.497,19,3.509,20,4.586,21,3.509,22,2.762,23,4.216,24,3.509,25,4.216,26,3.509,27,4.216,28,3.509,29,4.216,30,3.509,31,4.586,32,3.509,33,3.509,34,3.509,35,4.359,36,1.636,37,3.509,38,3.509,39,4.359,40,3.509,41,4.359,42,3.576,43,0.252,44,3.153,45,1.632,46,1.706,47,2.084,48,0.206,49,1.194,50,0.265,51,1.073,52,2.836,53,0.659,54,0.902,55,0.902,56,0.902,57,0.941,58,2.713,59,3.28,60,1.334,61,3.056,62,1.723,63,0.845,64,3.056,65,3.056,66,3.056,67,3.056,68,3.056,69,2.359,70,2.295,71,3.559,72,6.089,73,3.056,74,3.056,75,3.056,76,3.056,77,3.056,78,3.056,79,0.006,80,0.006]],["title/classes/BaseClass.html",[57,0.776,81,3.247]],["body/classes/BaseClass.html",[1,2.468,2,0.014,3,0.155,5,2.685,6,3.377,7,4.868,8,4.373,10,1.509,11,4.172,12,4.172,13,4.172,14,4.172,15,4.172,16,4.172,20,4.538,22,2.944,23,4.172,25,4.172,27,4.172,29,4.172,31,4.538,42,3.246,43,0.229,44,4.377,48,0.187,53,0.811,54,1.109,55,1.109,56,1.109,57,1.085,59,2.426,62,2.313,79,0.007,80,0.007,81,5.859,82,3.391,83,2.782,84,5.028,85,5.772,86,4.313,87,4.313,88,4.313,89,4.313,90,4.313,91,4.313,92,4.313,93,4.313,94,3.758,95,0.554,96,4.538]],["title/interfaces/BaseCompiler.html",[50,0.313,97,2.602]],["body/interfaces/BaseCompiler.html",[0,2.08,1,2.981,2,0.014,3,0.179,5,2.313,36,1.888,43,0.251,45,2.313,48,0.225,50,0.527,57,1.191,62,2.168,63,0.787,79,0.008,80,0.008,97,4.624,98,3.344,99,6.335,100,4.974,101,5.478,102,4.974,103,3.911,104,0.654,105,3.595,106,3.134,107,1.732,108,4.579,109,3.134,110,1.576,111,2.217,112,3.991,113,3.595,114,1.236,115,3.595,116,3.595,117,3.595,118,2.797,119,2.127,120,3.595,121,3.595,122,3.134,123,3.595,124,3.134,125,3.595,126,4.579,127,3.595,128,3.595,129,3.595,130,3.595]],["title/classes/CancellationToken.html",[57,0.776,131,2.985]],["body/classes/CancellationToken.html",[2,0.014,3,0.125,43,0.266,48,0.113,50,0.264,57,0.655,59,2.8,62,2.387,63,0.81,70,1.907,79,0.006,80,0.006,95,0.639,104,0.639,119,2.485,131,4.582,132,2.739,133,3.115,134,6.604,135,6.604,136,5.061,137,5.522,138,4.568,139,5.522,140,5.522,141,5.522,142,5.522,143,3.765,144,3.484,145,1.645,146,4.979,147,4.688,148,3.484,149,3.484,150,1.694,151,3.484,152,1.777,153,3.484,154,3.451,155,4.582,156,3.484,157,3.484,158,3.484,159,3.484,160,3.484,161,3.484,162,3.915,163,4.337,164,2.046,165,3.915,166,3.035,167,0.808,168,3.035,169,3.035,170,2.07,171,2.739,172,2.07,173,3.915,174,3.035,175,3.035,176,1.42,177,3.347,178,2.59,179,1.694,180,6.395,181,5.061,182,5.061,183,1.553,184,1.757,185,3.035,186,3.035,187,3.035,188,4.337,189,3.035,190,4.337,191,3.035,192,3.035,193,2.739,194,3.035,195,3.035,196,3.035,197,4.337,198,3.035,199,3.035,200,3.035,201,3.035]],["title/interfaces/CancellationTokenData.html",[50,0.313,155,2.985]],["body/interfaces/CancellationTokenData.html",[2,0.014,3,0.151,43,0.285,48,0.136,50,0.318,57,0.789,59,3.187,62,2.232,63,0.853,70,2.106,79,0.007,80,0.007,95,0.727,104,0.639,119,1.795,131,4.097,132,3.3,133,2.823,134,6.695,135,6.695,136,3.657,137,3.657,138,3.3,139,3.657,140,3.657,141,3.657,142,3.657,143,2.493,145,1.608,147,4.618,150,1.429,154,2.493,155,4.638,162,4.456,163,4.937,164,2.328,165,4.456,166,3.657,167,0.974,168,3.657,169,3.657,170,2.493,171,3.3,172,2.493,173,4.456,174,3.657,175,3.657,176,1.617,177,3.81,178,2.86,179,2.041,180,6.695,181,5.589,182,5.589,183,1.871,184,2,185,3.657,186,3.657,187,3.657,188,4.937,189,3.657,190,4.937,191,3.657,192,3.657,193,3.3,194,3.657,195,3.657,196,3.657,197,4.937,198,3.657,199,3.657,200,3.657,201,3.657]],["title/interfaces/CmdConfig.html",[50,0.313,202,1.766]],["body/interfaces/CmdConfig.html",[2,0.014,3,0.119,10,1.111,22,1.892,43,0.131,48,0.234,50,0.518,53,0.62,63,0.541,70,1.083,71,3.755,79,0.005,80,0.005,95,0.793,104,0.731,107,0.82,145,1.824,150,1.123,152,1.465,167,1.111,176,1.764,202,3.094,203,1.96,204,4.451,205,3.486,206,2.375,207,3.658,208,3.658,209,2.587,210,3.658,211,3.094,212,3.851,213,4.314,214,4.148,215,3.477,216,2.496,217,2.169,218,2.442,219,2.079,220,1.535,221,1.255,222,0.975,223,1.96,224,1.535,225,1.68,226,1.856,227,1.856,228,1.083,229,1.967,230,1.471,231,1.471,232,1.471,233,1.604,234,1.68,235,1.68,236,1.763,237,2.079,238,1.856,239,2.079,240,2.079,241,2.079,242,1.535,243,1.535,244,4.833,245,3.017,246,3.017,247,3.551,248,2.079,249,2.079,250,3.551,251,3.551,252,2.079,253,2.079,254,2.079,255,2.079,256,2.079]],["title/interfaces/CommandPlugin.html",[50,0.313,220,1.921]],["body/interfaces/CommandPlugin.html",[2,0.014,3,0.135,10,1.214,22,2.068,43,0.148,48,0.242,50,0.54,53,1.23,63,0.591,70,1.228,71,3.633,79,0.006,80,0.006,95,0.84,104,0.728,107,0.929,145,1.743,150,1.273,152,1.601,167,1.655,176,1.866,202,3.133,203,2.221,204,4.122,205,3.075,206,2.261,207,3.227,208,3.227,209,2.396,210,3.227,211,2.945,212,3.396,213,3.805,214,4.014,215,2.944,216,2.296,217,1.658,218,2.068,219,2.356,220,2.435,221,2.488,222,1.932,223,3.587,224,3.043,225,3.331,226,2.103,227,2.103,228,1.228,229,2.151,230,1.667,231,1.667,232,1.667,233,1.818,234,1.904,235,1.904,236,1.998,237,2.356,238,2.103,239,2.356,240,2.356,241,2.356,242,1.739,243,1.739,244,4.946,245,3.298,246,3.298,247,3.805,248,2.356,249,2.356,250,3.805,251,3.805,252,2.356,253,2.356,254,2.356,255,2.356,256,2.356]],["title/interfaces/Config.html",[10,0.958,50,0.313]],["body/interfaces/Config.html",[2,0.014,3,0.188,10,1.866,43,0.207,48,0.257,49,1.774,50,0.539,63,0.737,79,0.008,80,0.008,107,1.77,167,1.513,202,3.192,206,2.664,209,2.734,216,1.982,218,3.098,242,2.424,243,2.424,257,3.768,258,3.876,259,3.876,260,4.488,261,3.046,262,4.098,263,3.487,264,3.284,265,3.284,266,3.284,267,3.768,268,3.096]],["title/interfaces/Config-1.html",[10,0.804,50,0.262,269,1.611]],["body/interfaces/Config-1.html",[2,0.014,3,0.193,10,1.856,43,0.213,48,0.255,49,1.823,50,0.546,63,0.749,79,0.009,80,0.009,107,1.792,111,2.388,167,1.54,202,3.084,206,2.655,209,2.76,216,2.037,218,3.061,242,2.492,243,2.492,258,3.182,259,3.182,260,4.182,261,2.839,263,2.863,264,3.376,265,3.376,270,3.873]],["title/interfaces/ConfigCompilerConfig.html",[50,0.313,215,2.323]],["body/interfaces/ConfigCompilerConfig.html",[2,0.014,3,0.133,10,1.202,22,2.047,43,0.146,48,0.241,50,0.537,53,0.693,63,0.585,70,1.21,71,3.616,79,0.006,80,0.006,95,0.834,104,0.731,107,0.916,145,1.791,150,1.254,152,1.584,167,1.202,176,1.854,202,3.12,203,2.188,204,4.095,205,3.05,206,2.248,207,3.201,208,3.201,209,2.38,210,3.201,211,3.185,212,3.369,213,3.775,214,3.995,215,3.369,216,2.278,217,1.641,218,2.047,219,2.321,220,1.714,221,1.401,222,1.088,223,2.188,224,1.714,225,1.876,226,2.072,227,2.072,228,1.21,229,2.814,230,1.642,231,1.642,232,1.642,233,1.791,234,1.876,235,3.309,236,3.473,237,4.095,238,2.072,239,2.321,240,2.321,241,2.321,242,1.714,243,1.714,244,4.933,245,3.264,246,3.264,247,3.775,248,2.321,249,2.321,250,3.775,251,3.775,252,2.321,253,2.321,254,2.321,255,2.321,256,2.321]],["title/interfaces/ConfigCompilerOptions.html",[50,0.313,271,2.602]],["body/interfaces/ConfigCompilerOptions.html",[2,0.014,3,0.186,10,1.506,43,0.205,48,0.241,50,0.491,79,0.008,80,0.008,95,0.833,104,0.697,107,1.285,145,1.753,176,1.852,229,3.15,235,3.903,236,4.097,271,4.689,272,3.737,273,3.737,274,6.028,275,5.169,276,6.491,277,5.169,278,2.468,279,2.042,280,3.737,281,5.654,282,4.503,283,4.503,284,3.737,285,4.363]],["title/interfaces/ConfigEntry.html",[50,0.313,286,2.453]],["body/interfaces/ConfigEntry.html",[2,0.014,3,0.153,36,1.983,43,0.169,48,0.257,49,1.448,50,0.489,51,1.301,53,1.075,54,1.471,55,1.471,56,1.471,57,1.214,58,1.979,60,2.456,62,1.908,63,0.646,79,0.007,80,0.007,95,0.829,104,0.575,107,1.057,114,1.057,133,1.748,184,1.502,228,2.49,278,1.618,286,3.837,287,2.527,288,4.778,289,4.265,290,4.639,291,4.134,292,2.681,293,4.071,294,2.018,295,2.527,296,3.075,297,3.837,298,2.86,299,2.166,300,2.86,301,2.681,302,3.216,303,3.075,304,4.993,305,3.075,306,3.845,307,3.075,308,3.075,309,3.075,310,3.075,311,3.075,312,1.971,313,4.644,314,3.075,315,1.681,316,1.748,317,1.979]],["title/injectables/ConfigReader.html",[0,1.356,112,2.602]],["body/injectables/ConfigReader.html",[0,1.884,1,3.088,2,0.014,3,0.154,5,2.669,36,1.953,43,0.228,45,1.989,48,0.209,50,0.49,57,1.217,62,2.333,63,0.731,79,0.007,80,0.007,97,4.081,98,2.875,101,4.682,104,0.676,105,3.091,106,2.695,107,1.72,108,4.148,109,2.695,110,1.355,111,2.558,112,4.362,113,4.148,114,1.426,115,4.148,116,4.148,117,4.148,118,3.228,119,2.77,120,4.148,121,3.091,122,4.081,123,3.091,124,2.695,125,4.148,126,5.004,127,5.004,128,3.091,129,5.579,130,3.091,228,1.884,318,6.477,319,4.276,320,4.276,321,4.276,322,4.276,323,4.276,324,4.276,325,4.276,326,4.276]],["title/interfaces/ConfigToken.html",[50,0.313,290,2.453]],["body/interfaces/ConfigToken.html",[2,0.014,3,0.155,36,1.916,43,0.171,48,0.258,49,1.465,50,0.492,51,1.317,53,1.084,54,1.483,55,1.483,56,1.483,57,1.222,58,2.003,60,2.471,62,1.92,63,0.651,79,0.007,80,0.007,95,0.834,104,0.579,107,1.07,114,1.07,133,1.769,184,1.52,228,2.597,278,1.637,286,3.424,287,2.558,288,4.374,289,3.904,290,4.592,291,4.167,292,2.713,293,4.095,294,2.035,295,2.558,296,4.698,297,3.861,298,2.895,299,2.192,300,2.895,301,2.713,302,3.242,303,3.113,304,5.018,305,3.113,306,3.876,307,3.113,308,3.113,309,3.113,310,3.113,311,3.113,312,1.98,313,4.666,314,3.113,315,1.701,316,1.769,317,2.003]],["title/interfaces/ConfigurationFile.html",[50,0.313,327,3.247]],["body/interfaces/ConfigurationFile.html",[2,0.014,3,0.15,10,0.969,43,0.254,48,0.207,50,0.316,63,0.774,79,0.007,80,0.007,95,0.947,104,0.57,107,1.038,114,1.404,145,0.936,147,3.797,164,2.321,167,1.484,170,2.481,171,3.284,172,2.481,193,4.441,211,2.416,212,2.349,261,1.786,327,5.39,328,3.638,329,6.856,330,3.355,331,4.176,332,5.648,333,3.638,334,6.4,335,5.648,336,4.176,337,4.176,338,4.176,339,6.856,340,5.648,341,4.176,342,4.176,343,4.176,344,4.176,345,4.176,346,4.176,347,4.176,348,3.019,349,4.176,350,4.176,351,3.638,352,4.176,353,4.176,354,3.638,355,4.176,356,4.176,357,4.441,358,4.176,359,5.648,360,4.176,361,5.648,362,4.176,363,5.648,364,4.176,365,4.176,366,5.648,367,4.176,368,5.648,369,3.559,370,4.176,371,4.176,372,4.626,373,4.176,374,4.176,375,4.176,376,4.176,377,4.176,378,4.176,379,4.176,380,4.176,381,4.176,382,4.083,383,4.176,384,4.176,385,5.648,386,4.176,387,2.808,388,4.176,389,4.176,390,4.176,391,4.176,392,4.176,393,4.176,394,2.481,395,4.176,396,4.176]],["title/interfaces/Contract.html",[50,0.313,51,1.263]],["body/interfaces/Contract.html",[0,1.692,1,2.552,2,0.014,3,0.132,4,2.876,5,1.701,6,3.54,7,2.459,8,4.894,9,3.186,10,1.724,11,3.725,12,3.725,13,3.725,14,3.725,15,3.725,16,3.725,18,3.15,20,4.692,22,2.799,23,4.313,25,4.313,27,4.313,29,4.313,31,4.692,35,3.186,36,1.757,39,3.186,41,3.186,42,3.841,43,0.257,44,3.247,45,1.701,46,1.778,47,2.172,48,0.209,49,1.245,50,0.277,51,1.576,52,2.901,53,0.687,54,0.941,55,0.941,56,0.941,57,0.969,58,2.775,59,3.356,60,1.391,61,3.186,62,1.762,63,0.853,64,3.186,65,3.186,66,3.186,67,3.186,68,3.186,69,2.459,70,2.326,71,3.607,72,6.173,73,3.186,74,3.186,75,3.186,76,3.186,77,3.186,78,3.186,79,0.006,80,0.006,397,3.657,398,3.657,399,3.657,400,3.657,401,3.657,402,3.657]],["title/interfaces/Contract-1.html",[50,0.262,51,1.06,269,1.611]],["body/interfaces/Contract-1.html",[2,0.014,3,0.157,36,1.923,43,0.173,48,0.258,49,1.486,50,0.495,51,1.78,53,1.094,54,1.497,55,1.497,56,1.497,57,1.23,58,2.031,60,2.489,62,1.933,63,0.657,79,0.007,80,0.007,95,0.84,104,0.583,107,1.085,114,1.085,133,1.794,184,1.541,228,2.506,278,1.66,286,3.456,287,2.593,288,4.398,289,3.926,290,4.534,291,4.206,292,2.751,293,4.398,294,2.054,295,2.593,296,3.156,297,3.888,298,2.935,299,2.223,300,2.935,301,2.751,302,3.273,303,3.156,304,5.046,305,3.156,306,3.912,307,3.156,308,3.156,309,3.156,310,3.156,311,3.156,312,1.991,313,4.692,314,3.156,315,1.725,316,1.794,317,2.031]],["title/interfaces/Contract-2.html",[50,0.262,51,1.06,403,2.058]],["body/interfaces/Contract-2.html",[2,0.014,3,0.19,6,3.826,7,3.556,18,3.648,36,2.024,43,0.261,44,4.518,46,2.571,47,3.142,48,0.243,49,1.8,50,0.4,51,2.014,52,2.571,53,1.238,54,1.36,55,1.36,56,1.36,57,1.238,58,2.46,59,2.975,60,2.011,62,1.562,63,0.597,79,0.008,80,0.008,83,2.262,114,1.314,124,3.333,317,2.46,404,4.608,405,5.289,406,5.289,407,5.289]],["title/interfaces/Contract-3.html",[50,0.262,51,1.06,408,2.724]],["body/interfaces/Contract-3.html",[2,0.014,3,0.127,22,1.4,36,2.083,43,0.141,48,0.251,49,1.206,50,0.268,51,1.541,52,2.45,53,1.102,54,1.508,55,1.508,56,1.508,57,0.947,58,2.344,60,1.347,63,0.847,79,0.006,80,0.006,95,0.647,104,0.522,107,0.881,118,2.834,152,1.084,167,1.71,178,1.579,183,2.614,184,1.779,223,2.105,228,2.097,288,2.233,294,1.251,306,2.382,313,4.714,315,2.317,316,1.456,317,1.648,409,3.087,410,5.864,411,5.5,412,5.864,413,4.025,414,3.543,415,2.382,416,2.233,417,3.543,418,2.382,419,3.543,420,1.648,421,1.893,422,3.543,423,4.851,424,7.503,425,6.109,426,5.33,427,5.069,428,4.617,429,5.039,430,3.543,431,5.039,432,5.039,433,2.786,434,3.543,435,5.039,436,5.039,437,5.039,438,6.387,439,3.747,440,5.039,441,5.039,442,3.543,443,3.543,444,3.543,445,3.543,446,3.543]],["title/interfaces/Contract-4.html",[50,0.262,51,1.06,447,2.329]],["body/interfaces/Contract-4.html",[0,1.586,1,2.427,2,0.014,3,0.12,18,1.624,22,1.32,43,0.273,45,1.553,48,0.201,49,1.137,50,0.365,51,1.477,52,1.624,53,0.908,54,1.242,55,1.242,56,1.242,57,0.908,60,1.27,62,2.03,63,0.377,69,2.245,79,0.005,80,0.005,95,0.728,104,0.691,110,2.3,114,1.545,133,1.372,145,0.748,152,2.352,176,1.773,178,1.489,217,1.53,222,2.144,228,1.863,317,1.553,330,3.693,416,3.043,420,2.892,426,4.101,427,4.101,428,3.491,448,2.414,449,5.186,450,5.981,451,4.888,452,3.34,453,4.844,454,3.34,455,5.186,456,3.34,457,3.34,458,2.626,459,2.626,460,2.869,461,2.414,462,2.245,463,1.553,464,2.104,465,2.414,466,2.245,467,5.707,468,2.94,469,2.626,470,2.626,471,4.888,472,2.626,473,3.043,474,2.626,475,4.461,476,4.461,477,5.574,478,2.626,479,4.888,480,3.798]],["title/interfaces/Contract-5.html",[50,0.262,51,1.06,481,3.018]],["body/interfaces/Contract-5.html",[0,2.072,2,0.014,3,0.178,43,0.25,45,2.3,48,0.225,49,1.683,50,0.374,51,1.93,52,2.404,57,0.929,60,1.88,62,1.864,63,0.854,79,0.008,80,0.008,133,3.008,150,2.148,176,1.41,178,2.204,183,2.204,184,2.227,294,1.745,411,5.684,416,4.38,482,3.888,483,6.082,484,6.59,485,4.944,486,3.549,487,4.307,488,4.307,489,4.307,490,6.379,491,4.307,492,5.498,493,4.307,494,5.498,495,4.307,496,6.055,497,4.307,498,6.055,499,4.307,500,4.307]],["title/interfaces/Env.html",[50,0.313,206,1.356]],["body/interfaces/Env.html",[2,0.014,3,0.196,10,1.863,43,0.216,48,0.26,49,1.855,50,0.55,63,0.757,79,0.009,80,0.009,107,1.806,167,1.556,202,3.108,206,2.556,209,1.996,216,2.073,218,2.996,242,2.535,243,2.535,257,3.94,258,3.985,259,3.985,260,4.579,261,3.243,262,4.286,263,3.585,264,3.435,265,3.435,266,3.435,267,3.94,268,3.238]],["title/interfaces/Env-1.html",[50,0.262,206,1.137,269,1.611]],["body/interfaces/Env-1.html",[2,0.014,3,0.202,10,1.852,43,0.223,48,0.258,49,1.909,50,0.557,63,0.771,79,0.009,80,0.009,107,1.829,111,2.5,167,1.584,202,2.92,206,2.514,209,2.054,216,2.133,218,2.908,242,2.609,243,2.609,258,3.332,259,3.332,260,4.302,261,3.148,263,2.998,264,3.535,265,3.535,270,4.055]],["title/interfaces/IConfigCmdOptions.html",[50,0.313,501,3.247]],["body/interfaces/IConfigCmdOptions.html",[2,0.014,3,0.196,10,1.863,43,0.266,48,0.217,50,0.412,53,1.025,79,0.009,80,0.009,95,0.7,104,0.647,111,2.429,145,1.628,220,3.12,221,2.073,222,1.981,224,2.535,225,2.775,235,4.036,312,1.914,501,5.275,502,4.286,503,4.849,504,4.286,505,4.286,506,5.731,507,3.94,508,4.227]],["title/interfaces/IConfigsCompiler.html",[50,0.313,109,2.602]],["body/interfaces/IConfigsCompiler.html",[0,2.08,1,2.981,2,0.014,3,0.179,5,2.313,36,1.888,43,0.251,45,2.313,48,0.225,50,0.527,57,1.191,62,2.168,63,0.787,79,0.008,80,0.008,97,4.624,98,3.344,101,5.478,103,3.911,104,0.621,105,3.595,106,3.134,107,1.732,108,5.039,109,3.991,110,2.007,111,2.217,112,3.991,113,3.595,114,1.236,115,3.595,116,3.595,117,3.595,118,2.797,119,2.127,120,3.595,121,3.595,122,3.134,123,3.595,124,3.134,125,3.595,126,4.579,127,3.595,128,3.595,129,3.595,130,3.595,312,1.807,509,4.974]],["title/interfaces/IContext.html",[46,2.008,50,0.313]],["body/interfaces/IContext.html",[2,0.014,3,0.149,7,2.789,10,1.586,11,4.064,12,4.064,13,4.064,14,4.064,15,4.064,16,4.61,22,3.156,23,4.064,25,4.064,27,4.064,29,4.064,43,0.165,44,3.543,46,2.733,48,0.134,50,0.314,79,0.007,80,0.007,104,0.74,107,1.031,315,3.07,421,3.004,510,3.614,511,5.623,512,5.065,513,4.149,514,7.535,515,4.149,516,4.149,517,4.149,518,4.149,519,4.149,520,4.149,521,6.378,522,4.149,523,5.623,524,4.149]],["title/interfaces/IDevCmdOptions.html",[50,0.313,525,3.247]],["body/interfaces/IDevCmdOptions.html",[2,0.014,3,0.145,10,1.696,36,1.039,42,2.273,43,0.219,48,0.179,50,0.306,53,0.76,70,1.327,79,0.006,80,0.006,95,0.519,104,0.73,111,1.801,145,1.731,150,2.141,205,3.934,206,2.457,207,3.999,208,4.129,211,3.126,220,2.569,221,1.537,222,1.631,224,1.88,225,2.058,226,3.106,227,3.106,261,1.728,418,2.717,503,3.993,504,3.178,506,5.852,507,2.921,508,4.972,525,4.343,526,3.178,527,6.519,528,5.011,529,3.178,530,2.921,531,3.178,532,3.521,533,4.343,534,3.521,535,5.481,536,3.521,537,3.521,538,4.343,539,3.521,540,3.521,541,3.521,542,3.178]],["title/interfaces/IENV.html",[50,0.313,216,1.57]],["body/interfaces/IENV.html",[2,0.014,3,0.136,10,1.224,22,2.085,43,0.15,48,0.242,50,0.542,53,0.711,63,0.596,70,1.243,71,3.647,79,0.006,80,0.006,95,0.844,104,0.731,107,0.94,145,1.747,150,2.069,152,1.615,167,1.224,176,1.876,202,3.144,203,2.248,204,4.144,205,3.094,206,2.271,207,3.248,208,3.248,209,2.408,210,3.248,211,2.958,212,3.418,213,3.83,214,4.029,215,2.969,216,2.501,217,1.672,218,2.085,219,2.385,220,1.76,221,1.439,222,1.118,223,2.248,224,1.76,225,1.927,226,3.699,227,3.699,228,1.733,229,2.169,230,1.687,231,1.687,232,1.687,233,1.84,234,1.927,235,1.927,236,2.022,237,2.385,238,2.129,239,2.385,240,2.385,241,2.385,242,1.76,243,1.76,244,4.956,245,3.326,246,3.326,247,3.83,248,2.385,249,2.385,250,3.83,251,3.83,252,2.385,253,2.385,254,2.385,255,2.385,256,2.385,543,3.297,544,3.785]],["title/interfaces/IENV-1.html",[50,0.262,216,1.317,269,1.611]],["body/interfaces/IENV-1.html",[2,0.014,3,0.201,5,2.603,43,0.222,48,0.22,50,0.424,79,0.009,80,0.009,95,0.875,104,0.655,206,2.619,216,2.796,279,2.211,299,2.85,418,4.943,533,5.781,545,4.401,546,6.168,547,6.667,548,5.597,549,5.597,550,4.401,551,4.876]],["title/interfaces/IErrorHandler.html",[50,0.313,552,2.985]],["body/interfaces/IErrorHandler.html",[2,0.014,3,0.13,36,0.931,43,0.256,48,0.208,50,0.488,53,0.962,54,1.316,55,1.316,56,1.316,63,0.409,79,0.006,80,0.006,83,1.548,95,0.657,104,0.695,110,1.621,145,0.811,164,3.046,167,1.376,176,1.84,179,2.487,217,2.539,261,2.188,278,1.945,279,1.43,294,1.278,312,1.84,369,3.224,394,3.039,420,1.684,468,2.28,528,3.224,552,4.289,553,2.617,554,3.972,555,4.985,556,4.457,557,3.989,558,3.171,559,3.892,560,3.62,561,3.62,562,3.739,563,2.846,564,2.281,565,2.617,566,3.154,567,3.154,568,5.071,569,2.036,570,3.525,571,3.698,572,3.154,573,3.154,574,4.023,575,3.154,576,2.605,577,3.154,578,4.662,579,3.698,580,3.154,581,3.698,582,3.698,583,2.617,584,2.434,585,2.617,586,2.617,587,2.846,588,3.154,589,4.457,590,2.846,591,3.039]],["title/interfaces/IGlobalErrorHandler.html",[50,0.313,592,2.985]],["body/interfaces/IGlobalErrorHandler.html",[2,0.014,3,0.157,6,2.115,18,2.115,22,1.719,43,0.307,48,0.188,50,0.329,58,2.024,79,0.009,80,0.007,95,1.026,122,2.741,152,1.331,164,2.684,167,1.347,170,2.584,172,2.584,177,2.925,184,2.049,206,2.145,217,1.839,278,1.654,279,1.719,312,2.072,369,3.658,413,3.658,468,2.912,554,2.447,555,2.925,557,2.925,558,2.325,559,3.697,569,3.265,582,4.196,584,3.903,591,2.584,592,4.723,593,3.421,594,6.508,595,2.741,596,3.145,597,3.145,598,3.79,599,4.351,600,3.79,601,3.421,602,3.421,603,4.196,604,3.326,605,3.421,606,2.115,607,3.421,608,3.145,609,3.421,610,3.421,611,3.79,612,3.421,613,3.421,614,5.057,615,4.723,616,5.057,617,3.79,618,3.145,619,4.564,620,2.741,621,3.79,622,3.421,623,3.79,624,3.79,625,3.79,626,3.145,627,3.79]],["title/interfaces/IGlobalSetOptions.html",[50,0.313,466,2.776]],["body/interfaces/IGlobalSetOptions.html",[0,1.733,1,2.6,2,0.014,3,0.136,18,1.84,22,1.495,43,0.284,45,1.76,48,0.213,49,1.288,50,0.399,51,1.158,52,1.84,53,0.992,54,1.358,55,1.358,56,1.358,57,0.992,60,1.439,62,2.116,63,0.427,69,2.544,79,0.006,80,0.006,95,0.78,104,0.678,110,2.084,133,1.555,145,1.362,152,2.293,176,1.876,178,1.687,217,1.672,222,1.942,228,1.243,317,1.76,416,3.326,420,3.059,426,4.394,427,4.394,428,3.816,448,2.736,449,4.15,450,4.779,451,4.15,453,4.514,455,4.779,458,2.976,459,2.976,460,3.135,461,2.736,462,2.544,463,1.76,464,2.385,465,2.736,466,3.548,467,6.13,468,3.083,469,2.976,470,2.976,471,5.171,472,2.976,473,3.326,474,2.976,475,4.779,476,4.779,477,5.78,478,2.976,479,5.171,480,4.15]],["title/interfaces/IInjectableConfigs.html",[50,0.313,628,3.247]],["body/interfaces/IInjectableConfigs.html",[0,2.206,2,0.014,3,0.166,10,1.716,43,0.239,48,0.239,50,0.349,53,0.866,54,1.185,55,1.185,56,1.185,63,0.681,79,0.007,80,0.007,95,0.774,110,2.129,114,1.839,167,1.654,178,2.054,179,3.597,217,1.91,266,2.903,288,4.999,294,1.626,295,4.594,315,1.82,316,1.893,423,4.783,463,2.143,486,4.162,628,4.741,629,4.014,630,7.4,631,5.252,632,3.33,633,4.607,634,4.014,635,7.129,636,3.623,637,5.284,638,4.014,639,4.607,640,4.607,641,6.029,642,6.029,643,3.097,644,4.014,645,4.014,646,4.607,647,4.607]],["title/interfaces/IMiddlewaresScope.html",[50,0.313,648,3.247]],["body/interfaces/IMiddlewaresScope.html",[2,0.014,3,0.168,6,3.773,36,1.96,43,0.285,46,2.96,47,2.778,48,0.219,50,0.354,54,1.203,55,1.203,56,1.203,58,2.175,63,0.528,79,0.007,80,0.007,95,0.869,107,1.162,114,1.162,152,1.862,167,1.57,279,1.848,312,2.29,315,1.848,316,1.921,348,5.611,411,4.893,413,4.518,463,2.175,595,2.946,604,3.88,606,2.273,620,2.946,632,3.38,648,5.638,649,3.677,650,4.074,651,4.416,652,5.303,653,6.088,654,6.769,655,4.074,656,4.676,657,4.676,658,4.676]],["title/interfaces/INunjunksRenderOptions.html",[50,0.313,659,2.776]],["body/interfaces/INunjunksRenderOptions.html",[2,0.014,3,0.195,43,0.266,48,0.234,50,0.411,79,0.009,80,0.009,95,0.859,104,0.646,164,2.749,176,2.259,178,3.375,278,2.544,279,2.144,576,3.959,659,4.876,660,4.267,661,6.775,662,6.115,663,6.775,664,6.775,665,6.775,666,4.267,667,4.267,668,4.728,669,4.498]],["title/interfaces/IPreProcess.html",[50,0.313,670,3.247]],["body/interfaces/IPreProcess.html",[2,0.014,3,0.122,5,2.273,10,0.787,36,0.873,43,0.289,47,2.016,48,0.268,50,0.257,53,0.919,54,1.473,55,1.473,56,1.473,58,1.579,63,0.646,70,1.88,79,0.009,80,0.005,83,3.047,95,0.627,104,0.635,107,0.843,110,2.103,145,1.549,152,1.038,167,1.453,209,1.243,221,2.177,222,1.003,229,2.573,230,2.958,231,2.792,232,2.792,233,2.784,271,3.079,278,1.291,279,1.341,285,2.282,286,2.016,290,2.016,295,2.016,297,2.016,299,1.728,312,1.633,315,2.622,316,1.395,463,1.579,465,2.454,558,1.814,563,2.669,565,2.454,570,2.016,576,3.189,591,2.016,595,2.139,596,2.454,597,2.454,598,2.957,602,2.669,603,2.454,626,2.454,669,2.282,670,3.842,671,2.957,672,4.257,673,3.532,674,2.957,675,5.726,676,2.454,677,3.394,678,2.376,679,2.282,680,2.669,681,3.394,682,2.669,683,3.394,684,2.957,685,3.394,686,3.394,687,3.394,688,3.394,689,3.394,690,3.285,691,2.669,692,4.257,693,3.394,694,3.394,695,3.394,696,3.842,697,2.669,698,3.394,699,2.454,700,3.394,701,3.394,702,3.394,703,3.394,704,3.394,705,4.887,706,4.887,707,3.394,708,3.394,709,3.394,710,2.957,711,3.394,712,3.394,713,3.394,714,3.394,715,2.454,716,2.669,717,2.454,718,3.394,719,2.669,720,2.957,721,2.669,722,3.394,723,3.394,724,2.454,725,2.282,726,2.282,727,2.454,728,2.139,729,2.282]],["title/interfaces/IResult.html",[50,0.313,730,2.103]],["body/interfaces/IResult.html",[2,0.014,3,0.178,36,1.272,43,0.25,48,0.25,50,0.526,53,1.186,54,1.623,55,1.623,56,1.623,79,0.008,80,0.008,104,0.652,114,1.727,152,1.512,292,3.115,293,3.976,294,1.745,312,1.41,315,1.953,316,2.031,317,2.3,413,3.976,486,3.549,595,3.115,604,2.517,606,3.068,651,4.349,730,3.851,731,3.574,732,4.962,733,5.498,734,4.767,735,4.944,736,3.372,737,3.574,738,3.888]],["title/interfaces/IResultScope.html",[50,0.313,734,2.602]],["body/interfaces/IResultScope.html",[2,0.014,3,0.181,36,1.295,43,0.253,48,0.251,50,0.53,53,1.2,54,1.642,55,1.642,56,1.642,79,0.008,80,0.008,104,0.624,114,1.742,152,1.54,292,3.172,293,4.644,294,1.777,312,2.103,315,1.989,316,2.068,317,2.341,413,4.644,486,2.831,595,3.172,604,3.753,606,3.103,651,4.164,730,3.753,731,3.639,733,4.385,734,4.644,736,2.69,737,3.639,738,3.958]],["title/interfaces/IRouter.html",[50,0.313,739,2.602]],["body/interfaces/IRouter.html",[2,0.014,3,0.117,43,0.259,48,0.105,50,0.246,63,0.736,79,0.005,80,0.005,95,0.999,104,0.722,110,1.029,111,2.11,150,1.901,152,0.994,162,3.722,164,2.68,167,1.513,170,2.812,172,2.812,177,2.184,183,2.11,209,2.77,222,0.96,229,1.335,230,2.11,231,1.448,232,3.327,261,2.625,269,2.202,372,2.348,387,2.184,420,2.202,439,2.53,463,1.511,543,2.83,554,1.827,559,2.843,576,3.467,667,3.722,678,2.301,679,2.184,682,2.554,692,4.124,699,3.422,739,4.539,740,2.83,741,3.249,742,4.124,743,2.047,744,2.184,745,3.249,746,4.037,747,3.249,748,4.037,749,4.734,750,3.249,751,3.249,752,3.249,753,3.249,754,3.249,755,6.523,756,7.204,757,7.72,758,3.249,759,4.734,760,3.249,761,4.865,762,7.464,763,7.464,764,6.137,765,3.249,766,3.249,767,3.249,768,4.734,769,3.249,770,3.249,771,3.249,772,3.249,773,3.249,774,3.249,775,4.124,776,6.523,777,3.249,778,3.249,779,3.182,780,6.523,781,3.249,782,3.249,783,3.249,784,3.249,785,4.124,786,3.249,787,3.249,788,3.249,789,3.249,790,3.249,791,4.734,792,1.93,793,3.249,794,3.249,795,4.734,796,3.249,797,3.249,798,3.249,799,3.249,800,3.249,801,3.249,802,3.249,803,3.249,804,3.249,805,3.249,806,3.249,807,3.249,808,3.249]],["title/interfaces/IRouterCmdOptions.html",[50,0.313,809,3.247]],["body/interfaces/IRouterCmdOptions.html",[2,0.014,3,0.157,5,2.027,10,1.685,36,1.121,42,2.451,43,0.231,48,0.188,50,0.33,53,0.819,70,1.431,79,0.007,80,0.007,95,0.559,104,0.728,111,1.943,145,1.675,209,2.661,211,3.196,220,2.703,221,1.657,222,1.717,224,2.027,225,2.219,229,2.985,230,3.401,231,3.401,232,3.455,234,3.699,261,1.864,263,2.329,394,2.589,460,4.143,503,4.201,504,3.427,505,3.427,506,5.603,507,3.151,508,4.395,529,3.427,530,3.151,531,3.427,576,2.219,678,3.532,699,3.151,792,2.589,809,4.57,810,3.427,811,3.797,812,3.797,813,3.797,814,3.797,815,3.797,816,3.427,817,3.797,818,3.797,819,3.797,820,3.797,821,3.797]],["title/interfaces/IRouterMagic.html",[50,0.313,822,2.776]],["body/interfaces/IRouterMagic.html",[2,0.014,3,0.094,36,1.877,43,0.218,48,0.255,50,0.37,53,1.228,54,1.68,55,1.68,56,1.68,63,0.843,79,0.004,80,0.004,83,2.094,95,0.762,104,0.699,110,1.742,114,1.836,119,1.717,145,1.33,150,2.021,152,0.798,164,2.843,167,1.811,184,0.921,217,2.192,221,1.527,222,1.186,228,0.856,302,1.467,312,0.744,315,2.346,316,2.684,330,2.385,382,1.885,420,1.213,421,1.394,423,1.643,439,3.697,463,1.213,512,4.216,643,5.022,676,1.885,678,1.268,690,2.699,736,2.616,739,3.465,792,1.549,822,2.699,823,1.643,824,4.669,825,4.292,826,2.051,827,2.051,828,2.051,829,5.555,830,2.051,831,2.051,832,1.885,833,1.753,834,4.723,835,2.051,836,3.539,837,1.753,838,5.303,839,5.303,840,2.53,841,3.992,842,2.903,843,2.903,844,3.157,845,3.741,846,3.157,847,4.324,848,2.051,849,2.051,850,2.051,851,2.051,852,1.753,853,3.157,854,3.157,855,5.653,856,3.539,857,2.051,858,1.753,859,3.157,860,1.753,861,2.051,862,2.051,863,2.051,864,2.051,865,2.051,866,2.051,867,3.975,868,3.157,869,2.051,870,2.051,871,3.157,872,3.157,873,2.051,874,2.051,875,2.051,876,2.051,877,2.051,878,1.885,879,2.051,880,2.051,881,1.753,882,2.051,883,2.051,884,1.885,885,2.051,886,2.051]],["title/interfaces/ISimpleLoggerOptions.html",[50,0.313,887,2.985]],["body/interfaces/ISimpleLoggerOptions.html",[2,0.014,3,0.207,43,0.275,48,0.241,50,0.436,79,0.009,80,0.009,95,0.891,111,2.569,150,2.535,278,2.639,279,2.278,724,5.018,887,5.384,888,4.167,889,4.533,890,6.89,891,6.734,892,4.533,893,5.022]],["title/interfaces/IStaticSerializeOptions.html",[50,0.313,894,2.776]],["body/interfaces/IStaticSerializeOptions.html",[2,0.014,3,0.191,36,1.696,43,0.21,48,0.213,50,0.499,79,0.008,80,0.008,104,0.587,110,2.089,114,1.957,119,3.212,143,3.149,145,1.608,154,3.917,179,3.828,222,1.947,294,1.871,421,3.523,453,4.155,894,4.432,895,4.168,896,4.732,897,3.34,898,6.542,899,6.542,900,6.542,901,5.744,902,4.168,903,5.744,904,4.168,905,4.168]],["title/interfaces/IStaticTypedResolver.html",[50,0.313,897,2.602]],["body/interfaces/IStaticTypedResolver.html",[2,0.014,3,0.157,36,1.993,43,0.173,48,0.188,50,0.439,79,0.007,80,0.007,104,0.647,110,2.367,114,1.895,119,3.314,143,3.881,145,0.975,154,4.437,179,3.767,222,2.206,294,1.536,421,3.725,453,4.392,894,2.925,895,3.421,896,2.741,897,3.658,898,6.75,899,6.75,900,6.75,901,6.072,902,4.564,903,6.072,904,5.137,905,4.564,906,5.057,907,5.057,908,4.351,909,4.351,910,3.79,911,4.351,912,3.79,913,4.351]],["title/interfaces/IStrictConfigsCompiler.html",[50,0.313,106,2.602]],["body/interfaces/IStrictConfigsCompiler.html",[0,2.08,1,2.981,2,0.014,3,0.179,5,2.313,36,1.949,43,0.251,45,2.313,48,0.225,50,0.527,57,1.191,62,2.168,63,0.787,79,0.008,80,0.008,97,4.624,98,3.344,101,5.478,103,3.911,104,0.621,105,3.595,106,3.991,107,1.732,108,5.039,109,3.134,110,1.576,111,2.217,112,3.991,113,3.595,114,1.236,115,3.595,116,3.595,117,3.595,118,2.797,119,2.127,120,3.595,121,3.595,122,3.134,123,3.595,124,3.134,125,3.595,126,4.579,127,3.595,128,3.595,129,3.595,130,3.595,312,1.807,914,4.974]],["title/interfaces/IView.html",[50,0.313,915,3.247]],["body/interfaces/IView.html",[2,0.014,3,0.189,10,1.217,43,0.208,48,0.212,50,0.496,53,0.986,54,1.349,55,1.349,56,1.349,79,0.008,80,0.008,83,2.243,95,0.841,104,0.728,110,1.662,114,1.628,145,1.601,279,2.072,299,2.67,330,3.891,420,2.44,576,3.809,662,5.882,915,5.616,916,4.124,917,6.55,918,7.481,919,7.481,920,7.481,921,4.124,922,4.124,923,3.791,924,4.569]],["title/interfaces/IViewEngine.html",[50,0.313,564,2.602]],["body/interfaces/IViewEngine.html",[2,0.014,3,0.202,43,0.223,48,0.182,50,0.425,79,0.009,80,0.009,104,0.711,164,2.809,312,2.278,468,3.047,564,4.308,606,3.819,730,2.862,925,4.898,926,5.956,927,6.837,928,5.622,929,6.837,930,5.622]],["title/interfaces/InnerCmdConfig.html",[50,0.313,238,2.323]],["body/interfaces/InnerCmdConfig.html",[2,0.014,3,0.138,10,1.239,22,2.11,43,0.153,48,0.243,50,0.545,53,0.723,63,0.603,70,1.264,71,3.666,79,0.006,80,0.006,95,0.85,104,0.726,107,0.956,145,1.752,150,1.31,152,1.633,167,1.239,176,1.89,202,3.22,203,2.286,204,4.174,205,3.122,206,2.472,207,3.277,208,3.277,209,2.426,210,3.277,211,2.976,212,3.449,213,3.864,214,4.05,215,3.004,216,2.332,217,1.692,218,2.11,219,2.425,220,1.79,221,1.463,222,1.137,223,2.286,224,1.79,225,1.959,226,2.165,227,2.165,228,1.264,229,2.194,230,1.715,231,1.715,232,1.715,233,1.871,234,1.959,235,1.959,236,2.057,237,2.425,238,3.004,239,2.425,240,2.425,241,4.174,242,1.79,243,1.79,244,4.97,245,3.365,246,3.365,247,3.864,248,2.425,249,2.425,250,3.864,251,3.864,252,2.425,253,2.425,254,2.425,255,2.425,256,2.425]],["title/interfaces/InnerConfigCompilerOptions.html",[50,0.313,280,2.985]],["body/interfaces/InnerConfigCompilerOptions.html",[2,0.014,3,0.201,10,1.582,43,0.222,48,0.247,50,0.516,79,0.009,80,0.009,95,0.875,104,0.607,107,1.391,145,1.528,176,1.945,229,2.801,235,3.471,236,3.643,271,4.822,272,4.046,273,4.046,274,5.361,278,2.593,279,2.211,280,4.929,281,5.94,282,4.876,283,4.876,284,4.046,285,4.583]],["title/interfaces/InnerRouterOptions.html",[50,0.313,743,2.602]],["body/interfaces/InnerRouterOptions.html",[2,0.014,3,0.192,43,0.211,48,0.243,50,0.5,70,1.748,79,0.009,80,0.009,95,0.848,104,0.712,107,1.323,145,1.481,176,1.886,229,2.716,230,2.947,231,2.947,232,2.947,233,3.214,278,2.024,279,2.103,673,3.848,696,5.198,697,4.185,726,3.578,729,4.834,743,4.531,744,3.578,746,5.59,748,5.59,931,3.848,932,4.185,933,3.848,934,4.185]],["title/classes/JsonResult.html",[57,0.776,935,2.602]],["body/classes/JsonResult.html",[2,0.014,3,0.141,43,0.287,48,0.2,53,1.015,54,1.388,55,1.388,56,1.388,57,1.015,60,2.053,63,0.866,79,0.006,80,0.006,95,0.794,104,0.623,110,1.959,133,2.218,145,0.876,167,1.434,179,1.9,183,2.406,222,1.154,266,2.463,269,2.511,289,4.171,312,1.996,315,1.544,316,1.606,317,1.818,403,3.206,415,2.628,447,3.629,460,2.322,461,2.826,462,2.628,463,1.818,464,2.463,584,2.628,615,4.47,636,3.073,637,5.243,715,2.826,725,2.628,728,2.463,730,3.395,732,4.862,734,4.409,736,3.563,792,3.206,896,3.401,935,4.202,936,3.073,937,3.405,938,3.909,939,3.405,940,3.909,941,5.398,942,3.909,943,4.47,944,3.909,945,3.405,946,3.073,947,6.668,948,3.073,949,3.073,950,3.073,951,6.183,952,3.909,953,3.073,954,3.405,955,5.398,956,3.909,957,3.405,958,3.909,959,5.398,960,3.909,961,3.909,962,3.909,963,3.909,964,4.244]],["title/interfaces/JsonResultOptions.html",[50,0.313,728,2.602]],["body/interfaces/JsonResultOptions.html",[2,0.014,3,0.165,43,0.182,48,0.23,50,0.455,53,0.861,54,1.179,55,1.179,56,1.179,79,0.007,80,0.007,95,0.771,104,0.675,114,1.493,145,1.502,154,4.226,167,1.393,176,1.912,183,2.987,217,2.511,228,1.504,269,3.118,278,2.284,279,1.81,330,3.568,403,4.502,420,2.131,447,4.506,725,4.038,728,4.483,896,4.654,935,3.785,946,5.808,948,5.808,949,5.808,950,5.808,965,3.603,966,3.603]],["title/classes/NormalizedMessage.html",[57,0.776,967,2.985]],["body/classes/NormalizedMessage.html",[2,0.014,3,0.073,48,0.134,50,0.153,52,3.854,57,0.381,62,2.419,63,0.87,70,0.665,79,0.003,80,0.003,95,0.422,104,0.662,114,1.472,119,3.416,138,2.586,143,2.837,145,1.177,147,1.363,150,2.547,154,1.204,183,2.641,184,0.715,217,1.514,269,2.967,372,3.796,387,1.363,415,3.211,433,2.586,439,1.758,554,2.954,559,2.432,860,1.363,967,5.41,968,1.465,969,4.575,970,4.9,971,4.9,972,5.885,973,3.616,974,3.616,975,3.616,976,3.616,977,3.616,978,3.289,979,3.289,980,3.289,981,3.289,982,3.289,983,3.616,984,4.161,985,4.161,986,4.161,987,4.161,988,4.161,989,2.866,990,4.612,991,3.289,992,2.027,993,2.027,994,2.027,995,2.027,996,2.027,997,2.027,998,3.264,999,2.027,1000,5.548,1001,2.027,1002,3.264,1003,2.027,1004,3.756,1005,2.027,1006,2.027,1007,5.377,1008,2.027,1009,4.575,1010,2.866,1011,5.162,1012,2.027,1013,4.575,1014,2.866,1015,4.9,1016,2.027,1017,4.161,1018,2.866,1019,3.616,1020,2.027,1021,2.866,1022,2.866,1023,3.616,1024,2.027,1025,2.866,1026,2.866,1027,2.027,1028,2.866,1029,2.027,1030,2.027,1031,2.027,1032,2.027,1033,2.027,1034,2.027,1035,2.027,1036,2.027,1037,2.027,1038,2.027,1039,4.161,1040,1.766,1041,4.161,1042,1.766,1043,4.161,1044,1.766,1045,2.866,1046,1.766,1047,2.866,1048,1.766,1049,2.866,1050,1.766,1051,2.866,1052,1.766,1053,1.766,1054,1.766,1055,1.766,1056,1.766,1057,1.766,1058,1.766,1059,1.766,1060,1.766,1061,1.766,1062,1.766,1063,1.766,1064,1.766,1065,1.766,1066,1.766,1067,1.465,1068,1.766,1069,1.766,1070,2.866,1071,1.766,1072,1.766,1073,1.766,1074,1.766,1075,1.766,1076,1.766,1077,1.766,1078,1.766,1079,1.766,1080,2.866,1081,1.766,1082,2.866,1083,2.866,1084,2.866,1085,2.866,1086,2.866,1087,1.766,1088,2.866,1089,2.866,1090,1.766,1091,1.766]],["title/interfaces/NormalizedMessageJson.html",[50,0.313,990,2.985]],["body/interfaces/NormalizedMessageJson.html",[2,0.014,3,0.1,48,0.165,50,0.211,52,3.554,57,0.525,62,2.374,63,0.907,70,0.917,79,0.004,80,0.004,95,0.543,104,0.69,114,1.713,119,3.169,143,1.658,147,1.877,150,2.6,183,2.982,184,0.985,217,1.805,269,3.282,372,4.656,415,3.829,433,3.326,439,2.26,554,3.622,559,2.6,860,1.877,967,4.981,968,2.018,969,5.611,970,5.829,971,5.829,972,6.053,973,2.432,974,2.432,975,2.432,976,2.432,977,2.432,983,2.432,984,2.432,985,2.432,986,2.432,987,2.432,988,2.432,989,2.432,990,4.425,998,3.326,1000,5.548,1002,3.326,1004,4.015,1007,4.962,1009,4.448,1010,2.432,1011,5.332,1013,4.962,1014,2.432,1015,4.962,1017,4.448,1018,2.432,1019,2.432,1021,2.432,1022,2.432,1023,2.432,1025,2.432,1026,2.432,1028,2.432,1039,4.962,1040,2.432,1041,4.962,1042,2.432,1043,4.962,1044,2.432,1045,3.685,1046,2.432,1047,3.685,1048,2.432,1049,3.685,1050,2.432,1051,3.685,1052,2.432,1053,2.432,1054,2.432,1055,2.432,1056,2.432,1057,2.432,1058,2.432,1059,2.432,1060,2.432,1061,2.432,1062,2.432,1063,2.432,1064,2.432,1065,2.432,1066,2.432,1067,2.018,1068,2.432,1069,2.432,1070,3.685,1071,2.432,1072,2.432,1073,2.432,1074,2.432,1075,2.432,1076,2.432,1077,2.432,1078,2.432,1079,2.432,1080,3.685,1081,2.432,1082,3.685,1083,3.685,1084,3.685,1085,3.685,1086,3.685,1087,2.432,1088,3.685,1089,3.685,1090,2.432,1091,2.432]],["title/injectables/NunjunksEngine.html",[0,1.356,562,2.602]],["body/injectables/NunjunksEngine.html",[0,1.801,2,0.014,3,0.144,43,0.289,45,1.862,48,0.129,57,0.752,60,1.522,62,2.153,63,0.797,79,0.006,80,0.006,104,0.649,124,2.522,133,3.262,184,1.937,221,1.522,222,1.182,279,1.581,312,2.342,468,3.249,562,3.457,564,3.457,565,2.893,597,2.893,606,3.543,615,2.893,651,4.001,659,4.9,669,2.691,926,4.78,953,4.314,1092,3.487,1093,7.289,1094,5.487,1095,4.003,1096,6.261,1097,4.003,1098,5.487,1099,5.487,1100,4.003,1101,5.487,1102,4.003,1103,5.487,1104,4.003,1105,4.003,1106,6.261,1107,4.003,1108,4.003,1109,4.003,1110,4.003,1111,4.003,1112,5.487,1113,3.487,1114,5.487,1115,4.003,1116,5.487,1117,4.003,1118,4.003,1119,4.003,1120,4.003,1121,4.003,1122,5.487,1123,4.003]],["title/interfaces/ParamsOptions.html",[50,0.313,837,2.776]],["body/interfaces/ParamsOptions.html",[2,0.014,3,0.095,36,1.822,43,0.219,48,0.255,50,0.373,53,1.232,54,1.686,55,1.686,56,1.686,63,0.845,79,0.004,80,0.004,83,2.106,95,0.765,104,0.7,110,1.751,114,1.791,119,1.73,145,1.469,150,2.029,152,0.805,164,2.851,167,1.813,184,0.929,217,2.198,221,1.538,222,1.195,228,0.864,302,1.481,312,0.751,315,2.356,316,2.693,382,1.903,420,1.225,421,1.407,423,1.659,439,3.708,463,1.225,512,4.232,643,4.844,676,1.903,678,1.28,690,2.719,736,2.632,739,2.549,792,1.564,822,1.77,823,1.659,824,3.18,825,2.924,826,2.07,827,2.07,828,2.07,829,5.569,830,2.07,831,2.07,832,1.903,833,1.77,834,4.739,835,2.07,836,4.311,837,2.719,838,5.666,839,5.666,840,2.549,841,4.009,842,2.924,843,2.924,844,3.18,845,3.757,846,3.18,847,4.345,848,2.07,849,2.07,850,2.07,851,2.07,852,1.77,853,3.18,854,3.18,855,5.666,856,3.56,857,2.07,858,1.77,859,3.18,860,1.77,861,2.07,862,2.07,863,2.07,864,2.07,865,2.07,866,2.07,867,3.995,868,3.18,869,2.07,870,2.07,871,3.18,872,3.18,873,2.07,874,2.07,875,2.07,876,2.07,877,2.07,878,1.903,879,2.07,880,2.07,881,1.77,882,2.07,883,2.07,884,1.903,885,2.07,886,2.07]],["title/classes/RealConfigCollection.html",[57,0.776,301,2.602]],["body/classes/RealConfigCollection.html",[2,0.014,3,0.14,36,2.014,43,0.154,48,0.253,49,1.32,50,0.466,51,1.186,53,1.009,54,1.381,55,1.381,56,1.381,57,1.158,58,1.804,60,2.342,62,2.262,63,0.606,79,0.006,80,0.006,95,0.79,104,0.548,107,0.964,114,0.964,133,2.53,152,1.186,184,1.895,228,2.43,278,1.475,286,3.658,287,2.304,288,4.548,289,3.738,290,4.652,291,4.451,292,2.444,293,3.88,294,1.895,295,2.304,296,2.804,297,3.658,298,2.607,299,1.975,300,2.607,301,3.383,302,3.925,303,3.881,304,5.218,305,2.804,306,4.14,307,2.804,308,2.804,309,4.804,310,2.804,311,2.804,312,1.896,313,4.468,314,2.804,315,1.532,316,1.594,317,1.804,460,3.189,1124,3.879,1125,3.879,1126,3.879,1127,3.879]],["title/injectables/Render.html",[0,1.356,468,1.841]],["body/injectables/Render.html",[0,1.489,1,2.724,2,0.014,3,0.11,17,2.671,18,2.205,22,1.792,43,0.265,45,1.426,48,0.193,49,1.043,50,0.343,51,0.938,52,1.49,53,0.853,54,1.167,55,1.167,56,1.167,57,0.853,60,1.166,62,2.309,63,0.346,69,2.061,79,0.005,80,0.005,95,0.693,104,0.68,110,2.245,114,1.483,133,2.219,145,0.687,152,2.357,176,1.703,178,1.366,217,1.437,222,2.093,228,1.773,317,1.426,330,3.545,416,3.761,420,2.776,426,3.904,427,3.904,428,3.279,448,2.216,449,4.693,450,6.005,451,4.693,453,4.763,455,5.009,458,2.41,459,2.41,460,2.695,461,2.216,462,2.061,463,1.426,464,1.932,465,2.216,466,2.061,467,5.572,468,3.076,469,2.41,470,4.246,471,4.693,472,2.41,473,4.203,474,3.567,475,4.246,476,4.246,477,5.427,478,2.41,479,4.693,480,3.567,1128,3.066,1129,3.066,1130,3.066,1131,3.066,1132,3.066,1133,3.066,1134,3.066,1135,3.066,1136,3.066,1137,3.066]],["title/classes/RenderResult.html",[57,0.776,569,2.323]],["body/classes/RenderResult.html",[2,0.014,3,0.131,6,2.5,18,1.773,43,0.295,46,1.773,47,2.166,48,0.166,53,0.685,54,0.938,55,0.938,56,0.938,57,0.967,59,2.051,60,1.955,63,0.77,79,0.006,80,0.006,95,0.994,104,0.576,110,2.162,133,2.448,164,2.658,170,2.166,172,2.166,206,1.956,228,1.197,261,2.548,268,3.055,289,3.639,312,1.946,468,2.292,554,2.892,555,4.005,557,2.451,558,1.949,559,1.857,569,3.351,570,2.166,571,3.718,576,2.618,579,3.718,581,2.636,586,3.718,591,2.166,596,2.636,597,2.636,600,3.177,601,2.867,602,2.867,603,3.718,604,1.857,606,2.896,607,2.867,608,2.636,609,2.867,610,2.867,612,2.867,613,2.867,620,4.299,622,2.867,651,3.055,715,2.636,730,3.294,732,4.684,734,4.077,736,3.457,937,4.48,939,3.177,953,4.044,1138,3.177,1139,5.143,1140,3.647,1141,3.647,1142,3.647,1143,4.48,1144,5.143,1145,6.822,1146,3.647,1147,3.647,1148,3.647,1149,3.647,1150,3.647,1151,3.647,1152,3.647,1153,3.647,1154,3.647,1155,3.647,1156,3.647,1157,3.647,1158,3.647,1159,5.143,1160,5.143,1161,3.647,1162,3.647,1163,3.647,1164,3.647,1165,3.647]],["title/interfaces/RenderResultOptions.html",[50,0.313,570,2.453]],["body/interfaces/RenderResultOptions.html",[2,0.014,3,0.124,36,1.484,43,0.25,48,0.204,50,0.477,53,0.928,54,1.269,55,1.269,56,1.269,63,0.388,79,0.006,80,0.006,83,2.11,95,0.633,104,0.7,110,2.2,114,1.566,145,0.771,164,3.006,167,0.798,176,1.798,179,2.399,217,2.45,261,2.11,278,1.876,279,1.359,294,1.214,312,2.04,330,3.744,369,4.205,394,2.931,420,1.6,468,2.199,528,2.168,552,3.567,553,2.487,554,3.245,555,4.919,556,2.998,557,3.317,558,2.637,559,3.793,562,3.971,563,2.705,564,2.168,565,2.487,566,2.998,567,2.998,568,4.956,569,2.775,570,3.744,571,4.824,572,2.998,573,2.998,574,3.88,575,2.998,576,3.397,577,2.998,578,5.02,579,4.824,580,4.299,581,4.824,582,4.824,583,2.487,584,2.313,585,2.487,586,2.487,587,2.705,588,2.998,589,4.299,590,2.705,591,2.931,1166,3.441,1167,3.441]],["title/interfaces/Request.html",[50,0.313,1168,3.247]],["body/interfaces/Request.html",[2,0.014,3,0.105,6,3.187,18,1.422,43,0.293,44,1.843,46,2.554,47,1.738,48,0.17,50,0.221,53,0.55,54,0.752,55,0.752,56,0.752,57,0.55,59,1.645,63,0.854,70,1.438,71,2.231,79,0.01,80,0.005,83,1.251,84,2.549,94,2.549,95,1.014,104,0.519,114,1.089,119,1.251,145,0.982,150,0.996,167,1.621,176,1.498,178,1.953,179,3.037,217,0.927,221,2.658,266,1.843,279,1.156,289,3.931,294,1.033,312,1.25,315,1.156,316,1.202,413,3.31,421,1.563,423,3.31,439,1.563,463,1.361,595,1.843,596,2.115,604,3.639,606,2.13,608,2.115,619,3.445,620,2.761,631,3.817,634,2.549,636,2.3,637,4.586,643,1.967,644,2.549,645,2.549,678,2.836,679,1.967,680,2.3,690,4.805,715,2.115,716,2.3,727,2.115,730,2.231,736,3.338,737,3.167,779,2.945,825,3.167,840,2.761,841,3.921,842,4.216,843,2.115,845,1.843,867,3.797,897,3.675,1168,3.445,1169,2.3,1170,2.549,1171,2.549,1172,2.549,1173,2.926,1174,2.926,1175,2.926,1176,3.445,1177,2.926,1178,2.926,1179,2.926,1180,2.926,1181,5.253,1182,2.926,1183,2.926,1184,2.926,1185,4.381,1186,2.926,1187,2.926,1188,2.926,1189,2.926,1190,2.926,1191,2.926,1192,5.253,1193,2.926,1194,2.926,1195,6.797,1196,2.926,1197,3.817,1198,2.926,1199,2.926,1200,2.926,1201,2.926,1202,2.926,1203,2.926,1204,2.926,1205,2.926,1206,2.926,1207,2.926,1208,2.926,1209,2.926,1210,2.926,1211,5.253,1212,5.833,1213,5.081,1214,2.926,1215,2.926,1216,4.381,1217,4.381,1218,4.381,1219,2.926,1220,2.549,1221,2.926,1222,2.549,1223,2.926,1224,2.926,1225,2.926,1226,2.549,1227,4.381,1228,2.926]],["title/interfaces/RouteArgument.html",[50,0.313,840,2.602]],["body/interfaces/RouteArgument.html",[2,0.014,3,0.091,36,1.804,43,0.215,48,0.254,50,0.364,53,1.216,54,1.664,55,1.664,56,1.664,63,0.839,79,0.004,80,0.004,83,2.059,95,0.753,104,0.696,110,1.718,114,1.846,119,2.509,145,1.45,150,2.202,152,0.777,164,2.82,167,1.803,184,0.896,217,2.377,221,1.496,222,1.162,228,0.834,302,1.428,312,0.724,315,2.317,316,2.659,382,1.836,420,1.181,421,1.357,423,1.6,439,3.874,463,1.181,512,4.17,643,4.8,676,1.836,678,1.235,690,3.943,736,3.134,739,2.478,792,1.508,822,1.707,823,1.6,824,3.093,825,2.843,826,1.997,827,1.997,828,1.997,829,5.514,830,1.997,831,1.997,832,1.836,833,1.707,834,4.677,835,1.997,836,4.24,837,1.707,838,5.257,839,5.257,840,3.034,841,4.35,842,4.24,843,2.843,844,3.093,845,3.696,846,3.093,847,4.263,848,1.997,849,1.997,850,1.997,851,1.997,852,1.707,853,3.093,854,3.093,855,5.614,856,3.48,857,1.997,858,1.707,859,3.093,860,1.707,861,1.997,862,1.997,863,1.997,864,1.997,865,1.997,866,1.997,867,3.919,868,3.093,869,1.997,870,1.997,871,3.093,872,3.093,873,1.997,874,1.997,875,1.997,876,1.997,877,1.997,878,1.836,879,1.997,880,1.997,881,1.707,882,1.997,883,1.997,884,1.836,885,1.997,886,1.997]],["title/interfaces/RouterConfig.html",[50,0.313,218,1.632]],["body/interfaces/RouterConfig.html",[2,0.014,3,0.196,10,1.863,43,0.216,48,0.26,49,1.855,50,0.55,63,0.757,79,0.009,80,0.009,107,1.806,167,1.556,202,3.108,206,2.49,209,1.996,216,2.073,218,3.076,242,2.535,243,2.535,257,3.94,258,3.985,259,3.985,260,4.778,261,3.108,262,4.286,263,3.585,264,3.435,265,3.435,266,3.435,267,3.94,268,3.238]],["title/interfaces/RouterConfig-1.html",[50,0.262,218,1.369,269,1.611]],["body/interfaces/RouterConfig-1.html",[2,0.014,3,0.13,10,1.186,22,2.019,43,0.143,48,0.24,50,0.534,53,0.68,63,0.577,70,1.947,71,3.594,79,0.006,80,0.006,95,0.827,104,0.726,107,0.898,145,1.804,150,1.23,152,1.563,167,1.186,176,1.839,202,3.103,203,2.147,204,4.061,205,3.019,206,2.232,207,3.168,208,3.168,209,2.36,210,3.168,211,3.17,212,3.335,213,3.736,214,3.97,215,2.875,216,2.255,217,1.619,218,2.343,219,2.278,220,1.681,221,1.375,222,1.068,223,2.147,224,1.681,225,1.84,226,2.033,227,2.033,228,1.187,229,2.794,230,2.873,231,2.873,232,2.873,233,2.883,234,3.281,235,1.84,236,1.932,237,2.278,238,2.033,239,2.278,240,2.278,241,2.278,242,1.681,243,1.681,244,4.916,245,3.221,246,3.221,247,3.736,248,2.278,249,2.278,250,3.736,251,3.736,252,2.278,253,2.278,254,2.278,255,2.278,256,2.278]],["title/interfaces/RouterConfig-2.html",[50,0.262,218,1.369,403,2.058]],["body/interfaces/RouterConfig-2.html",[2,0.014,3,0.202,10,1.852,43,0.223,48,0.258,49,1.909,50,0.557,63,0.771,79,0.009,80,0.009,107,1.829,111,2.5,167,1.584,202,2.92,206,2.416,209,2.054,216,2.133,218,3.026,242,2.609,243,2.609,258,3.332,259,3.332,260,4.638,261,2.92,263,2.998,264,3.535,265,3.535,270,4.055]],["title/interfaces/RouterOptions.html",[50,0.313,729,2.776]],["body/interfaces/RouterOptions.html",[2,0.014,3,0.184,43,0.203,48,0.239,50,0.487,70,2.316,79,0.008,80,0.008,95,0.827,104,0.68,107,1.269,145,1.748,176,1.837,229,3.139,230,3.405,231,3.405,232,3.405,233,3.602,278,1.941,279,2.017,672,5.611,673,4.656,674,4.448,696,5.064,697,4.015,726,3.432,729,4.743,743,4.058,744,3.432,746,4.656,748,4.656,931,3.691,932,4.015,933,3.691,934,4.015]],["title/injectables/Scope.html",[0,1.356,486,2.323]],["body/injectables/Scope.html",[0,1.891,2,0.014,3,0.155,43,0.229,45,1.999,48,0.21,49,1.463,50,0.325,51,1.315,52,2.09,57,0.808,60,1.634,62,2.049,63,0.816,79,0.007,80,0.007,133,3.3,150,1.96,152,1.761,176,1.643,178,1.916,183,1.916,184,2.032,294,1.517,411,5.716,416,4.931,473,3.628,482,3.38,483,5.853,484,6.301,486,3.652,487,3.745,488,5.657,489,5.657,490,6.485,491,5.657,492,5.017,493,5.017,494,5.017,495,6.043,496,5.657,497,6.043,498,5.657,499,3.745,500,3.745,1229,4.299,1230,4.299,1231,4.299,1232,4.299,1233,4.299,1234,4.299,1235,4.299,1236,4.299,1237,4.299,1238,4.299]],["title/classes/TypedSerializerCreator.html",[57,0.776,1239,2.985]],["body/classes/TypedSerializerCreator.html",[2,0.014,3,0.144,36,2.043,43,0.249,48,0.178,53,0.754,54,1.031,55,1.031,56,1.031,57,1.033,60,2.089,62,2.346,63,0.761,79,0.006,80,0.006,104,0.629,110,2.31,114,1.939,143,3.722,154,3.263,176,1.567,179,3.63,183,1.787,217,1.74,222,2.305,294,1.415,415,2.695,453,4.247,716,3.152,720,3.492,721,3.152,894,2.695,896,3.461,897,4.247,902,4.319,904,4.927,905,4.319,906,4.785,907,4.785,910,3.492,912,3.492,957,3.492,1239,4.529,1240,5.552,1241,3.492,1242,4.009,1243,4.009,1244,4.009,1245,4.009,1246,4.009,1247,3.152,1248,5.493,1249,5.493,1250,4.009,1251,4.009,1252,4.009,1253,4.009,1254,4.009]],["title/changelog.html",[1255,2.724,1256,2.724,1257,3.018]],["body/changelog.html",[0,1.64,1,2.491,2,0.014,6,1.701,8,2.352,10,1.667,18,2.428,49,1.191,51,1.07,57,0.658,70,1.912,79,0.006,80,0.006,83,2.136,118,3.928,209,1.829,211,2.136,233,1.701,234,1.781,263,2.669,294,1.763,312,0.998,468,2.226,473,2.204,508,4.232,528,2.204,558,1.87,569,3.275,576,1.781,578,3.61,604,1.781,678,2.428,717,2.529,779,3.357,845,2.204,922,2.751,923,2.529,933,2.529,935,2.204,1257,3.048,1258,4.994,1259,6.716,1260,3.499,1261,4.994,1262,7.588,1263,7.588,1264,4.994,1265,5.851,1266,4.994,1267,3.048,1268,3.499,1269,3.499,1270,4.994,1271,6.351,1272,4.994,1273,3.048,1274,3.048,1275,5.823,1276,3.499,1277,3.499,1278,5.823,1279,4.994,1280,4.994,1281,7.48,1282,3.499,1283,4.994,1284,3.499,1285,3.499,1286,4.994,1287,7.756,1288,3.499,1289,3.499,1290,6.084,1291,3.499,1292,3.499,1293,3.499,1294,3.499,1295,6.716,1296,3.499,1297,3.499,1298,4.994,1299,4.994,1300,3.048,1301,3.499,1302,6.084,1303,3.499,1304,3.499,1305,3.499,1306,3.499,1307,3.499]],["title/coverage.html",[1308,5.605]],["body/coverage.html",[0,1.904,1,0.618,2,0.014,4,1.949,10,0.575,46,0.702,50,0.605,51,1.45,57,1.006,79,0.002,80,0.002,81,1.136,82,1.949,96,1.136,97,0.91,98,2.595,106,0.91,109,0.91,112,0.91,131,1.044,132,2.56,155,1.044,167,1.933,183,3.777,184,0.51,202,0.618,203,3.179,206,1.069,210,0.772,211,0.618,214,0.813,215,0.813,216,0.943,218,1.286,220,0.672,222,0.962,238,0.813,257,3.141,258,0.858,259,0.858,267,1.792,268,1.473,270,3.141,271,0.91,272,2.791,273,2.791,278,0.549,280,1.044,284,1.044,285,0.971,286,0.858,287,2.816,290,0.858,299,0.736,301,0.91,327,1.136,328,3.363,333,1.259,354,1.259,404,1.259,409,5.053,425,4.419,448,2.354,462,0.971,464,0.91,466,0.971,468,0.644,482,1.949,486,0.813,501,1.136,502,1.949,510,1.259,525,1.136,526,1.949,545,2.56,550,1.136,552,1.044,553,3.141,558,0.772,562,0.91,564,0.91,569,0.813,570,0.858,583,1.044,585,1.044,591,0.858,592,1.044,593,2.56,601,1.136,604,0.736,605,1.136,626,1.044,628,1.136,629,3.785,632,1.044,648,1.136,649,1.949,650,1.259,655,1.259,659,0.971,660,2.56,666,1.136,669,0.971,670,1.136,671,3.785,679,0.971,680,1.136,682,1.136,684,1.259,691,1.136,717,1.044,719,1.136,724,1.044,725,0.971,726,0.971,727,1.044,728,0.91,729,0.971,730,0.736,731,1.792,734,0.91,739,0.91,740,4.662,743,0.91,744,0.971,761,1.259,775,1.259,779,0.971,785,1.259,809,1.136,810,1.949,822,0.971,823,4.39,832,1.044,833,0.971,837,0.971,840,0.91,852,2.189,856,1.044,858,2.189,878,1.044,881,0.971,884,1.044,887,1.044,888,3.427,889,2.56,892,1.136,894,0.971,895,1.949,897,0.91,915,1.136,916,2.56,921,1.136,923,1.044,925,1.259,931,2.791,935,0.91,936,3.416,943,1.044,964,1.136,965,2.56,966,1.136,967,1.044,968,1.792,990,1.044,1092,1.259,1138,1.259,1168,1.136,1169,4.397,1170,1.259,1171,1.259,1172,1.259,1176,1.136,1197,1.259,1220,1.259,1222,1.259,1226,1.259,1239,1.044,1240,4.83,1241,1.259,1300,1.259,1309,6.414,1310,8.393,1311,4.345,1312,4.345,1313,1.445,1314,1.445,1315,1.445,1316,1.445,1317,1.445,1318,1.445,1319,1.445,1320,1.949,1321,7.787,1322,7.535,1323,7.392,1324,1.136,1325,1.445,1326,3.861,1327,3.256,1328,1.259,1329,1.259,1330,1.445,1331,1.445,1332,2.479,1333,1.445,1334,1.445,1335,2.836,1336,1.259,1337,1.445,1338,3.256,1339,1.445,1340,1.445,1341,1.259,1342,2.836,1343,1.259,1344,1.445,1345,1.445,1346,1.445,1347,1.445,1348,1.445,1349,1.445,1350,1.445,1351,5.982,1352,1.445,1353,2.479,1354,2.479,1355,2.479,1356,2.479,1357,1.445,1358,1.445,1359,1.445,1360,1.445,1361,1.445,1362,3.861,1363,3.861,1364,1.445,1365,2.479,1366,2.479,1367,3.363,1368,1.445,1369,1.445,1370,1.445,1371,1.136,1372,1.445,1373,1.445,1374,1.445,1375,1.259,1376,1.259,1377,3.256,1378,1.445,1379,1.445,1380,1.445,1381,1.445,1382,1.445,1383,5.8,1384,4.345,1385,4.345,1386,1.259,1387,1.445,1388,1.445,1389,1.445,1390,2.16,1391,1.445,1392,1.445,1393,1.445,1394,1.445,1395,1.445,1396,1.445,1397,1.445,1398,1.445,1399,1.445,1400,1.445,1401,1.445,1402,1.445,1403,1.445,1404,1.445,1405,1.445,1406,1.445,1407,5.29,1408,1.445,1409,1.445,1410,1.445,1411,1.445,1412,1.445,1413,1.445,1414,1.445,1415,1.445,1416,1.445,1417,1.259,1418,3.256,1419,3.256,1420,1.445,1421,1.445]],["title/dependencies.html",[351,4.32,1274,3.018]],["body/dependencies.html",[2,0.014,79,0.009,80,0.009,83,2.94,165,4.461,211,2.426,294,2.002,678,3.342,742,4.942,943,4.101,945,4.942,1113,4.942,1247,4.461,1265,4.942,1267,4.942,1273,4.942,1422,5.673,1423,6.875,1424,5.673,1425,5.673,1426,5.673,1427,5.673,1428,5.673,1429,5.673,1430,5.673,1431,6.875,1432,5.673,1433,5.673,1434,5.673,1435,5.673,1436,5.673,1437,5.673,1438,5.673,1439,5.673,1440,5.673,1441,5.673,1442,5.673,1443,5.673,1444,5.673,1445,5.673,1446,5.673,1447,5.673]],["title/miscellaneous/enumerations.html",[1448,2.724,1449,4.959]],["body/miscellaneous/enumerations.html",[2,0.014,79,0.01,80,0.01,183,2.72,205,3.107,269,2.838,403,3.625,408,4.798,447,4.102,481,5.316,559,3.107,888,4.411,891,6.255,1450,6.103,1451,6.103,1452,6.103,1453,6.103,1454,5.316,1455,6.103]],["title/index.html",[439,1.851,1255,2.724,1256,2.724]],["body/index.html",[0,1.486,1,1.561,2,0.014,5,3.422,6,1.774,8,1.551,10,1.194,18,1.122,42,1.298,43,0.271,46,1.122,48,0.193,50,0.343,51,0.706,57,0.851,62,1.52,63,0.511,70,0.758,71,1.175,79,0.004,80,0.004,83,2.977,95,0.855,104,0.499,111,2.656,114,1.551,118,2.546,133,1.86,150,1.541,164,2.303,173,1.814,176,1.041,178,2.885,179,1.122,184,1.598,205,1.175,206,1.198,207,2.419,208,1.233,209,1.884,210,1.233,211,1.936,212,1.298,214,1.298,221,2.461,224,1.073,229,1.499,230,1.627,231,1.627,232,1.627,234,1.175,268,1.371,269,2.106,289,1.298,294,0.814,295,1.371,299,1.175,312,1.7,348,2.638,357,1.814,369,1.454,387,1.551,394,2.168,403,2.168,408,2.869,418,2.453,447,1.551,473,1.454,483,4.908,508,2.852,512,1.551,528,2.299,530,1.668,538,1.814,542,2.869,546,2.869,558,1.95,604,1.175,606,1.122,618,1.668,620,1.454,638,2.01,673,2.638,678,3.147,691,1.814,710,2.01,721,1.814,730,1.175,736,2.419,779,1.551,816,1.814,841,4.006,845,1.454,852,2.453,858,2.453,881,2.453,935,2.852,954,3.179,1067,1.668,1143,3.179,1213,2.01,1290,2.01,1302,2.01,1336,2.01,1371,2.869,1456,2.308,1457,2.308,1458,2.308,1459,2.308,1460,4.527,1461,2.308,1462,2.308,1463,2.308,1464,2.308,1465,2.308,1466,2.308,1467,2.308,1468,2.308,1469,2.308,1470,2.308,1471,2.308,1472,2.308,1473,2.308,1474,2.308,1475,2.308,1476,2.308,1477,2.308,1478,2.308,1479,2.308,1480,2.308,1481,2.308,1482,2.308,1483,2.308,1484,2.308,1485,2.308,1486,5.146,1487,2.308,1488,2.308,1489,2.308,1490,3.649,1491,4.527,1492,3.649,1493,3.649,1494,3.649,1495,2.308,1496,2.308,1497,5.146,1498,2.308,1499,4.527,1500,2.308,1501,2.308,1502,4.527,1503,3.649,1504,2.308,1505,3.649,1506,2.308,1507,2.308,1508,2.308,1509,2.308,1510,2.308,1511,2.308,1512,2.308,1513,2.308,1514,2.308,1515,2.308,1516,2.308,1517,3.649,1518,2.308,1519,3.649,1520,2.308,1521,2.308,1522,2.308,1523,2.308,1524,2.308,1525,2.308,1526,2.308,1527,2.308,1528,2.308,1529,2.308,1530,2.308,1531,2.308,1532,2.308,1533,2.308,1534,2.308,1535,2.308,1536,2.308,1537,2.308,1538,2.308,1539,2.308,1540,2.308,1541,3.649,1542,3.649,1543,2.308,1544,2.308,1545,2.308,1546,2.308,1547,2.308,1548,2.308,1549,2.308,1550,2.308,1551,2.308,1552,2.308,1553,2.308,1554,2.308,1555,2.308,1556,2.308,1557,2.308,1558,2.308,1559,2.01,1560,1.814,1561,3.944,1562,2.01,1563,2.01,1564,2.308,1565,3.179,1566,2.01,1567,2.01,1568,2.01,1569,2.01,1570,2.01,1571,2.01,1572,3.179,1573,5.804,1574,2.01,1575,2.01,1576,2.01,1577,3.944,1578,2.01,1579,3.179,1580,2.01,1581,2.01,1582,2.01,1583,2.01,1584,2.01,1585,2.01,1586,2.01,1587,2.01,1588,3.179,1589,2.01,1590,2.01,1591,2.01,1592,2.01,1593,2.01,1594,2.01,1595,3.179,1596,3.179,1597,2.01,1598,2.01,1599,2.01,1600,2.01,1601,2.01,1602,2.01,1603,2.01,1604,2.01,1605,2.01,1606,2.01,1607,2.01,1608,2.01,1609,2.01,1610,2.01,1611,2.01,1612,2.01,1613,2.01,1614,2.01,1615,2.01,1616,2.01,1617,2.01,1618,2.01,1619,2.01,1620,2.01,1621,2.01,1622,2.01,1623,2.01,1624,2.01]],["title/license.html",[1255,2.724,1256,2.724,1560,2.724]],["body/license.html",[2,0.012,42,2.994,51,1.628,79,0.009,80,0.009,224,2.476,268,3.162,357,4.185,394,3.927,618,3.848,1067,3.848,1559,4.637,1560,4.185,1561,6.264,1562,4.637,1563,4.637,1565,5.759,1566,4.637,1567,4.637,1568,4.637,1569,4.637,1570,4.637,1571,4.637,1572,5.759,1573,7.094,1574,4.637,1575,4.637,1576,4.637,1577,6.264,1578,4.637,1579,5.759,1580,4.637,1581,4.637,1582,4.637,1583,4.637,1584,4.637,1585,4.637,1586,4.637,1587,4.637,1588,5.759,1589,4.637,1590,4.637,1591,4.637,1592,4.637,1593,4.637,1594,4.637,1595,5.759,1596,5.759,1597,4.637,1598,4.637,1599,4.637,1600,4.637,1601,4.637,1602,4.637,1603,4.637,1604,4.637,1605,4.637,1606,4.637,1607,4.637,1608,4.637,1609,4.637,1610,4.637,1611,4.637,1612,4.637,1613,4.637,1614,4.637,1615,4.637,1616,4.637,1617,4.637,1618,4.637,1619,4.637,1620,4.637,1621,4.637,1622,4.637,1623,4.637,1624,4.637]],["title/modules.html",[1625,5.605]],["body/modules.html",[2,0.013,79,0.011,80,0.011]],["title/overview.html",[1626,5.605]],["body/overview.html",[2,0.013,79,0.01,80,0.01,1627,6.499,1628,6.499,1629,6.499]],["title/miscellaneous/typealiases.html",[1448,2.724,1630,4.959]],["body/miscellaneous/typealiases.html",[2,0.013,36,1.411,79,0.009,80,0.009,104,0.489,152,1.678,167,1.763,287,3.259,297,4.001,559,2.793,606,3.543,649,4.314,651,3.259,652,5.868,730,2.793,731,3.966,737,4.869,738,5.296,823,3.457,834,4.869,836,4.869,968,3.966,972,5.296,998,4.314,1000,5.296,1002,4.314,1004,4.314,1320,4.314,1324,5.296,1390,4.78,1407,4.314,1631,7.289,1632,5.868,1633,5.868,1634,6.736,1635,6.736,1636,6.736,1637,6.736,1638,5.868,1639,5.868,1640,7.289,1641,5.487,1642,5.868,1643,4.78]],["title/miscellaneous/variables.html",[1448,2.724,1644,4.959]],["body/miscellaneous/variables.html",[2,0.014,5,1.78,6,1.453,10,1.418,22,0.712,36,0.769,42,2.152,46,0.877,53,0.719,58,0.839,63,0.503,70,0.981,79,0.005,80,0.003,82,1.418,83,0.771,95,0.809,96,2.35,104,0.397,110,0.571,118,1.014,122,1.136,164,2.186,170,1.775,172,1.775,176,1.798,177,1.212,178,1.706,184,1.878,205,2.512,206,1.935,207,2.045,208,2.637,209,1.807,210,1.597,211,2.275,216,0.686,217,2.169,220,1.78,221,1.455,222,1.862,224,1.78,225,1.948,226,1.681,227,1.681,228,1.462,229,1.572,230,1.984,231,1.984,232,2.199,233,0.877,234,0.918,235,1.948,236,0.964,261,1.904,263,0.964,271,1.136,272,1.304,273,2.767,274,1.418,278,2.241,284,2.16,285,2.573,287,1.071,297,1.775,298,1.212,299,1.522,300,1.212,302,1.681,312,1.518,348,2.16,369,2.411,387,1.212,394,1.775,403,1.071,418,1.212,421,1.597,460,2.644,464,1.883,468,1.984,486,1.014,502,1.418,503,2.767,505,2.35,506,5.589,507,2.767,508,4.483,526,1.418,527,3.334,528,4.164,529,2.35,530,2.16,531,2.35,532,1.571,533,3.009,534,1.571,535,3.334,536,1.571,537,1.571,538,2.35,539,1.571,540,1.571,541,1.571,542,1.418,545,1.418,546,1.418,547,1.571,550,2.35,551,1.571,553,1.304,554,2.152,555,2.993,557,2.009,558,1.597,559,3.209,562,1.136,568,3.009,569,1.014,570,1.071,571,1.304,574,1.418,576,1.948,578,2.16,579,1.304,581,1.304,582,2.767,583,2.16,584,2.573,585,1.304,586,1.304,587,1.418,590,1.418,591,2.273,592,1.304,593,1.418,594,2.604,603,2.767,604,2.868,605,2.35,606,1.453,607,1.418,608,1.304,609,1.418,610,1.418,611,1.571,612,1.418,613,1.418,614,2.604,615,2.767,616,2.604,617,1.571,618,1.304,619,2.35,620,2.411,621,1.571,622,1.418,623,1.571,624,1.571,625,1.571,626,2.16,627,1.571,632,2.16,651,1.071,659,1.212,660,1.418,661,1.571,662,1.418,663,1.571,664,1.571,665,1.571,666,2.35,667,1.418,668,1.571,669,2.573,678,2.399,679,2.009,699,1.304,717,4.261,719,2.35,724,2.767,725,2.573,726,2.009,727,2.767,728,1.136,743,1.136,744,2.009,746,1.304,748,1.304,792,1.071,810,1.418,811,1.571,812,1.571,813,1.571,814,1.571,815,1.571,816,1.418,817,1.571,818,1.571,819,1.571,820,1.571,821,1.571,823,1.136,833,2.009,887,1.304,888,1.304,889,1.418,890,3.334,892,2.35,893,1.571,896,1.136,916,1.418,921,2.35,922,1.418,923,2.16,924,1.571,931,1.304,932,1.418,933,1.304,934,1.418,936,1.418,943,2.16,946,1.418,948,1.418,949,1.418,950,1.418,964,2.35,965,1.418,966,2.35,1169,1.418,1176,3.009,1239,1.304,1240,1.418,1247,1.418,1320,1.418,1324,3.009,1328,1.571,1329,2.604,1335,1.571,1341,1.571,1342,1.571,1343,2.604,1367,1.571,1371,2.35,1375,1.571,1376,2.604,1386,1.571,1407,1.418,1417,2.604,1454,1.571,1632,1.571,1633,3.334,1638,2.604,1639,1.571,1642,3.878,1643,2.604,1645,2.989,1646,1.803,1647,2.989,1648,2.989,1649,2.989,1650,2.989,1651,2.989,1652,5.634,1653,2.989,1654,2.989,1655,1.803,1656,1.803,1657,1.803,1658,1.803,1659,2.989,1660,1.803,1661,3.827,1662,1.803,1663,1.803,1664,1.803,1665,1.803,1666,1.803,1667,1.803,1668,1.803,1669,1.803,1670,1.803,1671,1.803,1672,1.803,1673,1.803,1674,1.803,1675,1.803,1676,2.989,1677,1.803,1678,1.803,1679,1.803,1680,1.803,1681,1.803,1682,2.989,1683,1.803,1684,1.803,1685,1.803,1686,1.803,1687,1.803,1688,2.989,1689,1.803,1690,1.803,1691,1.803,1692,1.803,1693,1.803,1694,1.803,1695,1.803,1696,3.827,1697,1.803,1698,1.803,1699,1.803,1700,1.803,1701,1.803,1702,1.803,1703,1.803,1704,1.803,1705,1.803]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":183,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/IRouter.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.37",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1488,"title":{},"body":{"index.html":{}}}],["0.1.18",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["0.cli",{"_index":1495,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":269,"title":{"interfaces/Config-1.html":{},"interfaces/Contract-1.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/RouterConfig-1.html":{}},"body":{"interfaces/IRouter.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.1",{"_index":1302,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.0.11",{"_index":1259,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1287,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":1281,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":1280,"title":{},"body":{"changelog.html":{}}}],["1.0.5",{"_index":1278,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":1275,"title":{},"body":{"changelog.html":{}}}],["1.0.7",{"_index":1271,"title":{},"body":{"changelog.html":{}}}],["1.0.8",{"_index":1270,"title":{},"body":{"changelog.html":{}}}],["1.0.9",{"_index":1264,"title":{},"body":{"changelog.html":{}}}],["1.02",{"_index":1301,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1258,"title":{},"body":{"changelog.html":{}}}],["1.18.8",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1268,"title":{},"body":{"changelog.html":{}}}],["1.4.1",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":192,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["10.12.10",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["10ms",{"_index":196,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["12",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["12345",{"_index":1545,"title":{},"body":{"index.html":{}}}],["16",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":403,"title":{"interfaces/Contract-2.html":{},"interfaces/RouterConfig-2.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0.47",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["2.0的routers，默认：`false",{"_index":696,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{}}}],["2.0的routers，默认：false",{"_index":672,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/RouterOptions.html":{}}}],["2.19.0",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1562,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["26/56",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":408,"title":{"interfaces/Contract-3.html":{}},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["3.1.6",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":447,"title":{"interfaces/Contract-4.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["4.1.0",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":481,"title":{"interfaces/Contract-5.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["50",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1158,"title":{},"body":{"classes/RenderResult.html":{}}}],["56",{"_index":1629,"title":{},"body":{"overview.html":{}}}],["6",{"_index":1627,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["7.0.35",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1628,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["8201",{"_index":535,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["98765",{"_index":1531,"title":{},"body":{"index.html":{}}}],["_",{"_index":584,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/JsonResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["__base_route_deco_factory",{"_index":1300,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["__base_route_deco_factory(configs",{"_index":873,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["__context",{"_index":125,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["__route_custom",{"_index":874,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["__transpile",{"_index":240,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["__tsconfig",{"_index":239,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["_ctx",{"_index":407,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["_init",{"_index":488,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["_path",{"_index":786,"title":{},"body":{"interfaces/IRouter.html":{}}}],["_views",{"_index":470,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["above",{"_index":1594,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":313,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"classes/RealConfigCollection.html":{}}}],["action",{"_index":224,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":504,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{}}}],["add",{"_index":1472,"title":{},"body":{"index.html":{}}}],["add(v",{"_index":1532,"title":{},"body":{"index.html":{}}}],["addmagicforroute",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["addmagicforroute(\"delete",{"_index":886,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"get",{"_index":877,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"post",{"_index":883,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"put",{"_index":880,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(method",{"_index":865,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["always",{"_index":230,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1586,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":3,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{}}}],["api/post/:type?id=xxxx&name=xxxx",{"_index":1514,"title":{},"body":{"index.html":{}}}],["api/test/testget/:type?id=xxxx&name=xxxx",{"_index":1506,"title":{},"body":{"index.html":{}}}],["apifactory",{"_index":826,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["apifactory(method",{"_index":869,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["app",{"_index":8,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"changelog.html":{},"index.html":{}}}],["app.ts",{"_index":1473,"title":{},"body":{"index.html":{}}}],["app/app.ts",{"_index":1525,"title":{},"body":{"index.html":{}}}],["app/controllers",{"_index":932,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["app/controllers/test.ts",{"_index":1501,"title":{},"body":{"index.html":{}}}],["app/middleware/server",{"_index":1483,"title":{},"body":{"index.html":{}}}],["app/middlewares/demo.ts",{"_index":1550,"title":{},"body":{"index.html":{}}}],["app/routers",{"_index":933,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app/routers/test.ts",{"_index":1518,"title":{},"body":{"index.html":{}}}],["app/services/test.ts",{"_index":1529,"title":{},"body":{"index.html":{}}}],["app/tsconfig.json",{"_index":542,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app/views",{"_index":668,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1511,"title":{},"body":{"index.html":{}}}],["approot",{"_index":231,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["args",{"_index":22,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IContext.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/InnerCmdConfig.html":{},"injectables/Render.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["args.path",{"_index":614,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["args.tplstr",{"_index":616,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":1621,"title":{},"body":{"index.html":{},"license.html":{}}}],["array",{"_index":223,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract-3.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["array.from(this.map.entries()).map(([sb",{"_index":310,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["associated",{"_index":1574,"title":{},"body":{"index.html":{},"license.html":{}}}],["astconf",{"_index":571,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["astconf.configs",{"_index":1149,"title":{},"body":{"classes/RenderResult.html":{}}}],["astconf.state",{"_index":1148,"title":{},"body":{"classes/RenderResult.html":{}}}],["astconf.use",{"_index":1146,"title":{},"body":{"classes/RenderResult.html":{}}}],["astroboy",{"_index":83,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Contract-2.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["astroboy.ts",{"_index":5,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IStrictConfigsCompiler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["astroboy.tsyarn",{"_index":1471,"title":{},"body":{"index.html":{}}}],["astroboycontext",{"_index":1,"title":{"injectables/AstroboyContext.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStrictConfigsCompiler.html":{},"injectables/Render.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["astroboycontext.contract",{"_index":61,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["astroboy渲染时的`config`字段，默认：`undefined",{"_index":572,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["astroboy渲染时的`state`字段，默认：`undefined",{"_index":573,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["astroboy的配置的view",{"_index":917,"title":{},"body":{"interfaces/IView.html":{}}}],["astrpboy.ts",{"_index":1493,"title":{},"body":{"index.html":{}}}],["astt",{"_index":1295,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":606,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["atc",{"_index":508,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atc.config.js",{"_index":530,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atccli",{"_index":1277,"title":{},"body":{"changelog.html":{}}}],["atcconfig",{"_index":529,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":54,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["authors",{"_index":1612,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":812,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["autoescape",{"_index":661,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":620,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":947,"title":{},"body":{"classes/JsonResult.html":{}}}],["base",{"_index":111,"title":{},"body":{"interfaces/BaseCompiler.html":{},"interfaces/Config-1.html":{},"injectables/ConfigReader.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/RouterConfig-2.html":{},"index.html":{}}}],["baseclass",{"_index":81,"title":{"classes/BaseClass.html":{}},"body":{"classes/BaseClass.html":{},"coverage.html":{}}}],["baseclass.app",{"_index":39,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["baseclass.config",{"_index":41,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["baseclass.ctx",{"_index":35,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["basecompiler",{"_index":97,"title":{"interfaces/BaseCompiler.html":{}},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"coverage.html":{}}}],["based",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baserouter",{"_index":763,"title":{},"body":{"interfaces/IRouter.html":{}}}],["bc",{"_index":96,"title":{},"body":{"classes/BaseClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":495,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["big",{"_index":55,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["bigmogician@outlook.com",{"_index":1564,"title":{},"body":{"index.html":{}}}],["blue",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":736,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["bonbons/di",{"_index":294,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["boolean",{"_index":145,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{}}}],["break",{"_index":640,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["breaking",{"_index":1262,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":813,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["builders/config",{"_index":685,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["builders/routers",{"_index":683,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["building",{"_index":819,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["buildrouter",{"_index":691,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{},"index.html":{}}}],["buildrouter(test",{"_index":1522,"title":{},"body":{"index.html":{}}}],["bunddle",{"_index":653,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["bundle",{"_index":718,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["bundles",{"_index":717,"title":{},"body":{"interfaces/IPreProcess.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@options\"].push(args",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bundles[\"@scopeds\"].push(args",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bundles[\"@singletons\"].push(args",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bundles[\"@uniques\"].push(args",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":42,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":662,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"interfaces/IView.html":{},"miscellaneous/variables.html":{}}}],["callservice",{"_index":11,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["callservice(...args",{"_index":20,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{}}}],["callservice(service",{"_index":511,"title":{},"body":{"interfaces/IContext.html":{}}}],["camel",{"_index":942,"title":{},"body":{"classes/JsonResult.html":{}}}],["camel(key",{"_index":961,"title":{},"body":{"classes/JsonResult.html":{}}}],["camelcase",{"_index":943,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["camelcase(key",{"_index":960,"title":{},"body":{"classes/JsonResult.html":{}}}],["cancellationfilename",{"_index":134,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["cancellationtoken",{"_index":131,"title":{"classes/CancellationToken.html":{}},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["cancellationtokendata",{"_index":155,"title":{"interfaces/CancellationTokenData.html":{}},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["case",{"_index":637,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{}}}],["catch",{"_index":172,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["cater",{"_index":1068,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["ccccc",{"_index":1540,"title":{},"body":{"index.html":{}}}],["cerialize",{"_index":1247,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cfg",{"_index":1098,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["chalk",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["chalk[level",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1263,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":1257,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changereturn",{"_index":1632,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":969,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["charge",{"_index":1569,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":193,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{}}}],["checkcustomerror",{"_index":585,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkcustomerror(error",{"_index":588,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["checkifonlydeclares",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["checkifonlydeclares(p",{"_index":777,"title":{},"body":{"interfaces/IRouter.html":{}}}],["checkifonlydeclares(path",{"_index":774,"title":{},"body":{"interfaces/IRouter.html":{}}}],["checkrouterfolders",{"_index":761,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["claim",{"_index":1615,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":57,"title":{"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"classes/TypedSerializerCreator.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStrictConfigsCompiler.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["cleanupcancellation",{"_index":137,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["cli",{"_index":1290,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cli监控的文件修改列表，自动重启node",{"_index":1498,"title":{},"body":{"index.html":{}}}],["cmd",{"_index":263,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cmd.ts",{"_index":257,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{}}}],["cmdconfig",{"_index":202,"title":{"interfaces/CmdConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["code",{"_index":970,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["colors",{"_index":1417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commander",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["commandplugin",{"_index":220,"title":{"interfaces/CommandPlugin.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonname",{"_index":780,"title":{},"body":{"interfaces/IRouter.html":{}}}],["compare",{"_index":977,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compare(messagea",{"_index":1006,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparenumbers",{"_index":978,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparenumbers(numbera",{"_index":1010,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compareoptionalstrings",{"_index":979,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["compareoptionalstrings(stringa",{"_index":1014,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compareseverities",{"_index":980,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["compareseverities(severitya",{"_index":1018,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["comparetypes",{"_index":981,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparetypes(typea",{"_index":1022,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compilefn",{"_index":684,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["compilefn(configs",{"_index":709,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["compiler",{"_index":686,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["compiler.options",{"_index":688,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["compiler.options.ts",{"_index":273,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["compiler.ts",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["compileroptions",{"_index":335,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["conditions",{"_index":1593,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":10,"title":{"interfaces/Config.html":{},"interfaces/Config-1.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.debug",{"_index":253,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.ignore",{"_index":251,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.inspect",{"_index":249,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.mock",{"_index":254,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.transpile",{"_index":256,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.tsconfig",{"_index":248,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.typecheck",{"_index":255,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.verbose",{"_index":252,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.watch",{"_index":250,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config/config.default.js",{"_index":1490,"title":{},"body":{"index.html":{}}}],["config/middleware.default.js",{"_index":1485,"title":{},"body":{"index.html":{}}}],["config/options/demo.ts",{"_index":1538,"title":{},"body":{"index.html":{}}}],["config_compiler_options",{"_index":285,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config_view",{"_index":923,"title":{},"body":{"interfaces/IView.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configcompiler",{"_index":204,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["configcompilerconfig",{"_index":215,"title":{"interfaces/ConfigCompilerConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["configcompileroptions",{"_index":271,"title":{"interfaces/ConfigCompilerOptions.html":{}},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configentry",{"_index":286,"title":{"interfaces/ConfigEntry.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["configfile",{"_index":334,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configreader",{"_index":112,"title":{"injectables/ConfigReader.html":{}},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"coverage.html":{}}}],["configroot",{"_index":236,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":312,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IViewEngine.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configs(process",{"_index":108,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["configs.contract",{"_index":314,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["configs.get(env",{"_index":609,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["configs.get(json_result_options",{"_index":952,"title":{},"body":{"classes/JsonResult.html":{}}}],["configs.get(render_result_options",{"_index":610,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["configs.ts",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs/env.config",{"_index":600,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{}}}],["configs/options",{"_index":1466,"title":{},"body":{"index.html":{}}}],["configscollection",{"_index":292,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RealConfigCollection.html":{}}}],["configs字段下传，默认：`undefined",{"_index":577,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["configs字段下传，默认：undefined",{"_index":1166,"title":{},"body":{"interfaces/RenderResultOptions.html":{}}}],["configs文件夹的相对位置，默认：'config",{"_index":275,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{}}}],["configs文件夹的相对位置，默认：`'config",{"_index":282,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{}}}],["configs文件夹编译后的输出位置，默认：'config",{"_index":277,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{}}}],["configs文件夹编译后的输出位置，默认：`'config",{"_index":283,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{}}}],["configs文件夹，默认：`false",{"_index":281,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{}}}],["configs文件夹，默认：false",{"_index":276,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{}}}],["configtoken",{"_index":290,"title":{"interfaces/ConfigToken.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["configurable",{"_index":1187,"title":{},"body":{"interfaces/Request.html":{}}}],["configuration",{"_index":331,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configuration.iconfigurationfile",{"_index":344,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configurationfile",{"_index":327,"title":{"interfaces/ConfigurationFile.html":{}},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["confs",{"_index":1145,"title":{},"body":{"classes/RenderResult.html":{}}}],["connectexports",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["connection",{"_index":1623,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.log",{"_index":506,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["console.log(\"fuck",{"_index":1558,"title":{},"body":{"index.html":{}}}],["console.log(\"hello",{"_index":1478,"title":{},"body":{"index.html":{}}}],["console.log(`oh",{"_index":1480,"title":{},"body":{"index.html":{}}}],["console.log(configs.get(env).showtrace",{"_index":1554,"title":{},"body":{"index.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/JsonResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["constructor(__context",{"_index":319,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["constructor(cfg",{"_index":1095,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["constructor(context",{"_index":17,"title":{},"body":{"injectables/AstroboyContext.html":{},"injectables/Render.html":{}}}],["constructor(ctx",{"_index":84,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Request.html":{}}}],["constructor(data",{"_index":989,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["constructor(private",{"_index":124,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract-2.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"injectables/NunjunksEngine.html":{}}}],["constructor(protected",{"_index":69,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["constructor(typescript",{"_index":144,"title":{},"body":{"classes/CancellationToken.html":{}}}],["constructor(value",{"_index":937,"title":{},"body":{"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["content",{"_index":554,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["content(e",{"_index":1165,"title":{},"body":{"classes/RenderResult.html":{}}}],["content[1",{"_index":796,"title":{},"body":{"interfaces/IRouter.html":{}}}],["content[3",{"_index":798,"title":{},"body":{"interfaces/IRouter.html":{}}}],["context",{"_index":18,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"index.html":{}}}],["context.contract",{"_index":405,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["contract",{"_index":51,"title":{"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["controller",{"_index":779,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/Request.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["controller(\"test",{"_index":1504,"title":{},"body":{"index.html":{}}}],["controller(prefix",{"_index":1179,"title":{},"body":{"interfaces/Request.html":{}}}],["controller.prototype[\"@router",{"_index":783,"title":{},"body":{"interfaces/IRouter.html":{}}}],["controller[internal_injector",{"_index":1184,"title":{},"body":{"interfaces/Request.html":{}}}],["controllerconstructor",{"_index":675,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["controllername",{"_index":805,"title":{},"body":{"interfaces/IRouter.html":{}}}],["controllers/test",{"_index":1520,"title":{},"body":{"index.html":{}}}],["convert",{"_index":898,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["copies",{"_index":1588,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":1572,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyprototype",{"_index":680,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["copyprototype(ctor",{"_index":695,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["copyprototype(di_controller",{"_index":1200,"title":{},"body":{"interfaces/Request.html":{}}}],["copyright",{"_index":1561,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":1464,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1308,"title":{"coverage.html":{}},"body":{}}],["create",{"_index":267,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{}}}],["create(config",{"_index":264,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["createcmdconfig",{"_index":258,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["createcmdconfig(config",{"_index":242,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}}}],["createconfig",{"_index":299,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IView.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createconfig(\"@astroboy.ts",{"_index":551,"title":{},"body":{"interfaces/IENV-1.html":{},"miscellaneous/variables.html":{}}}],["createconfig(\"demo",{"_index":1544,"title":{},"body":{"index.html":{}}}],["createconfig(\"view",{"_index":924,"title":{},"body":{"interfaces/IView.html":{},"miscellaneous/variables.html":{}}}],["createenv",{"_index":1094,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["createenv(configs",{"_index":1099,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["createfile",{"_index":785,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["createfromjson",{"_index":138,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"classes/NormalizedMessage.html":{}}}],["createfromjson(json",{"_index":1026,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["createfromjson(typescript",{"_index":153,"title":{},"body":{"classes/CancellationToken.html":{}}}],["createinjectmixin",{"_index":425,"title":{},"body":{"interfaces/Contract-3.html":{},"coverage.html":{}}}],["createinjectmixin(...args",{"_index":430,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createinstance",{"_index":1170,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["createinstance(target",{"_index":1183,"title":{},"body":{"interfaces/Request.html":{}}}],["createjsfile",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["createmiddleware",{"_index":655,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["createoptions",{"_index":278,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createoptions(\"global_error",{"_index":627,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["createoptions(\"router_options",{"_index":934,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["createprogram",{"_index":354,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["createproxybydepts",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["createproxybydepts(target",{"_index":435,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createproxybykeys",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["createproxybykeys(target",{"_index":434,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createrouter",{"_index":677,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["createrouter(sourcector",{"_index":694,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["createstamp",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["createtsfile",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["createtsrouterfile",{"_index":775,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["createtype",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["ctor",{"_index":690,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["ctor(value",{"_index":1223,"title":{},"body":{"interfaces/Request.html":{}}}],["ctorfolder",{"_index":746,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["ctorpath",{"_index":756,"title":{},"body":{"interfaces/IRouter.html":{}}}],["ctorpath}/${path",{"_index":770,"title":{},"body":{"interfaces/IRouter.html":{}}}],["ctx",{"_index":6,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ctx.body",{"_index":619,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["ctx.getconfig",{"_index":117,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["ctx.params",{"_index":1218,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.query",{"_index":1217,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.render(xpath",{"_index":1147,"title":{},"body":{"classes/RenderResult.html":{}}}],["ctx.request.body",{"_index":1214,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.status",{"_index":1157,"title":{},"body":{"classes/RenderResult.html":{}}}],["ctx.type",{"_index":1510,"title":{},"body":{"index.html":{}}}],["ctx.url",{"_index":1513,"title":{},"body":{"index.html":{}}}],["customroutefactory",{"_index":827,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["customroutefactory(configs)(prototype",{"_index":875,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["cyan",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":531,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1616,"title":{},"body":{"index.html":{},"license.html":{}}}],["data",{"_index":387,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.character",{"_index":1052,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.code",{"_index":1042,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.content",{"_index":1046,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.file",{"_index":1048,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.line",{"_index":1050,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.msg",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.setstamp(new",{"_index":1556,"title":{},"body":{"index.html":{}}}],["data.severity",{"_index":1044,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.source",{"_index":388,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["data.type",{"_index":1040,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["dataservice",{"_index":1551,"title":{},"body":{"index.html":{}}}],["date",{"_index":490,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["date().gettime",{"_index":1557,"title":{},"body":{"index.html":{}}}],["date.now",{"_index":189,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["deal",{"_index":1576,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":1624,"title":{},"body":{"index.html":{},"license.html":{}}}],["debug",{"_index":205,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debugname",{"_index":532,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["decamel",{"_index":944,"title":{},"body":{"classes/JsonResult.html":{}}}],["decamel(key",{"_index":963,"title":{},"body":{"classes/JsonResult.html":{}}}],["decamelize",{"_index":945,"title":{},"body":{"classes/JsonResult.html":{},"dependencies.html":{}}}],["decidewhitespace",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["decidewhitespace(format",{"_index":959,"title":{},"body":{"classes/JsonResult.html":{}}}],["declare",{"_index":94,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Request.html":{}}}],["decorators",{"_index":710,"title":{},"body":{"interfaces/IPreProcess.html":{},"index.html":{}}}],["decorators/controller",{"_index":681,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["decorators/injectable",{"_index":45,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStrictConfigsCompiler.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["deduplicate",{"_index":982,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["deduplicate(messages",{"_index":1028,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["default",{"_index":266,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig.html":{}}}],["defaultconfigcompileroptions",{"_index":284,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultenv",{"_index":550,"title":{},"body":{"interfaces/IENV-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultenv.routeralwaysbuild",{"_index":702,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultenv.routerautobuild",{"_index":700,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultenv.routerroot",{"_index":704,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultextension",{"_index":918,"title":{},"body":{"interfaces/IView.html":{}}}],["defaultglobalerror",{"_index":605,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultjsonresultoptions",{"_index":966,"title":{},"body":{"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultnunjunksoptions",{"_index":666,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultrender",{"_index":611,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["defaultrender(error",{"_index":625,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["defaultrenderresultoptions",{"_index":583,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteroptions",{"_index":744,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultsimpleloggeroptions",{"_index":892,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultview",{"_index":921,"title":{},"body":{"interfaces/IView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultviewengine",{"_index":919,"title":{},"body":{"interfaces/IView.html":{}}}],["defineunit",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["delegate",{"_index":116,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["delete",{"_index":884,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["delete(path",{"_index":885,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["deleteproperty`,`defineproperty",{"_index":419,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["demo",{"_index":1460,"title":{},"body":{"index.html":{}}}],["demo1",{"_index":1461,"title":{},"body":{"index.html":{}}}],["demo2",{"_index":1462,"title":{},"body":{"index.html":{}}}],["demo3",{"_index":1463,"title":{},"body":{"index.html":{}}}],["demo_options",{"_index":1543,"title":{},"body":{"index.html":{}}}],["demooptions",{"_index":1539,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":351,"title":{"dependencies.html":{}},"body":{"interfaces/ConfigurationFile.html":{}}}],["dependencyfactory",{"_index":1634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["depts",{"_index":424,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["depts.map(i",{"_index":445,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["description",{"_index":53,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":867,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["descriptor.value",{"_index":1193,"title":{},"body":{"interfaces/Request.html":{}}}],["deserialize",{"_index":721,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["deserialize(json",{"_index":1253,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["deserialize(json.parse(json",{"_index":1251,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["deserializedefine",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["details",{"_index":234,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":528,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":533,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"miscellaneous/variables.html":{}}}],["df",{"_index":745,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.always",{"_index":752,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.approot",{"_index":753,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.ctorfolder",{"_index":747,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.enabled",{"_index":751,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.filetype",{"_index":754,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.routerfolder",{"_index":750,"title":{},"body":{"interfaces/IRouter.html":{}}}],["di",{"_index":118,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract-3.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["di_controller",{"_index":1181,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.__proto__",{"_index":1208,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.prototype",{"_index":1204,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.prototype.__proto__",{"_index":1206,"title":{},"body":{"interfaces/Request.html":{}}}],["diagnostic",{"_index":1002,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["dicontainer",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dipair",{"_index":1636,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["diration",{"_index":484,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["disposerequestscope",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["disposerequestscope(scope",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1584,"title":{},"body":{"index.html":{},"license.html":{}}}],["ditype",{"_index":546,"title":{},"body":{"interfaces/IENV-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["di列表，可以动态merge",{"_index":580,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["di容器的注册api",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["di解析的模式，默认：'native",{"_index":548,"title":{},"body":{"interfaces/IENV-1.html":{}}}],["di解析的模式，默认：`'native",{"_index":549,"title":{},"body":{"interfaces/IENV-1.html":{}}}],["documentation",{"_index":1575,"title":{},"body":{"index.html":{},"license.html":{}}}],["duration",{"_index":190,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["dynamic_params",{"_index":854,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["e",{"_index":261,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"miscellaneous/variables.html":{}}}],["e.name",{"_index":586,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["e.stack",{"_index":587,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1489,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":229,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":497,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["engine",{"_index":579,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["engine.render(errorpath",{"_index":1163,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.render(path",{"_index":1152,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.renderstring(errortpl",{"_index":1164,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.renderstring(tplstr",{"_index":1153,"title":{},"body":{"classes/RenderResult.html":{}}}],["engines",{"_index":581,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["enoent",{"_index":175,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["entry",{"_index":304,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["entry.value",{"_index":308,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["enumerable",{"_index":1188,"title":{},"body":{"interfaces/Request.html":{}}}],["enumerations",{"_index":1449,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["env",{"_index":206,"title":{"interfaces/Env.html":{},"interfaces/Env-1.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/InnerCmdConfig.html":{},"classes/RenderResult.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":1112,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["equals",{"_index":983,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["equals(messagea",{"_index":1031,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["equalto",{"_index":1075,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["err",{"_index":173,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"index.html":{}}}],["err.code",{"_index":174,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["error",{"_index":559,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error(\"no",{"_index":617,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["error.name",{"_index":589,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["errorpath",{"_index":1159,"title":{},"body":{"classes/RenderResult.html":{}}}],["errortpl",{"_index":1160,"title":{},"body":{"classes/RenderResult.html":{}}}],["errortype",{"_index":1000,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["errrotitle",{"_index":1155,"title":{},"body":{"classes/RenderResult.html":{}}}],["event",{"_index":1611,"title":{},"body":{"index.html":{},"license.html":{}}}],["examples",{"_index":507,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["exclude",{"_index":345,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["exec",{"_index":241,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["exists",{"_index":380,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["existssync",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["existssync(filepath",{"_index":168,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["existssync(this.getcancellationfilepath",{"_index":197,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["export",{"_index":48,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["express",{"_index":1602,"title":{},"body":{"index.html":{},"license.html":{}}}],["expression",{"_index":318,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["expression(expression",{"_index":120,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["extends",{"_index":107,"title":{},"body":{"interfaces/BaseCompiler.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IENV.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{}}}],["f",{"_index":505,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":624,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":1066,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["false",{"_index":176,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fatal",{"_index":1455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":372,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["file.join(\"\\n",{"_index":801,"title":{},"body":{"interfaces/IRouter.html":{}}}],["file[1",{"_index":797,"title":{},"body":{"interfaces/IRouter.html":{}}}],["file[3",{"_index":799,"title":{},"body":{"interfaces/IRouter.html":{}}}],["filepath",{"_index":367,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files",{"_index":357,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"index.html":{},"license.html":{}}}],["files.getdata(filepath).source",{"_index":385,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.has(filepath",{"_index":384,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.mutatedata(filepath",{"_index":386,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.remove(filepath",{"_index":381,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.setmtime(filepath",{"_index":377,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["filesregister",{"_index":358,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["fileswatcher",{"_index":360,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["filesystemloader",{"_index":1106,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["filesystemloader(this.configs.root",{"_index":1117,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["filetype",{"_index":232,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["final",{"_index":1212,"title":{},"body":{"interfaces/Request.html":{}}}],["finally",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":370,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["fitness",{"_index":1607,"title":{},"body":{"index.html":{},"license.html":{}}}],["flag",{"_index":791,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fn",{"_index":503,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["folders",{"_index":764,"title":{},"body":{"interfaces/IRouter.html":{}}}],["folders.foreach(path",{"_index":766,"title":{},"body":{"interfaces/IRouter.html":{}}}],["following",{"_index":1067,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"index.html":{},"license.html":{}}}],["force",{"_index":235,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":896,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":847,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["free",{"_index":1568,"title":{},"body":{"index.html":{},"license.html":{}}}],["frombody",{"_index":858,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["frombody(options",{"_index":859,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["fromjson",{"_index":906,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromjson(json",{"_index":902,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromobject",{"_index":907,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromobject(json",{"_index":905,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromparams",{"_index":852,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["fromparams(options",{"_index":853,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["fs",{"_index":162,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IRouter.html":{}}}],["fs.appendfilesync(_path",{"_index":800,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(_path",{"_index":788,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(routerfolder",{"_index":771,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(routerpath",{"_index":760,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.mkdirsync(routerfolder",{"_index":772,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.mkdirsync(routerpath",{"_index":759,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.pathlike",{"_index":169,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fs.readdirsync(ctorfolder",{"_index":773,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.readdirsync(ctorpath",{"_index":765,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.readfilesync(_path",{"_index":790,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.statsync(filepath",{"_index":171,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{}}}],["fs.unlinksync(this.getcancellationfilepath",{"_index":201,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fs.writefilesync(this.getcancellationfilepath",{"_index":200,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fulltext",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":167,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-3.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function(target",{"_index":634,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["functions",{"_index":1467,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1591,"title":{},"body":{"index.html":{},"license.html":{}}}],["genericdeserialize",{"_index":1246,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["genericdeserialize(json",{"_index":1254,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["genericdeserialize(json.parse(json",{"_index":1252,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["get(\"testget/:type",{"_index":1507,"title":{},"body":{"index.html":{}}}],["get(config",{"_index":247,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["get(merge",{"_index":244,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["get(path",{"_index":876,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["get(target",{"_index":437,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["get(token",{"_index":306,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"classes/RealConfigCollection.html":{}}}],["getapp",{"_index":37,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["getcancellationfilepath",{"_index":139,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["getconfig",{"_index":12,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getconfig(...args",{"_index":23,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getconfigs",{"_index":1108,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["getctx",{"_index":33,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["getformattedcode",{"_index":984,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["getglobal",{"_index":325,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["getid",{"_index":1237,"title":{},"body":{"injectables/Scope.html":{}}}],["getinjector",{"_index":1171,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["getinjector(ctx",{"_index":1182,"title":{},"body":{"interfaces/Request.html":{}}}],["getlib",{"_index":13,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getlib(...args",{"_index":25,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getloader",{"_index":1110,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["getmethodparamstype",{"_index":832,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["getmethodparamstype(prototype",{"_index":861,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["getpropertytype",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["getprototypeconstructor",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["getquery",{"_index":1502,"title":{},"body":{"index.html":{}}}],["getscopeid",{"_index":650,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["getscopeid(ctx",{"_index":656,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["getservice",{"_index":14,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getservice(...args",{"_index":27,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getserviceclass",{"_index":15,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getserviceclass(...args",{"_index":29,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getshortscopeid",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1255,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getviews",{"_index":1136,"title":{},"body":{"injectables/Render.html":{}}}],["global",{"_index":122,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"miscellaneous/variables.html":{}}}],["global_error",{"_index":626,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globaldi",{"_index":632,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globaldi.get(configs",{"_index":657,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["globaldi.get(injectservice",{"_index":658,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["globaldi.register",{"_index":646,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["globalimplements",{"_index":679,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalimplements.get(controller",{"_index":784,"title":{},"body":{"interfaces/IRouter.html":{}}}],["globalimplements.get(ctor",{"_index":693,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["globalimplements.set(di_controller",{"_index":1201,"title":{},"body":{"interfaces/Request.html":{}}}],["granted",{"_index":1567,"title":{},"body":{"index.html":{},"license.html":{}}}],["green",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":594,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["has(target",{"_index":446,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["help",{"_index":225,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":1566,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":1613,"title":{},"body":{"index.html":{},"license.html":{}}}],["host",{"_index":363,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["host.getsourcefile",{"_index":366,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["http://127.0.0.1:8001",{"_index":538,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ibaseinjectable",{"_index":631,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["ibodyresult",{"_index":738,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"miscellaneous/typealiases.html":{}}}],["icommonresulttype",{"_index":737,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{},"miscellaneous/typealiases.html":{}}}],["iconfigcmdoptions",{"_index":501,"title":{"interfaces/IConfigCmdOptions.html":{}},"body":{"interfaces/IConfigCmdOptions.html":{},"coverage.html":{}}}],["iconfigcollection",{"_index":291,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["iconfigscompiler",{"_index":109,"title":{"interfaces/IConfigsCompiler.html":{}},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"coverage.html":{}}}],["icontext",{"_index":46,"title":{"interfaces/IContext.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":483,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"index.html":{}}}],["id2",{"_index":1517,"title":{},"body":{"index.html":{}}}],["idevcmdoptions",{"_index":525,"title":{"interfaces/IDevCmdOptions.html":{}},"body":{"interfaces/IDevCmdOptions.html":{},"coverage.html":{}}}],["ienv",{"_index":216,"title":{"interfaces/IENV.html":{},"interfaces/IENV-1.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ierrorhandler",{"_index":552,"title":{"interfaces/IErrorHandler.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{}}}],["iglobalerrorhandler",{"_index":592,"title":{"interfaces/IGlobalErrorHandler.html":{}},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iglobalsetoptions",{"_index":466,"title":{"interfaces/IGlobalSetOptions.html":{}},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["ignore",{"_index":71,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["iinjectableconfigs",{"_index":628,"title":{"interfaces/IInjectableConfigs.html":{}},"body":{"interfaces/IInjectableConfigs.html":{},"coverage.html":{}}}],["imiddlewaresscope",{"_index":648,"title":{"interfaces/IMiddlewaresScope.html":{}},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["imp",{"_index":647,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["implements",{"_index":60,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{}}}],["implicit",{"_index":350,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["implied",{"_index":1603,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["included",{"_index":1597,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":1579,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":439,"title":{"index.html":{}},"body":{"interfaces/Contract-3.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["indexable",{"_index":543,"title":{},"body":{"interfaces/IENV.html":{},"interfaces/IRouter.html":{}}}],["indexof(type",{"_index":1084,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["inend",{"_index":706,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["info",{"_index":1453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["init",{"_index":473,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"index.html":{}}}],["init(id",{"_index":493,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["init.ts",{"_index":1484,"title":{},"body":{"index.html":{}}}],["initcommand",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["initrequestscope",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["initrequestscope(ctx",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initrouters",{"_index":682,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"coverage.html":{}}}],["initrouters(configs",{"_index":707,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AstroboyContext.html":{},"injectables/ConfigReader.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IStrictConfigsCompiler.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["injectable(config",{"_index":633,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["injectditoken",{"_index":412,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["injector",{"_index":604,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injector.get(configs",{"_index":1228,"title":{},"body":{"interfaces/Request.html":{}}}],["injector.get(configs).get(static_resolver",{"_index":1196,"title":{},"body":{"interfaces/Request.html":{}}}],["injector.get(context",{"_index":608,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["injector.get(dataservice",{"_index":1555,"title":{},"body":{"index.html":{}}}],["injector.get(engines[key",{"_index":1150,"title":{},"body":{"classes/RenderResult.html":{}}}],["injector.get(render",{"_index":607,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["injector.get(simplelogger",{"_index":622,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["injector.get>(context",{"_index":1154,"title":{},"body":{"classes/RenderResult.html":{}}}],["injectscope",{"_index":295,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"index.html":{}}}],["injectscope(async",{"_index":1553,"title":{},"body":{"index.html":{}}}],["injectscope.new",{"_index":639,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["injectscope.scope",{"_index":635,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["injectscope.singleton",{"_index":638,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"index.html":{}}}],["injectservice",{"_index":413,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{}}}],["injectservice.contract",{"_index":414,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["injecttoken",{"_index":630,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["innerbundle",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["innercmdconfig",{"_index":238,"title":{"interfaces/InnerCmdConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["innerconfigcompileroptions",{"_index":280,"title":{"interfaces/InnerConfigCompilerOptions.html":{}},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"coverage.html":{}}}],["innerrouteroptions",{"_index":743,"title":{"interfaces/InnerRouterOptions.html":{}},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inspect",{"_index":207,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inspector",{"_index":539,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":1470,"title":{},"body":{"index.html":{}}}],["instance",{"_index":900,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["instanceof",{"_index":433,"title":{},"body":{"interfaces/Contract-3.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["intellisence",{"_index":115,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["interface",{"_index":50,"title":{"interfaces/BaseCompiler.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":1468,"title":{},"body":{"index.html":{}}}],["internal",{"_index":557,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["internal_dispose",{"_index":417,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["internal_injector",{"_index":1176,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inunjunksrenderoptions",{"_index":659,"title":{"interfaces/INunjunksRenderOptions.html":{}},"body":{"interfaces/INunjunksRenderOptions.html":{},"injectables/NunjunksEngine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invokeservicemethod",{"_index":16,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["invokeservicemethod(...args",{"_index":31,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{}}}],["invokeservicemethod(pkgname",{"_index":519,"title":{},"body":{"interfaces/IContext.html":{}}}],["ioc",{"_index":1528,"title":{},"body":{"index.html":{}}}],["ipreprocess",{"_index":670,"title":{"interfaces/IPreProcess.html":{}},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["iresult",{"_index":730,"title":{"interfaces/IResult.html":{}},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IViewEngine.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["iresultscope",{"_index":734,"title":{"interfaces/IResultScope.html":{}},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"coverage.html":{}}}],["iroutefactory",{"_index":829,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["irouter",{"_index":739,"title":{"interfaces/IRouter.html":{}},"body":{"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["iroutercmdoptions",{"_index":809,"title":{"interfaces/IRouterCmdOptions.html":{}},"body":{"interfaces/IRouterCmdOptions.html":{},"coverage.html":{}}}],["iroutermagic",{"_index":822,"title":{"interfaces/IRouterMagic.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["isalways",{"_index":814,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["iscancellationrequested",{"_index":140,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["iscancelled",{"_index":135,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["iscustomclassinstance",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["isdiagnostictype",{"_index":985,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isenabled",{"_index":811,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["iserrorseverity",{"_index":986,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isimpleloggeroptions",{"_index":887,"title":{"interfaces/ISimpleLoggerOptions.html":{}},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindex",{"_index":872,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["islinttype",{"_index":987,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isobj",{"_index":475,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["isplainobject",{"_index":458,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["isplainobject(p1",{"_index":478,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["istaticserializeoptions",{"_index":894,"title":{"interfaces/IStaticSerializeOptions.html":{}},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["istatictypedresolver",{"_index":897,"title":{"interfaces/IStaticTypedResolver.html":{}},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["istrictconfigscompiler",{"_index":106,"title":{"interfaces/IStrictConfigsCompiler.html":{}},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"coverage.html":{}}}],["iswarningseverity",{"_index":988,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["it's",{"_index":373,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["iview",{"_index":915,"title":{"interfaces/IView.html":{}},"body":{"interfaces/IView.html":{},"coverage.html":{}}}],["iviewengine",{"_index":564,"title":{"interfaces/IViewEngine.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{}}}],["javascript",{"_index":903,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["js",{"_index":233,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":154,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"classes/TypedSerializerCreator.html":{}}}],["json.cancellationfilename",{"_index":185,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["json.iscancelled",{"_index":186,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["json.stringify",{"_index":957,"title":{},"body":{"classes/JsonResult.html":{},"classes/TypedSerializerCreator.html":{}}}],["json_result_options",{"_index":725,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresolvers",{"_index":464,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresult",{"_index":935,"title":{"classes/JsonResult.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["jsonresultoptions",{"_index":728,"title":{"interfaces/JsonResultOptions.html":{}},"body":{"interfaces/IPreProcess.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresult实现了iresult接口，提供将json内容编程化写入body的能力，同时提供了configs",{"_index":1512,"title":{},"body":{"index.html":{}}}],["jsontemplate",{"_index":949,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["jsontplkey",{"_index":950,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["json对象序列化写入body",{"_index":941,"title":{},"body":{"classes/JsonResult.html":{}}}],["k",{"_index":127,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["key",{"_index":228,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["key01",{"_index":1541,"title":{},"body":{"index.html":{}}}],["key02",{"_index":1542,"title":{},"body":{"index.html":{}}}],["keyresolver",{"_index":948,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["keystr",{"_index":476,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["kind",{"_index":1601,"title":{},"body":{"index.html":{},"license.html":{}}}],["koa",{"_index":44,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{},"interfaces/Request.html":{}}}],["koa.application",{"_index":9,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["koa.context",{"_index":7,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{}}}],["koa:application",{"_index":540,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["languageversion",{"_index":368,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["lastcancellationchecktime",{"_index":136,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["level",{"_index":890,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"miscellaneous/variables.html":{}}}],["level.touppercase",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":1617,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":1614,"title":{},"body":{"index.html":{},"license.html":{}}}],["license",{"_index":1560,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":1580,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":1604,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":971,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["line:no",{"_index":349,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["lint",{"_index":1004,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["linteroptions",{"_index":329,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["literal",{"_index":330,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/Contract-4.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{}}}],["loadconfig",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["loader",{"_index":1093,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["loadlinterconfig",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["loadlinterconfig(configfile",{"_index":346,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["loadprogramconfig",{"_index":333,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["lodash",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["lodash/get",{"_index":219,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["lodash/isplainobject",{"_index":459,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["lodash/merge",{"_index":1141,"title":{},"body":{"classes/RenderResult.html":{}}}],["lodash/set",{"_index":461,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{}}}],["logactions",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["logger",{"_index":603,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["logger.debug(errrotitle",{"_index":1156,"title":{},"body":{"classes/RenderResult.html":{}}}],["logger.trace(\"global_error",{"_index":623,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["logger/base.ts",{"_index":1451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger/logger.ts",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["logger/options.ts",{"_index":889,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lstripblocks",{"_index":663,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":536,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["magenta",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["magic_content",{"_index":833,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["magic_content.get(prototype",{"_index":848,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["magic_content.set",{"_index":849,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["map",{"_index":302,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":920,"title":{},"body":{"interfaces/IView.html":{}}}],["matching",{"_index":80,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(time",{"_index":191,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["memberof",{"_index":317,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{}}}],["merchantability",{"_index":1606,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":268,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"classes/RenderResult.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["merge(merge",{"_index":265,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["mergecmdconfig",{"_index":259,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["mergecmdconfig(merge",{"_index":243,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}}}],["messagea",{"_index":1009,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.character",{"_index":1064,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.code",{"_index":1071,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.content",{"_index":1073,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.severity",{"_index":1059,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb",{"_index":1007,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.character",{"_index":1065,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.code",{"_index":1072,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.content",{"_index":1074,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.file",{"_index":1057,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.line",{"_index":1062,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.severity",{"_index":1060,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.type",{"_index":1055,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messages",{"_index":1030,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["messages.sort(normalizedmessage.compare).filter((message",{"_index":1077,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messages[index",{"_index":1079,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["method",{"_index":512,"title":{},"body":{"interfaces/IContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["methodget(@fromparams",{"_index":1508,"title":{},"body":{"index.html":{}}}],["methodname",{"_index":524,"title":{},"body":{"interfaces/IContext.html":{}}}],["methodpost",{"_index":1516,"title":{},"body":{"index.html":{}}}],["middleware",{"_index":654,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["middlewares",{"_index":711,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["miscellaneous",{"_index":1448,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":1559,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":208,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1582,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":1175,"title":{},"body":{"interfaces/Request.html":{}}}],["module.exports",{"_index":1486,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1625,"title":{"modules.html":{}},"body":{}}],["mogician",{"_index":56,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["more",{"_index":194,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["ms",{"_index":443,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["mtime",{"_index":374,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["n",{"_index":955,"title":{},"body":{"classes/JsonResult.html":{}}}],["name",{"_index":221,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":49,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"injectables/Scope.html":{},"changelog.html":{}}}],["native",{"_index":547,"title":{},"body":{"interfaces/IENV-1.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":184,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouteArgument.html":{},"injectables/Scope.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newenvs",{"_index":246,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["next",{"_index":348,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IMiddlewaresScope.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nocache",{"_index":1118,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["node",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.mogician",{"_index":1563,"title":{},"body":{"index.html":{},"license.html":{}}}],["node_env",{"_index":226,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["node_modules/.bin/atc",{"_index":1494,"title":{},"body":{"index.html":{}}}],["node_port",{"_index":227,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["nodejs.process",{"_index":101,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["nodemon",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["noninfringement",{"_index":1610,"title":{},"body":{"index.html":{},"license.html":{}}}],["normalizedmessage",{"_index":967,"title":{"classes/NormalizedMessage.html":{}},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{}}}],["normalizedmessage(json",{"_index":1053,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparenumbers",{"_index":1063,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparenumbers(messagea.line",{"_index":1061,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareoptionalstrings",{"_index":1070,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareoptionalstrings(messagea.file",{"_index":1056,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareseverities",{"_index":1058,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparetypes(messagea.type",{"_index":1054,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.equals(message",{"_index":1078,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.severity_error",{"_index":1089,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.severity_warning",{"_index":1088,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.type_diagnostic",{"_index":1083,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.type_lint",{"_index":1082,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessagejson",{"_index":990,"title":{"interfaces/NormalizedMessageJson.html":{}},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{}}}],["notice",{"_index":1595,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":1469,"title":{},"body":{"index.html":{}}}],["null",{"_index":415,"title":{},"body":{"interfaces/Contract-3.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/TypedSerializerCreator.html":{}}}],["number",{"_index":150,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract-5.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/InnerCmdConfig.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/Scope.html":{},"index.html":{}}}],["numbera",{"_index":1013,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["numberb",{"_index":1011,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["nunjucks",{"_index":1113,"title":{},"body":{"injectables/NunjunksEngine.html":{},"dependencies.html":{}}}],["nunjunks",{"_index":578,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["nunjunks_options",{"_index":669,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nunjunksengine",{"_index":562,"title":{"injectables/NunjunksEngine.html":{}},"body":{"interfaces/IErrorHandler.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":453,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"injectables/Render.html":{},"classes/TypedSerializerCreator.html":{}}}],["object",{"_index":421,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":444,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["object.defineproperty",{"_index":1203,"title":{},"body":{"interfaces/Request.html":{}}}],["object.defineproperty(prototype",{"_index":1185,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertydescriptor(prototype",{"_index":1191,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertydescriptor(target.prototype",{"_index":1205,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertynames(prototype).foreach(name",{"_index":1190,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertynames(target.prototype).foreach(name",{"_index":1202,"title":{},"body":{"interfaces/Request.html":{}}}],["object.keys(ms",{"_index":441,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["obtaining",{"_index":1571,"title":{},"body":{"index.html":{},"license.html":{}}}],["old",{"_index":395,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["oldenvs",{"_index":245,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["oldfile",{"_index":789,"title":{},"body":{"interfaces/IRouter.html":{}}}],["oldfile.tostring",{"_index":793,"title":{},"body":{"interfaces/IRouter.html":{}}}],["oldprogram",{"_index":361,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["once",{"_index":195,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["ondeverror",{"_index":582,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["onemit",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onend",{"_index":755,"title":{},"body":{"interfaces/IRouter.html":{}}}],["onerror",{"_index":369,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onstart",{"_index":1477,"title":{},"body":{"index.html":{}}}],["open",{"_index":699,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["option(...args",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option(router_options",{"_index":1527,"title":{},"body":{"index.html":{}}}],["optionassign",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["options",{"_index":222,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.format",{"_index":1250,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["options.type",{"_index":1249,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["options/config",{"_index":687,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["options/render.options",{"_index":1142,"title":{},"body":{"classes/RenderResult.html":{}}}],["options/typed",{"_index":1173,"title":{},"body":{"interfaces/Request.html":{}}}],["opts",{"_index":1143,"title":{},"body":{"classes/RenderResult.html":{},"index.html":{}}}],["opts.ondeverror",{"_index":1162,"title":{},"body":{"classes/RenderResult.html":{}}}],["opts.onerror",{"_index":1161,"title":{},"body":{"classes/RenderResult.html":{}}}],["os",{"_index":163,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["others",{"_index":431,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["others[0",{"_index":432,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["otherwise",{"_index":1620,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":1622,"title":{},"body":{"index.html":{},"license.html":{}}}],["outputroot",{"_index":237,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["outroot",{"_index":274,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":72,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["overview",{"_index":1626,"title":{"overview.html":{}},"body":{}}],["ownkeys(target",{"_index":442,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["p",{"_index":534,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["p.endswith(\".d.ts",{"_index":778,"title":{},"body":{"interfaces/IRouter.html":{}}}],["p1",{"_index":426,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p2",{"_index":427,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p3",{"_index":428,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p4",{"_index":429,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["package",{"_index":1274,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["packagename",{"_index":522,"title":{},"body":{"interfaces/IContext.html":{}}}],["param",{"_index":315,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/IContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["params",{"_index":841,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["params[index",{"_index":1219,"title":{},"body":{"interfaces/Request.html":{}}}],["paramsfactory",{"_index":834,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/typealiases.html":{}}}],["paramsoptions",{"_index":837,"title":{"interfaces/ParamsOptions.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["paramsresolver",{"_index":836,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/typealiases.html":{}}}],["parsed",{"_index":340,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["partial",{"_index":110,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1608,"title":{},"body":{"index.html":{},"license.html":{}}}],["partreset",{"_index":1640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":164,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IViewEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["path)(prototype",{"_index":870,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["path.dirname(configfile",{"_index":343,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["path.indexof",{"_index":767,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.join(__dirname",{"_index":1499,"title":{},"body":{"index.html":{}}}],["path.join(os.tmpdir",{"_index":187,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["path.resolve(__dirname",{"_index":1476,"title":{},"body":{"index.html":{}}}],["path.resolve(process.cwd",{"_index":667,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"interfaces/IRouter.html":{},"miscellaneous/variables.html":{}}}],["path.split(\".\")[0",{"_index":781,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path`或`tplstr",{"_index":567,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["paths",{"_index":1273,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined",{"_index":575,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["path将会拼装成绝对路径下到对应的渲染引擎。默认：undefined",{"_index":1167,"title":{},"body":{"interfaces/RenderResultOptions.html":{}}}],["path或tplstr",{"_index":560,"title":{},"body":{"interfaces/IErrorHandler.html":{}}}],["path，默认：`undefined",{"_index":566,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["path，默认：undefined",{"_index":561,"title":{},"body":{"interfaces/IErrorHandler.html":{}}}],["permission",{"_index":1565,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":1589,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":1570,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":1590,"title":{},"body":{"index.html":{},"license.html":{}}}],["pkgname",{"_index":521,"title":{},"body":{"interfaces/IContext.html":{}}}],["plugins",{"_index":1500,"title":{},"body":{"index.html":{}}}],["plugins/nunjunks",{"_index":563,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"interfaces/RenderResultOptions.html":{}}}],["plugins/simple",{"_index":602,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{}}}],["plugins/typed",{"_index":722,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["port",{"_index":527,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1599,"title":{},"body":{"index.html":{},"license.html":{}}}],["post",{"_index":881,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["post(\"post/:type",{"_index":1515,"title":{},"body":{"index.html":{}}}],["post(path",{"_index":882,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["postdata",{"_index":1503,"title":{},"body":{"index.html":{}}}],["pre",{"_index":541,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["preconfigcompiler",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["preconfigcompiler(configs",{"_index":708,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["prefix",{"_index":1178,"title":{},"body":{"interfaces/Request.html":{}}}],["preinitfn",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["preinitfn(configs",{"_index":705,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["priorities",{"_index":1080,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priorities[0",{"_index":1085,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priorities[1",{"_index":1086,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priority",{"_index":1487,"title":{},"body":{"index.html":{}}}],["private",{"_index":133,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"injectables/Scope.html":{},"index.html":{}}}],["probably",{"_index":379,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["procedures",{"_index":99,"title":{},"body":{"interfaces/BaseCompiler.html":{}}}],["procedures(process",{"_index":100,"title":{},"body":{"interfaces/BaseCompiler.html":{}}}],["procedures?(process",{"_index":105,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["process",{"_index":103,"title":{},"body":{"interfaces/BaseCompiler.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["process.env",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.__transpile",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.__tsconfig",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":556,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["production",{"_index":612,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":396,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig",{"_index":355,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig.filenames",{"_index":391,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig.options",{"_index":392,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["promise",{"_index":651,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":420,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propertydescriptor",{"_index":868,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propertykey",{"_index":835,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propkey",{"_index":855,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propkey).params.push",{"_index":862,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["protected",{"_index":416,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["prototype",{"_index":643,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["prototype.__valid",{"_index":645,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["prototype[\"@router",{"_index":1189,"title":{},"body":{"interfaces/Request.html":{}}}],["provide",{"_index":113,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["provided",{"_index":618,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideinvoker",{"_index":652,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"miscellaneous/typealiases.html":{}}}],["proxy",{"_index":418,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["proxy(target",{"_index":436,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["proxyurl",{"_index":537,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":62,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStrictConfigsCompiler.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["publish",{"_index":1583,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":1609,"title":{},"body":{"index.html":{},"license.html":{}}}],["put",{"_index":878,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["put(path",{"_index":879,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["r",{"_index":792,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["rc",{"_index":1286,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1265,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["rc.12",{"_index":1284,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":1307,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":1306,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":1283,"title":{},"body":{"changelog.html":{}}}],["rc.17",{"_index":1260,"title":{},"body":{"changelog.html":{}}}],["rc.18",{"_index":1299,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":1267,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["rc.20",{"_index":1298,"title":{},"body":{"changelog.html":{}}}],["rc.21",{"_index":1282,"title":{},"body":{"changelog.html":{}}}],["rc.22",{"_index":1305,"title":{},"body":{"changelog.html":{}}}],["rc.23",{"_index":1297,"title":{},"body":{"changelog.html":{}}}],["rc.24",{"_index":1296,"title":{},"body":{"changelog.html":{}}}],["rc.27",{"_index":1523,"title":{},"body":{"index.html":{}}}],["rc.28",{"_index":1294,"title":{},"body":{"changelog.html":{}}}],["rc.29",{"_index":1293,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":1272,"title":{},"body":{"changelog.html":{}}}],["rc.30",{"_index":1303,"title":{},"body":{"changelog.html":{}}}],["rc.31",{"_index":1292,"title":{},"body":{"changelog.html":{}}}],["rc.35",{"_index":1291,"title":{},"body":{"changelog.html":{}}}],["rc.37",{"_index":1289,"title":{},"body":{"changelog.html":{}}}],["rc.39",{"_index":1288,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":1266,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":1279,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":1261,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":1285,"title":{},"body":{"changelog.html":{}}}],["rconfig",{"_index":260,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["re",{"_index":393,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["read",{"_index":129,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["read(key",{"_index":126,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["readexcus",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["readexpressions",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["readonlyconfigs",{"_index":293,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RealConfigCollection.html":{}}}],["readonlydicontainer",{"_index":410,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["realconfigcollection",{"_index":301,"title":{"classes/RealConfigCollection.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["realgetsourcefile",{"_index":365,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["realgetsourcefile(filepath",{"_index":389,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["rebuild",{"_index":815,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["register",{"_index":383,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["rename",{"_index":1276,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":468,"title":{"injectables/Render.html":{}},"body":{"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render(name",{"_index":1101,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["render(path",{"_index":927,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["render.contract",{"_index":469,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["render.options",{"_index":599,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{}}}],["render.setview(\"__viewerror",{"_index":613,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["render_result_options",{"_index":591,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresult",{"_index":569,"title":{"classes/RenderResult.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresultoptions",{"_index":570,"title":{"interfaces/RenderResultOptions.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresult配置token",{"_index":590,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["renderstring",{"_index":926,"title":{},"body":{"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{}}}],["renderstring(path",{"_index":929,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["renderstring(tpl",{"_index":1103,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["replace(/\\//g",{"_index":807,"title":{},"body":{"interfaces/IRouter.html":{}}}],["replace(`${baserouter",{"_index":806,"title":{},"body":{"interfaces/IRouter.html":{}}}],["request",{"_index":1168,"title":{"interfaces/Request.html":{}},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["requestcancellation",{"_index":141,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["request中获取body",{"_index":857,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["request中获取params和query",{"_index":851,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["require(\"path",{"_index":1491,"title":{},"body":{"index.html":{}}}],["require(\"ts",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require(\"tslint",{"_index":352,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["require(\"uuid/v4",{"_index":166,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["require(`${ctorpath}/${commonname",{"_index":782,"title":{},"body":{"interfaces/IRouter.html":{}}}],["reset",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolvedepts",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["resolveexpressions",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["resolvekeys",{"_index":462,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["resolvekeys(jsonresolvers.snakecase",{"_index":480,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["resolvekeys(r",{"_index":958,"title":{},"body":{"classes/JsonResult.html":{}}}],["resolvemethodresult",{"_index":1226,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvemethodresult(result",{"_index":1199,"title":{},"body":{"interfaces/Request.html":{}}}],["resolveparamtype",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["resolveparamtype(type",{"_index":864,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["resolveparamtype(types[index",{"_index":863,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["resolver",{"_index":842,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["resolver(ctx.request.body",{"_index":1215,"title":{},"body":{"interfaces/Request.html":{}}}],["resolveroutemethodparams",{"_index":1197,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvestatictype",{"_index":1220,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvestatictype(stac",{"_index":1216,"title":{},"body":{"interfaces/Request.html":{}}}],["restriction",{"_index":1578,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":79,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result).toresult",{"_index":1227,"title":{},"body":{"interfaces/Request.html":{}}}],["result.toresult",{"_index":621,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":820,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["results/json",{"_index":465,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/Render.html":{}}}],["results/render",{"_index":598,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":316,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["rights",{"_index":1581,"title":{},"body":{"index.html":{},"license.html":{}}}],["rimraf",{"_index":742,"title":{},"body":{"interfaces/IRouter.html":{},"dependencies.html":{}}}],["rimraf.sync(routerpath",{"_index":758,"title":{},"body":{"interfaces/IRouter.html":{}}}],["root",{"_index":576,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IView.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root_path",{"_index":1475,"title":{},"body":{"index.html":{}}}],["root}/${xpath",{"_index":1151,"title":{},"body":{"classes/RenderResult.html":{}}}],["route",{"_index":845,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"index.html":{}}}],["route_magic",{"_index":866,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["route_query",{"_index":856,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["routeargument",{"_index":840,"title":{"interfaces/RouteArgument.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["routeparams",{"_index":1192,"title":{},"body":{"interfaces/Request.html":{}}}],["routeparams.foreach(i",{"_index":1210,"title":{},"body":{"interfaces/Request.html":{}}}],["router",{"_index":678,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router(prefix)(target",{"_index":1180,"title":{},"body":{"interfaces/Request.html":{}}}],["router.js",{"_index":795,"title":{},"body":{"interfaces/IRouter.html":{}}}],["router.routes[key",{"_index":846,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router.ts",{"_index":1304,"title":{},"body":{"changelog.html":{}}}],["router/dist/decorators/route.factory",{"_index":828,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router/dist/decorators/utils",{"_index":831,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router/dist/metadata",{"_index":676,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router_options",{"_index":726,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeralwaysbuild",{"_index":701,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routerautobuild",{"_index":698,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routerbase",{"_index":749,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerconfig",{"_index":218,"title":{"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["routerfolder",{"_index":748,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["routermeta",{"_index":824,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["routeroptions",{"_index":729,"title":{"interfaces/RouterOptions.html":{}},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{}}}],["routerpath",{"_index":757,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerpath}/${commonname}.${filetype",{"_index":787,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerpath}/${path",{"_index":769,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerroot",{"_index":703,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routers",{"_index":209,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routers[`${commonname}.${filetype",{"_index":803,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routers[path",{"_index":768,"title":{},"body":{"interfaces/IRouter.html":{}}}],["router文件的文件类型，默认：'js",{"_index":674,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/RouterOptions.html":{}}}],["router文件的文件类型，默认：`'js",{"_index":697,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{}}}],["router的createrouter",{"_index":689,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routes",{"_index":825,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["routes部分由astroboy",{"_index":1177,"title":{},"body":{"interfaces/Request.html":{}}}],["rs",{"_index":1096,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["run",{"_index":1336,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["sb",{"_index":311,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["scope",{"_index":486,"title":{"injectables/Scope.html":{}},"body":{"interfaces/Contract-5.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"injectables/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope.contract",{"_index":487,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["scoped(...args",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scopeds",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scoped），简单的描述来说，一个服务在同一个请求流程中总是保持单例状态，并在请求结束后释放。scoped",{"_index":1535,"title":{},"body":{"index.html":{}}}],["scopeid",{"_index":411,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/IMiddlewaresScope.html":{},"injectables/Scope.html":{}}}],["sell",{"_index":1587,"title":{},"body":{"index.html":{},"license.html":{}}}],["serialize",{"_index":720,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/TypedSerializerCreator.html":{}}}],["serialize(obj",{"_index":1248,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serialize.options",{"_index":1174,"title":{},"body":{"interfaces/Request.html":{}}}],["serialize.options.ts",{"_index":1376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializedefine",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["serializer",{"_index":723,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["serializer/core.ts",{"_index":1241,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["serializer/core.ts:17",{"_index":1244,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:29",{"_index":1242,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:35",{"_index":1245,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:43",{"_index":1243,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/defines.ts",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["serializer/index.ts",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":558,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server.create",{"_index":1526,"title":{},"body":{"index.html":{}}}],["server.create(astroboy",{"_index":1474,"title":{},"body":{"index.html":{}}}],["serverbundle",{"_index":1642,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["serverinit",{"_index":1371,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":514,"title":{},"body":{"interfaces/IContext.html":{}}}],["servicename",{"_index":523,"title":{},"body":{"interfaces/IContext.html":{}}}],["services",{"_index":1465,"title":{},"body":{"index.html":{}}}],["services/astroboycontext",{"_index":713,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["services/baseclass",{"_index":712,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["services/configreader",{"_index":714,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["services/configs",{"_index":279,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouterOptions.html":{}}}],["services/context",{"_index":596,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["services/data",{"_index":1552,"title":{},"body":{"index.html":{}}}],["services/injector",{"_index":595,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{}}}],["services/render",{"_index":597,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{}}}],["set",{"_index":460,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"miscellaneous/variables.html":{}}}],["set(n",{"_index":956,"title":{},"body":{"classes/JsonResult.html":{}}}],["set(token",{"_index":303,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["setcolor",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["setscopeid",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["setview",{"_index":450,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(...args",{"_index":474,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(key",{"_index":455,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(obj",{"_index":451,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["severity",{"_index":972,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["severity_error",{"_index":973,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severity_warning",{"_index":974,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severitya",{"_index":1021,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severityb",{"_index":1019,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severityb].map(type",{"_index":1087,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["shall",{"_index":1596,"title":{},"body":{"index.html":{},"license.html":{}}}],["shit",{"_index":1481,"title":{},"body":{"index.html":{}}}],["show",{"_index":818,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["showcounts",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["showrouters",{"_index":817,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["showroutes",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["showtrace",{"_index":1492,"title":{},"body":{"index.html":{}}}],["showvalue",{"_index":1533,"title":{},"body":{"index.html":{}}}],["simple_logger_options",{"_index":724,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["simplelogger",{"_index":601,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"coverage.html":{}}}],["simpleloglevel",{"_index":891,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["simpleloglevel.warn",{"_index":893,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":1537,"title":{},"body":{"index.html":{}}}],["singleton(...args",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["singletons",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakecase",{"_index":964,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snakecase(key",{"_index":962,"title":{},"body":{"classes/JsonResult.html":{}}}],["software",{"_index":1573,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":382,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["sourcector",{"_index":692,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{}}}],["split(\"\\n",{"_index":794,"title":{},"body":{"interfaces/IRouter.html":{}}}],["src/.../base.ts",{"_index":1450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../baseclass.ts",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bundle.ts",{"_index":1638,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../check.ts",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../compile",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configs.ts",{"_index":1643,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../controller.ts",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.ts",{"_index":1641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../env.config.ts",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.options.ts",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../init.ts",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iresult.ts",{"_index":1631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../json.options.ts",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json.ts",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../normalizedmessage.ts",{"_index":1637,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../options.ts",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../render.options.ts",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route.ts",{"_index":1639,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../router.options.ts",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1635,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../typed",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1633,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../view.config.ts",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/builders/config",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["src/builders/routers.ts",{"_index":740,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["src/builders/routers.ts:7",{"_index":741,"title":{},"body":{"interfaces/IRouter.html":{}}}],["src/bundle.ts",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/base",{"_index":262,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{}}}],["src/cmd/base.ts",{"_index":203,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["src/cmd/base.ts:13",{"_index":544,"title":{},"body":{"interfaces/IENV.html":{}}}],["src/cmd/cmd.ts",{"_index":270,"title":{},"body":{"interfaces/Config-1.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["src/cmd/compile",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/config/actions.ts",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["src/cmd/config/options.ts",{"_index":502,"title":{},"body":{"interfaces/IConfigCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/dev/actions.ts",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["src/cmd/dev/check.ts",{"_index":1335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/dev/options.ts",{"_index":526,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/index.ts",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["src/cmd/init.ts",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/register.ts",{"_index":1342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/router/actions.ts",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["src/cmd/router/options.ts",{"_index":810,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/utils/cancellationtoken.ts",{"_index":132,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["src/cmd/utils/cancellationtoken.ts:26",{"_index":149,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:27",{"_index":148,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:28",{"_index":146,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:39",{"_index":156,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:50",{"_index":161,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:57",{"_index":157,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:61",{"_index":158,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:78",{"_index":160,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:84",{"_index":159,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:89",{"_index":151,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/loadconfig.ts",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["src/cmd/utils/normalizedmessage.ts",{"_index":968,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cmd/utils/normalizedmessage.ts:106",{"_index":1020,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:117",{"_index":1016,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:131",{"_index":1012,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:144",{"_index":1038,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:15",{"_index":1003,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:156",{"_index":1034,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:16",{"_index":1005,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:160",{"_index":1036,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:164",{"_index":1033,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:168",{"_index":1035,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:172",{"_index":1037,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:19",{"_index":997,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:20",{"_index":999,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:22",{"_index":1001,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:23",{"_index":992,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:24",{"_index":996,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:25",{"_index":993,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:26",{"_index":994,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:27",{"_index":995,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:28",{"_index":991,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:40",{"_index":1027,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:44",{"_index":1008,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:80",{"_index":1032,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:87",{"_index":1029,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:95",{"_index":1024,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/typecheck.ts",{"_index":328,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["src/configs/env.config.ts",{"_index":545,"title":{},"body":{"interfaces/IENV-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configs/view.config.ts",{"_index":916,"title":{},"body":{"interfaces/IView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/controller.ts",{"_index":1169,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/injectable.ts",{"_index":629,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"coverage.html":{}}}],["src/decorators/route.ts",{"_index":823,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/singleton.ts",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["src/index.ts",{"_index":671,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["src/middlewares/core.ts",{"_index":649,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/middlewares/index.ts",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/config",{"_index":272,"title":{},"body":{"interfaces/ConfigCompilerOptions.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/errors.options.ts",{"_index":593,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/json.options.ts",{"_index":965,"title":{},"body":{"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/render.options.ts",{"_index":553,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/router.options.ts",{"_index":931,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/typed",{"_index":1375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/nunjunks/core.ts",{"_index":1092,"title":{},"body":{"injectables/NunjunksEngine.html":{},"coverage.html":{}}}],["src/plugins/nunjunks/core.ts:10",{"_index":1105,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:11",{"_index":1107,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:13",{"_index":1109,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:19",{"_index":1111,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:28",{"_index":1100,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:33",{"_index":1097,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:37",{"_index":1102,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:41",{"_index":1104,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/options.ts",{"_index":660,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/simple",{"_index":888,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/typed",{"_index":1240,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/results/json.ts",{"_index":936,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/results/json.ts:17",{"_index":938,"title":{},"body":{"classes/JsonResult.html":{}}}],["src/results/json.ts:32",{"_index":940,"title":{},"body":{"classes/JsonResult.html":{}}}],["src/results/render.ts",{"_index":1138,"title":{},"body":{"classes/RenderResult.html":{},"coverage.html":{}}}],["src/results/render.ts:23",{"_index":1139,"title":{},"body":{"classes/RenderResult.html":{}}}],["src/results/render.ts:30",{"_index":1140,"title":{},"body":{"classes/RenderResult.html":{}}}],["src/server.ts",{"_index":1390,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/astroboycontext.ts",{"_index":4,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"coverage.html":{}}}],["src/services/astroboycontext.ts:11",{"_index":398,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:12",{"_index":401,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:13",{"_index":400,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:14",{"_index":397,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:15",{"_index":402,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:16",{"_index":399,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:37",{"_index":34,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:41",{"_index":38,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:45",{"_index":40,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:47",{"_index":19,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:51",{"_index":24,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:56",{"_index":30,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:61",{"_index":28,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:66",{"_index":21,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:71",{"_index":32,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:76",{"_index":26,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/baseclass.ts",{"_index":82,"title":{},"body":{"classes/BaseClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/baseclass.ts:14",{"_index":87,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:15",{"_index":86,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:16",{"_index":85,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:18",{"_index":89,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:19",{"_index":92,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:20",{"_index":91,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:21",{"_index":88,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:22",{"_index":93,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:23",{"_index":90,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/configreader.ts",{"_index":98,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{},"coverage.html":{}}}],["src/services/configreader.ts:13",{"_index":509,"title":{},"body":{"interfaces/IConfigsCompiler.html":{}}}],["src/services/configreader.ts:24",{"_index":321,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["src/services/configreader.ts:28",{"_index":326,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["src/services/configreader.ts:30",{"_index":320,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["src/services/configreader.ts:34",{"_index":322,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["src/services/configreader.ts:35",{"_index":323,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["src/services/configreader.ts:36",{"_index":324,"title":{},"body":{"injectables/ConfigReader.html":{}}}],["src/services/configreader.ts:5",{"_index":102,"title":{},"body":{"interfaces/BaseCompiler.html":{}}}],["src/services/configreader.ts:9",{"_index":914,"title":{},"body":{"interfaces/IStrictConfigsCompiler.html":{}}}],["src/services/configs.ts",{"_index":287,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/configs.ts:27",{"_index":1124,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:29",{"_index":1126,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:33",{"_index":1125,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:38",{"_index":1127,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/context.ts",{"_index":404,"title":{},"body":{"interfaces/Contract-2.html":{},"coverage.html":{}}}],["src/services/injector.ts",{"_index":409,"title":{},"body":{"interfaces/Contract-3.html":{},"coverage.html":{}}}],["src/services/render.ts",{"_index":448,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["src/services/render.ts:15",{"_index":452,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:16",{"_index":454,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:20",{"_index":456,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:21",{"_index":457,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:34",{"_index":1135,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:36",{"_index":1137,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:38",{"_index":1128,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:52",{"_index":1129,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:54",{"_index":1130,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:55",{"_index":1131,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:59",{"_index":1132,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:60",{"_index":1133,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:65",{"_index":1134,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/scope.ts",{"_index":482,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"coverage.html":{}}}],["src/services/scope.ts:13",{"_index":1233,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:14",{"_index":1234,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:15",{"_index":1235,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:16",{"_index":1236,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:18",{"_index":1238,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:22",{"_index":1232,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:29",{"_index":1229,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:35",{"_index":1231,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:41",{"_index":1230,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:7",{"_index":485,"title":{},"body":{"interfaces/Contract-5.html":{}}}],["src/typings/icontext.ts",{"_index":510,"title":{},"body":{"interfaces/IContext.html":{},"coverage.html":{}}}],["src/typings/icontext.ts:12",{"_index":517,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:19",{"_index":513,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:27",{"_index":520,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:33",{"_index":516,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:5",{"_index":515,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:6",{"_index":518,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/iresult.ts",{"_index":731,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/typings/iresult.ts:29",{"_index":735,"title":{},"body":{"interfaces/IResult.html":{}}}],["src/typings/istatictyperesolver.ts",{"_index":895,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"coverage.html":{}}}],["src/typings/istatictyperesolver.ts:10",{"_index":911,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:15",{"_index":908,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:17",{"_index":913,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:22",{"_index":909,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/iviewengine.ts",{"_index":925,"title":{},"body":{"interfaces/IViewEngine.html":{},"coverage.html":{}}}],["src/typings/iviewengine.ts:4",{"_index":928,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["src/typings/iviewengine.ts:5",{"_index":930,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["src/utils.ts",{"_index":1407,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stac",{"_index":1211,"title":{},"body":{"interfaces/Request.html":{}}}],["start",{"_index":489,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["started",{"_index":1256,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttypecheck",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["state",{"_index":574,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":119,"title":{},"body":{"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["static_resolver",{"_index":727,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["staticresolver",{"_index":1195,"title":{},"body":{"interfaces/Request.html":{}}}],["staticresolver.fromobject(value",{"_index":1225,"title":{},"body":{"interfaces/Request.html":{}}}],["stats",{"_index":376,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["stats.mtime.valueof",{"_index":378,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["stop",{"_index":491,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["string",{"_index":104,"title":{},"body":{"interfaces/BaseCompiler.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigCompilerOptions.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigCmdOptions.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerConfigCompilerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(err",{"_index":1482,"title":{},"body":{"index.html":{}}}],["string(value",{"_index":1224,"title":{},"body":{"interfaces/Request.html":{}}}],["stringa",{"_index":1017,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stringa.tostring().localecompare(stringb.tostring",{"_index":1090,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stringb",{"_index":1015,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stropt",{"_index":1547,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1592,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicense",{"_index":1585,"title":{},"body":{"index.html":{},"license.html":{}}}],["substantial",{"_index":1598,"title":{},"body":{"index.html":{},"license.html":{}}}],["success",{"_index":804,"title":{},"body":{"interfaces/IRouter.html":{}}}],["switch",{"_index":636,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{}}}],["symbol",{"_index":296,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["symbol(`config::${key",{"_index":300,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["symbol(expression",{"_index":121,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["symbol(key",{"_index":298,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/BaseCompiler.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["t[k",{"_index":128,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["table",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":423,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["target.__proto__",{"_index":1209,"title":{},"body":{"interfaces/Request.html":{}}}],["target.prototype",{"_index":644,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["target.prototype.__proto__",{"_index":1207,"title":{},"body":{"interfaces/Request.html":{}}}],["target[i",{"_index":440,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["target[key",{"_index":438,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["template",{"_index":58,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":1519,"title":{},"body":{"index.html":{}}}],["test/unit.ts",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["test02service",{"_index":1536,"title":{},"body":{"index.html":{}}}],["test_string_config",{"_index":1548,"title":{},"body":{"index.html":{}}}],["testcontroller",{"_index":1505,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":1530,"title":{},"body":{"index.html":{}}}],["testservice;astroboy.ts",{"_index":1534,"title":{},"body":{"index.html":{}}}],["test”代表controllers",{"_index":1521,"title":{},"body":{"index.html":{}}}],["text",{"_index":901,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["this.__context.ctx.getconfig(key",{"_index":130,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["this._ctx",{"_index":406,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["this._init",{"_index":494,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this._views",{"_index":471,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["this.app",{"_index":67,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.app[\"config",{"_index":68,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.base",{"_index":1509,"title":{},"body":{"index.html":{}}}],["this.cancellationfilename",{"_index":181,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.cfg.get(nunjunks_options",{"_index":1115,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.character",{"_index":1051,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.code",{"_index":1041,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.compare(messagea",{"_index":1076,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.configs",{"_index":953,"title":{},"body":{"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{}}}],["this.configs.cache",{"_index":1119,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.configs.get(demo_options);4",{"_index":1549,"title":{},"body":{"index.html":{}}}],["this.content",{"_index":1045,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.context.ctx",{"_index":64,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.createenv(configs).render(name",{"_index":1121,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.createenv(configs).renderstring(tpl",{"_index":1123,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.ctx",{"_index":65,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx).app",{"_index":66,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.callservice(...args",{"_index":76,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getconfig(...args",{"_index":73,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getlib(...args",{"_index":78,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getservice(...args",{"_index":75,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getserviceclass(...args",{"_index":74,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.invokeservicemethod(...args",{"_index":77,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.file",{"_index":1047,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.init",{"_index":472,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["this.iscancellationrequested",{"_index":198,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.iscancelled",{"_index":180,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.isdiagnostictype",{"_index":1091,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.lastcancellationchecktime",{"_index":182,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.line",{"_index":1049,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.loader",{"_index":1120,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.map.get(token.key",{"_index":307,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["this.map.set(token.key",{"_index":305,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["this.read",{"_index":123,"title":{},"body":{"interfaces/BaseCompiler.html":{},"injectables/ConfigReader.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IStrictConfigsCompiler.html":{}}}],["this.rs.views",{"_index":1122,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.scopeid",{"_index":492,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.severity",{"_index":1043,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.start",{"_index":496,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.start.gettime",{"_index":500,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.stop",{"_index":498,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.stop.gettime",{"_index":499,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.type",{"_index":1039,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.typescript.operationcanceledexception",{"_index":199,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.value",{"_index":954,"title":{},"body":{"classes/JsonResult.html":{},"index.html":{}}}],["this[\"@configs",{"_index":1114,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this[\"@loader",{"_index":1116,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this[$$injector",{"_index":1194,"title":{},"body":{"interfaces/Request.html":{}}}],["this[internal_injector",{"_index":1186,"title":{},"body":{"interfaces/Request.html":{}}}],["throw",{"_index":177,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"miscellaneous/variables.html":{}}}],["throwifcancellationrequested",{"_index":142,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["throwonundefined",{"_index":664,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["throws",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":188,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["title",{"_index":568,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["tk",{"_index":641,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["toarray",{"_index":309,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["tojson",{"_index":143,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/TypedSerializerCreator.html":{}}}],["tojson(obj",{"_index":910,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["token",{"_index":288,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/IInjectableConfigs.html":{},"classes/RealConfigCollection.html":{}}}],["tokengenerator",{"_index":297,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toobject",{"_index":904,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["toobject(obj",{"_index":912,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["toresult",{"_index":732,"title":{},"body":{"interfaces/IResult.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["toresult(scope",{"_index":733,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{}}}],["toresult(undefined",{"_index":939,"title":{},"body":{"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["tort",{"_index":1619,"title":{},"body":{"index.html":{},"license.html":{}}}],["tos",{"_index":479,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tosave",{"_index":477,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tosnake",{"_index":467,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tostring",{"_index":422,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["tp",{"_index":642,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["tpl",{"_index":615,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"miscellaneous/variables.html":{}}}],["tplkey",{"_index":951,"title":{},"body":{"classes/JsonResult.html":{}}}],["tpls",{"_index":871,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["tplstr",{"_index":555,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["trace",{"_index":1452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":838,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["transpile",{"_index":210,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trimblocks",{"_index":665,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":178,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/INunjunksRenderOptions.html":{},"injectables/Render.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":170,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["trycatchglobalerror",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["trycatchglobalerror(injector",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trygetroutemagic",{"_index":1172,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["trygetroutemagic(prototype",{"_index":843,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["trygetrouter",{"_index":830,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["trygetrouter(prototype",{"_index":850,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["trygetroutermagic",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["trygetroutermagic(prototype",{"_index":844,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["ts",{"_index":70,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts2",{"_index":1524,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":211,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.compileroptions",{"_index":339,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tsconfig.json",{"_index":816,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":332,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tslint.configuration.loadconfigurationfrompath",{"_index":353,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tslint:disable",{"_index":347,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tsnode",{"_index":1343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["turn",{"_index":762,"title":{},"body":{"interfaces/IRouter.html":{}}}],["turnlod",{"_index":808,"title":{},"body":{"interfaces/IRouter.html":{}}}],["type",{"_index":114,"title":{},"body":{"interfaces/BaseCompiler.html":{},"interfaces/ConfigEntry.html":{},"injectables/ConfigReader.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/IConfigsCompiler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IStrictConfigsCompiler.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["type_diagnostic",{"_index":975,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["type_lint",{"_index":976,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typea",{"_index":1025,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typealiases",{"_index":1630,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeb",{"_index":1023,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typeb].map(type",{"_index":1081,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typecheck",{"_index":212,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["typed",{"_index":899,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["typedserializer",{"_index":719,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedserializercreator",{"_index":1239,"title":{"classes/TypedSerializerCreator.html":{}},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":59,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["types",{"_index":860,"title":{},"body":{"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["types/koa",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":147,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typescript.compileroptions",{"_index":336,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.createcompilerhost(programconfig.options",{"_index":364,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.createprogram",{"_index":390,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.parsedcommandline",{"_index":356,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.parsejsonconfigfilecontent",{"_index":341,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.program",{"_index":362,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.readconfigfile",{"_index":337,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.sys",{"_index":342,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.sys.readfile",{"_index":338,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript3.2",{"_index":1457,"title":{},"body":{"index.html":{}}}],["typetransform",{"_index":1222,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["typetransform(staticresolver",{"_index":1221,"title":{},"body":{"interfaces/Request.html":{}}}],["typings/icontext",{"_index":47,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["typings/iresult",{"_index":715,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["typings/istatictyperesolver",{"_index":716,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{}}}],["typings/iviewengine",{"_index":565,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{}}}],["undefined",{"_index":217,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract-4.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["unique(...args",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniques",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":673,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"index.html":{}}}],["urlroot",{"_index":776,"title":{},"body":{"interfaces/IRouter.html":{}}}],["use",{"_index":394,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/RenderResultOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usestatic",{"_index":839,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["ut",{"_index":1269,"title":{},"body":{"changelog.html":{}}}],["utils",{"_index":463,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["uuid",{"_index":165,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"dependencies.html":{}}}],["v",{"_index":1213,"title":{},"body":{"interfaces/Request.html":{},"index.html":{}}}],["v1",{"_index":1497,"title":{},"body":{"index.html":{}}}],["v1/prj",{"_index":821,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["value",{"_index":289,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{}}}],["value.bind(this)(...params",{"_index":1198,"title":{},"body":{"interfaces/Request.html":{}}}],["variable",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1644,"title":{"miscellaneous/variables.html":{}},"body":{}}],["verbose",{"_index":213,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["view",{"_index":922,"title":{},"body":{"interfaces/IView.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":449,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["void",{"_index":152,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["w",{"_index":802,"title":{},"body":{"interfaces/IRouter.html":{}}}],["warn",{"_index":1454,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":998,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["warranties",{"_index":1605,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":1600,"title":{},"body":{"index.html":{},"license.html":{}}}],["watch",{"_index":214,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigCompilerConfig.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"index.html":{}}}],["watcher",{"_index":359,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["watcher.iswatchingfile(filepath",{"_index":375,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["watching",{"_index":371,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["way",{"_index":1069,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["webpack",{"_index":1496,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1618,"title":{},"body":{"index.html":{},"license.html":{}}}],["white",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whitespace",{"_index":946,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":1459,"title":{},"body":{"index.html":{}}}],["without",{"_index":1577,"title":{},"body":{"index.html":{},"license.html":{}}}],["world",{"_index":1479,"title":{},"body":{"index.html":{}}}],["woshinidie",{"_index":1546,"title":{},"body":{"index.html":{}}}],["x1b[0m",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[31m\\x1b[1m",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[32m",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[33m",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[34m",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[35m",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[36m",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[37m",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f31f;astroboy.ts",{"_index":1456,"title":{},"body":{"index.html":{}}}],["x1f628",{"_index":1458,"title":{},"body":{"index.html":{}}}],["xpath",{"_index":1144,"title":{},"body":{"classes/RenderResult.html":{}}}],["yellow",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AstroboyContext.html":{"url":"injectables/AstroboyContext.html","title":"injectable - AstroboyContext","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  AstroboyContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/AstroboyContext.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy.ts基础上下文服务\n\nctx 承载Koa.Context，可定制类型\napp 承载Koa.Application，可定制类型\nconfig 承载业务config，可定制类型\n\n\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                callService\n                            \n                            \n                                getConfig\n                            \n                            \n                                getLib\n                            \n                            \n                                getService\n                            \n                            \n                                getServiceClass\n                            \n                            \n                                invokeServiceMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ctx\n                                \n                                \n                                    app\n                                \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                被定义在 src/services/AstroboyContext.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    Context\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        ctx\n                    \n                \n\n                \n                    \n                        getctx()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:37\n                                \n                            \n                    \n                        \n                                BaseClass.ctx \n\n\n                                \n                                    返回 :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        app\n                    \n                \n\n                \n                    \n                        getapp()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:41\n                                \n                            \n                    \n                        \n                                BaseClass.app \n\n\n                                \n                                    返回 :     A\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:45\n                                \n                            \n                    \n                        \n                                BaseClass.config \n\n\n                                \n                                    返回 :     C\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import Koa from \"koa\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { IContext } from \"../typings/IContext\";\nimport { Context } from \"./Context\";\n\nexport namespace AstroboyContext {\n  export interface Contract {\n    readonly ctx: T;\n    readonly app: A;\n    readonly config: C;\n    getConfig(...args: any[]): any;\n    getServiceClass(...args: any[]): any;\n    getService(...args: any[]): any;\n    callService(...args: any[]): any;\n    invokeServiceMethod(...args: any[]): any;\n    getLib(...args: any[]): any;\n  }\n}\n\n/**\n * ## Astroboy.ts基础上下文服务\n * * `ctx` 承载Koa.Context，可定制类型\n * * `app` 承载Koa.Application，可定制类型\n * * `config` 承载业务config，可定制类型\n * @description\n * @author Big Mogician\n * @export\n * @class AstroboyContext\n * @template T typeof `ctx` 类型\n * @template A typeof `app` 类型\n * @template C typeof `config` 类型\n */\n@Injectable()\nexport class AstroboyContext\n  implements AstroboyContext.Contract {\n  /** BaseClass.ctx */\n  public get ctx(): T {\n    return this.context.ctx || {};\n  }\n  /** BaseClass.app */\n  public get app(): A {\n    return (this.ctx && (this.ctx).app) || {};\n  }\n  /** BaseClass.config */\n  public get config(): C {\n    return (this.app && this.app[\"config\"]) || {};\n  }\n\n  constructor(protected context: Context) {}\n\n  getConfig(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getConfig(...args);\n  }\n\n  getServiceClass(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getServiceClass(...args);\n  }\n\n  getService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getService(...args);\n  }\n\n  callService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.callService(...args);\n  }\n\n  invokeServiceMethod(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.invokeServiceMethod(...args);\n  }\n\n  getLib(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getLib(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseClass.html":{"url":"classes/BaseClass.html","title":"class - BaseClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseClass\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/BaseClass.ts\n        \n\n            \n                描述\n            \n            \n                基础astroboy类\n\n不建议在astroboy.ts的体系中使用\n完整功能替代：AstroboyContext服务\n\n\n            \n\n\n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                ctx\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                callService\n                            \n                            \n                                getConfig\n                            \n                            \n                                getLib\n                            \n                            \n                                getService\n                            \n                            \n                                getServiceClass\n                            \n                            \n                                invokeServiceMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(ctx: Koa.Context)\n                    \n                \n                        \n                            \n                                被定义在 src/services/BaseClass.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                    Koa.Context\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Koa\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     any\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Koa.Context\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import Koa from \"koa\";\nimport { BaseClass as C } from \"astroboy\";\n\n/**\n * ## 基础astroboy类\n * * 不建议在astroboy.ts的体系中使用\n * * 完整功能替代：AstroboyContext服务\n * @description\n * @author Big Mogician\n * @export\n * @class BaseClass\n */\ndeclare class BaseClass {\n  public ctx: Koa.Context;\n  public app: Koa;\n  public config: any;\n  constructor(ctx: Koa.Context);\n  getConfig(...args): any;\n  getServiceClass(...args): any;\n  getService(...args): any;\n  callService(...args): any;\n  invokeServiceMethod(...args): any;\n  getLib(...args): any;\n}\n\nconst BC: typeof BaseClass = C;\n\nexport { BC as BaseClass };\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/BaseCompiler.html":{"url":"interfaces/BaseCompiler.html","title":"interface - BaseCompiler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  BaseCompiler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/ConfigReader.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                        可选的\n                                    procedures\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                可选的\n                            procedures\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocedures(process: NodeJS.Process)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        process\n                                                        \n                                                                    NodeJS.Process\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { AstroboyContext } from \"./AstroboyContext\";\nimport { Injectable } from \"../decorators/injectable\";\n\ninterface BaseCompiler {\n  procedures?(process: NodeJS.Process): string[];\n}\n\nexport interface IStrictConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): T;\n}\n\nexport interface IConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): Partial;\n}\n\n/**\n * ## Astroboy.ts Base ConfigReader\n * * provide type intelliSence\n * * a delegate for ctx.getConfig(...)\n * * extends this class for DI\n */\n@Injectable()\nexport class ConfigReader {\n  static Expression(expression: string): T {\n    return Symbol(expression) as any;\n  }\n\n  public get global(): T {\n    return this.read();\n  }\n\n  constructor(private __context: AstroboyContext) {}\n\n  public read(key: K): T[K];\n  public read(): T;\n  public read(key?: string): any {\n    return this.__context.ctx.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CancellationToken.html":{"url":"classes/CancellationToken.html","title":"class - CancellationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CancellationToken\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/CancellationToken.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancellationFileName\n                            \n                            \n                                    Private\n                                isCancelled\n                            \n                            \n                                    Private\n                                lastCancellationCheckTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cleanupCancellation\n                            \n                            \n                                    Static\n                                createFromJSON\n                            \n                            \n                                    Public\n                                getCancellationFilePath\n                            \n                            \n                                    Public\n                                isCancellationRequested\n                            \n                            \n                                    Public\n                                requestCancellation\n                            \n                            \n                                    Public\n                                throwIfCancellationRequested\n                            \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(typescript, cancellationFileName?: string, isCancelled?: boolean)\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/utils/CancellationToken.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typescript\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancellationFileName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        isCancelled\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cancellationFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isCancelled\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     boolean\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastCancellationCheckTime\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cleanupCancellation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanupCancellation()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createFromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFromJSON(typescript, json: CancellationTokenData)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typescript\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        json\n                                                        \n                                                                    CancellationTokenData\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     CancellationToken\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCancellationFilePath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCancellationFilePath()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isCancellationRequested\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isCancellationRequested()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestCancellation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        requestCancellation()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            throwIfCancellationRequested\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        throwIfCancellationRequested()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toJSON()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     { cancellationFileName: string; isCancelled: boolean; }\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as ts from \"typescript\";\nimport uuid = require(\"uuid/v4\");\n\nfunction existsSync(filePath: fs.PathLike) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === \"ENOENT\") {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return true;\n}\n\ninterface CancellationTokenData {\n  isCancelled: boolean;\n  cancellationFileName: string;\n}\n\nexport class CancellationToken {\n  private isCancelled: boolean;\n  private cancellationFileName: string;\n  private lastCancellationCheckTime: number;\n  constructor(\n    private typescript: typeof ts,\n    cancellationFileName?: string,\n    isCancelled?: boolean\n  ) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || uuid();\n    this.lastCancellationCheckTime = 0;\n  }\n\n  public static createFromJSON(\n    typescript: typeof ts,\n    json: CancellationTokenData\n  ) {\n    return new CancellationToken(\n      typescript,\n      json.cancellationFileName,\n      json.isCancelled\n    );\n  }\n\n  public toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  public getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  public isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  public throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  public requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), \"\");\n    this.isCancelled = true;\n  }\n\n  public cleanupCancellation() {\n    if (this.isCancelled && existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CancellationTokenData.html":{"url":"interfaces/CancellationTokenData.html","title":"interface - CancellationTokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CancellationTokenData\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/CancellationToken.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cancellationFileName\n                                \n                                \n                                        isCancelled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        cancellationFileName\n                                    \n                                \n                                \n                                    \n                                        cancellationFileName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCancelled\n                                    \n                                \n                                \n                                    \n                                        isCancelled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as ts from \"typescript\";\nimport uuid = require(\"uuid/v4\");\n\nfunction existsSync(filePath: fs.PathLike) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === \"ENOENT\") {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return true;\n}\n\ninterface CancellationTokenData {\n  isCancelled: boolean;\n  cancellationFileName: string;\n}\n\nexport class CancellationToken {\n  private isCancelled: boolean;\n  private cancellationFileName: string;\n  private lastCancellationCheckTime: number;\n  constructor(\n    private typescript: typeof ts,\n    cancellationFileName?: string,\n    isCancelled?: boolean\n  ) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || uuid();\n    this.lastCancellationCheckTime = 0;\n  }\n\n  public static createFromJSON(\n    typescript: typeof ts,\n    json: CancellationTokenData\n  ) {\n    return new CancellationToken(\n      typescript,\n      json.cancellationFileName,\n      json.isCancelled\n    );\n  }\n\n  public toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  public getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  public isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  public throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  public requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), \"\");\n    this.isCancelled = true;\n  }\n\n  public cleanupCancellation() {\n    if (this.isCancelled && existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CmdConfig.html":{"url":"interfaces/CmdConfig.html","title":"interface - CmdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CmdConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        configCompiler\n                                \n                                \n                                            可选的\n                                        debug\n                                \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        ignore\n                                \n                                \n                                            可选的\n                                        inspect\n                                \n                                \n                                            可选的\n                                        mock\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                                \n                                            可选的\n                                        transpile\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                                \n                                            可选的\n                                        typeCheck\n                                \n                                \n                                            可选的\n                                        verbose\n                                \n                                \n                                            可选的\n                                        watch\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configCompiler\n                                    \n                                \n                                \n                                    \n                                        configCompiler:     ConfigCompilerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ConfigCompilerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     IENV\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     IENV\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignore\n                                    \n                                \n                                \n                                    \n                                        ignore:     string[] | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[] | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inspect\n                                    \n                                \n                                \n                                    \n                                        inspect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     boolean | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transpile\n                                    \n                                \n                                \n                                    \n                                        transpile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeCheck\n                                    \n                                \n                                \n                                    \n                                        typeCheck:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        verbose:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                    \n                                \n                                \n                                    \n                                        watch:     string[] | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[] | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface ConfigCompilerConfig {\n  enabled?: boolean;\n  force?: boolean;\n  configroot?: string;\n  outputroot?: string;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n  configCompiler?: ConfigCompilerConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    },\n    configCompiler: {\n      ...get(merge, \"configCompiler\", {}),\n      ...get(config, \"configCompiler\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CommandPlugin.html":{"url":"interfaces/CommandPlugin.html","title":"interface - CommandPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CommandPlugin\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        description\n                                \n                                \n                                        help\n                                \n                                \n                                        name\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        help\n                                    \n                                \n                                \n                                    \n                                        help:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Array<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Array<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface ConfigCompilerConfig {\n  enabled?: boolean;\n  force?: boolean;\n  configroot?: string;\n  outputroot?: string;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n  configCompiler?: ConfigCompilerConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    },\n    configCompiler: {\n      ...get(merge, \"configCompiler\", {}),\n      ...get(config, \"configCompiler\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Config\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     Env\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Env\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Config-1.html":{"url":"interfaces/Config-1.html","title":"interface - Config-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Config\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     Env\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Env\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigCompilerConfig.html":{"url":"interfaces/ConfigCompilerConfig.html","title":"interface - ConfigCompilerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigCompilerConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        configroot\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        force\n                                \n                                \n                                            可选的\n                                        outputroot\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configroot\n                                    \n                                \n                                \n                                    \n                                        configroot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputroot\n                                    \n                                \n                                \n                                    \n                                        outputroot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface ConfigCompilerConfig {\n  enabled?: boolean;\n  force?: boolean;\n  configroot?: string;\n  outputroot?: string;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n  configCompiler?: ConfigCompilerConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    },\n    configCompiler: {\n      ...get(merge, \"configCompiler\", {}),\n      ...get(config, \"configCompiler\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigCompilerOptions.html":{"url":"interfaces/ConfigCompilerOptions.html","title":"interface - ConfigCompilerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigCompilerOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/config-compiler.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        configRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        force\n                                \n                                \n                                            可选的\n                                        outRoot\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configRoot\n                                    \n                                \n                                \n                                    \n                                        configRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    整个configs文件夹的相对位置，默认：'config' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动编译configs文件夹，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制编译configs文件夹，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outRoot\n                                    \n                                \n                                \n                                    \n                                        outRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    整个configs文件夹编译后的输出位置，默认：'config' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerConfigCompilerOptions extends ConfigCompilerOptions {\n  // TO DO\n}\n\nexport interface ConfigCompilerOptions {\n  /** 是否自动编译configs文件夹，默认：`false` */\n  enabled: boolean;\n  /** 是否强制编译configs文件夹，默认：`false` */\n  force: boolean;\n  /** 整个configs文件夹的相对位置，默认：`'config'` */\n  configRoot?: string;\n  /** 整个configs文件夹编译后的输出位置，默认：`'config'` */\n  outRoot?: string;\n}\n\nexport const defaultConfigCompilerOptions: ConfigCompilerOptions = {\n  enabled: false,\n  force: false,\n  configRoot: \"config\",\n  outRoot: \"config\"\n};\n\nexport const CONFIG_COMPILER_OPTIONS = createOptions(\n  \"CONFIG_COMPILER_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigEntry.html":{"url":"interfaces/ConfigEntry.html","title":"interface - ConfigEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigEntry\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     ConfigToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ConfigToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/ConfigReader.html":{"url":"injectables/ConfigReader.html","title":"injectable - ConfigReader","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  ConfigReader\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/ConfigReader.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy.ts Base ConfigReader\n\nprovide type intelliSence\na delegate for ctx.getConfig(...)\nextends this class for DI\n\n\n            \n\n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Expression\n                            \n                            \n                                    Public\n                                read\n                            \n                            \n                                    Public\n                                read\n                            \n                            \n                                    Public\n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    global\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(__context: AstroboyContext)\n                    \n                \n                        \n                            \n                                被定义在 src/services/ConfigReader.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        __context\n                                                  \n                                                        \n                                                                    AstroboyContext\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Expression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Expression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:24\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        read(key: K)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:34\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        K\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    K\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        read()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     T\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        read(key?: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        global\n                    \n                \n\n                \n                    \n                        getglobal()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/ConfigReader.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { AstroboyContext } from \"./AstroboyContext\";\nimport { Injectable } from \"../decorators/injectable\";\n\ninterface BaseCompiler {\n  procedures?(process: NodeJS.Process): string[];\n}\n\nexport interface IStrictConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): T;\n}\n\nexport interface IConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): Partial;\n}\n\n/**\n * ## Astroboy.ts Base ConfigReader\n * * provide type intelliSence\n * * a delegate for ctx.getConfig(...)\n * * extends this class for DI\n */\n@Injectable()\nexport class ConfigReader {\n  static Expression(expression: string): T {\n    return Symbol(expression) as any;\n  }\n\n  public get global(): T {\n    return this.read();\n  }\n\n  constructor(private __context: AstroboyContext) {}\n\n  public read(key: K): T[K];\n  public read(): T;\n  public read(key?: string): any {\n    return this.__context.ctx.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigToken.html":{"url":"interfaces/ConfigToken.html","title":"interface - ConfigToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigToken\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     symbol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     symbol\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigurationFile.html":{"url":"interfaces/ConfigurationFile.html","title":"interface - ConfigurationFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigurationFile\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/typeCheck.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        linterOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        linterOptions\n                                    \n                                \n                                \n                                    \n                                        linterOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as typescript from \"typescript\";\nimport { Configuration } from \"tslint\";\nimport path from \"path\";\n\nexport function loadProgramConfig(\n  configFile: string,\n  compilerOptions: typescript.CompilerOptions\n) {\n  const tsconfig = typescript.readConfigFile(\n    configFile,\n    typescript.sys.readFile\n  ).config;\n\n  tsconfig.compilerOptions = tsconfig.compilerOptions || {};\n  tsconfig.compilerOptions = {\n    ...tsconfig.compilerOptions,\n    ...compilerOptions\n  };\n\n  const parsed = typescript.parseJsonConfigFileContent(\n    tsconfig,\n    typescript.sys,\n    path.dirname(configFile)\n  );\n\n  return parsed;\n}\n\ninterface ConfigurationFile extends Configuration.IConfigurationFile {\n  linterOptions?: {\n    typeCheck?: boolean;\n    exclude?: string[];\n  };\n}\n\nexport function loadLinterConfig(configFile: string): ConfigurationFile {\n  // tslint:disable-next-line:no-implicit-dependencies\n  const tslint = require(\"tslint\");\n\n  return tslint.Configuration.loadConfigurationFromPath(\n    configFile\n  ) as ConfigurationFile;\n}\n\nexport function createProgram(\n  programConfig: typescript.ParsedCommandLine,\n  //   files: FilesRegister,\n  //   watcher: FilesWatcher,\n  oldProgram?: typescript.Program\n) {\n  const host = typescript.createCompilerHost(programConfig.options);\n  //   const realGetSourceFile = host.getSourceFile;\n\n  //   host.getSourceFile = (filePath, languageVersion, onError) => {\n  // first check if watcher is watching file - if not - check it's mtime\n  // if (!watcher.isWatchingFile(filePath)) {\n  //   try {\n  //     const stats = fs.statSync(filePath);\n\n  //     files.setMtime(filePath, stats.mtime.valueOf());\n  //   } catch (e) {\n  //     // probably file does not exists\n  //     files.remove(filePath);\n  //   }\n  // }\n\n  // // get source file only if there is no source in files register\n  // if (!files.has(filePath) || !files.getData(filePath).source) {\n  //   files.mutateData(filePath, data => {\n  //     data.source = realGetSourceFile(filePath, languageVersion, onError);\n  //   });\n  // }\n\n  // return files.getData(filePath).source;\n  //   };\n\n  return typescript.createProgram(\n    programConfig.fileNames,\n    programConfig.options,\n    host,\n    oldProgram // re-use old program\n  );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract.html":{"url":"interfaces/Contract.html","title":"interface - Contract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/AstroboyContext.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app\n                                \n                                \n                                        config\n                                \n                                \n                                        ctx\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    callService\n                                \n                                \n                                    getConfig\n                                \n                                \n                                    getLib\n                                \n                                \n                                    getService\n                                \n                                \n                                    getServiceClass\n                                \n                                \n                                    invokeServiceMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:     A\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     A\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     C\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { IContext } from \"../typings/IContext\";\nimport { Context } from \"./Context\";\n\nexport namespace AstroboyContext {\n  export interface Contract {\n    readonly ctx: T;\n    readonly app: A;\n    readonly config: C;\n    getConfig(...args: any[]): any;\n    getServiceClass(...args: any[]): any;\n    getService(...args: any[]): any;\n    callService(...args: any[]): any;\n    invokeServiceMethod(...args: any[]): any;\n    getLib(...args: any[]): any;\n  }\n}\n\n/**\n * ## Astroboy.ts基础上下文服务\n * * `ctx` 承载Koa.Context，可定制类型\n * * `app` 承载Koa.Application，可定制类型\n * * `config` 承载业务config，可定制类型\n * @description\n * @author Big Mogician\n * @export\n * @class AstroboyContext\n * @template T typeof `ctx` 类型\n * @template A typeof `app` 类型\n * @template C typeof `config` 类型\n */\n@Injectable()\nexport class AstroboyContext\n  implements AstroboyContext.Contract {\n  /** BaseClass.ctx */\n  public get ctx(): T {\n    return this.context.ctx || {};\n  }\n  /** BaseClass.app */\n  public get app(): A {\n    return (this.ctx && (this.ctx).app) || {};\n  }\n  /** BaseClass.config */\n  public get config(): C {\n    return (this.app && this.app[\"config\"]) || {};\n  }\n\n  constructor(protected context: Context) {}\n\n  getConfig(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getConfig(...args);\n  }\n\n  getServiceClass(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getServiceClass(...args);\n  }\n\n  getService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getService(...args);\n  }\n\n  callService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.callService(...args);\n  }\n\n  invokeServiceMethod(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.invokeServiceMethod(...args);\n  }\n\n  getLib(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getLib(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-1.html":{"url":"interfaces/Contract-1.html","title":"interface - Contract-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n            \n                继承\n            \n            \n                    ReadonlyConfigs\n            \n\n\n\n\n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-2.html":{"url":"interfaces/Contract-2.html","title":"interface - Contract-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Context.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctx\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport { IContext } from \"../typings/IContext\";\n\nexport namespace Context {\n  export interface Contract {\n    ctx: T;\n  }\n}\n\n/**\n * ## 基础上下文服务\n * @description\n * @author Big Mogician\n * @export\n * @class Context\n * @template T typeof `ctx` 类型\n */\nexport class Context implements Context.Contract {\n  /**\n   * ### Koa上下文对象\n   * * 有可能被astroboy和后续框架扩展\n   * @description\n   * @readonly\n   * @type {T} 聚合类型\n   * @memberof Context\n   */\n  public get ctx(): T {\n    return this._ctx;\n  }\n  constructor(private _ctx: Koa.Context) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-3.html":{"url":"interfaces/Contract-3.html","title":"interface - Contract-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Injector.ts\n        \n\n\n            \n                继承\n            \n            \n                    ReadonlyDIContainer\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scopeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        scopeId\n                                    \n                                \n                                \n                                    \n                                        scopeId:     ScopeID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ScopeID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectDIToken, ScopeID, ReadonlyDIContainer } from \"@bonbons/di\";\n\nexport namespace InjectService {\n  export interface Contract extends ReadonlyDIContainer {\n    readonly scopeId: ScopeID;\n  }\n}\n\n/**\n * ## 依赖注入服务\n * * 手动注入器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class InjectService\n */\nexport abstract class InjectService implements InjectService.Contract {\n  abstract readonly scopeId: ScopeID;\n  /**\n   * ### 解析并获得类型实例\n   * * 有可能为null\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {InjectDIToken} token\n   * @returns {T}\n   * @memberof InjectService\n   */\n  abstract get(token: InjectDIToken): T;\n  protected abstract INTERNAL_dispose(): void;\n}\n\n/**\n * ## 创建DI多重继承\n * * Proxy实现，只适合作为顶层服务存在\n * * 自定义多重先祖的优先级顺序\n * * 手动实现重载逻辑(如有必要)\n * * 不支持`deleteProperty`,`defineProperty`\n * * 不要使用`prop in object`来检查属性\n * * 不支持`toString`\n * * 不支持序列化\n * @description\n * @author Big Mogician\n * @export\n * @template T 对象DI类型\n * @param {T} target 当前对象\n * @param {string[]} depts 所有祖先实例在内部的字段名\n */\nexport function createInjectMixin(\n  target: T,\n  depts: string[]\n): T;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1]\n): T & P1;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2]\n): T & P1 & P2;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2, P3]\n): T & P1 & P2 & P3;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2, P3, P4]\n): T & P1 & P2 & P3 & P4;\nexport function createInjectMixin(\n  target: T,\n  ...depts: any[]\n): T;\nexport function createInjectMixin(...args: any[]) {\n  const [target, ...others] = args;\n  if (others[0] instanceof Array) {\n    return createProxyByKeys(target, others[0]);\n  } else {\n    return createProxyByDepts(target, others);\n  }\n}\n\nfunction createProxyByDepts(target: T, depts: any[]) {\n  return new Proxy(target, {\n    get(target, key) {\n      if (target[key]) return target[key];\n      for (let index = 0; index (target: T, depts: string[]) {\n  return new Proxy(target, {\n    get(target, key) {\n      if (target[key]) return target[key];\n      for (let index = 0; index  target[i]));\n      return Object.keys(ms);\n    },\n    ownKeys(target) {\n      const ms = Object.assign({}, target, ...depts.map(i => target[i]));\n      return Object.keys(ms);\n    },\n    has(target, key) {\n      let has = key in target;\n      if (has) return true;\n      for (let index = 0; index \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-4.html":{"url":"interfaces/Contract-4.html","title":"interface - Contract-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        views\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(obj: literal type, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(key: string, obj: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(key: string, obj: any, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-5.html":{"url":"interfaces/Contract-5.html","title":"interface - Contract-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Scope.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    diration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diration\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiration()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ScopeID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ScopeID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"../decorators/injectable\";\nimport { ScopeID } from \"@bonbons/di\";\n\nexport namespace Scope {\n  export interface Contract {\n    readonly id: ScopeID;\n    diration(): number;\n  }\n}\n\n@Injectable()\nexport class Scope implements Scope.Contract {\n  private _init = false;\n  private scopeId!: ScopeID;\n  private start!: Date;\n  private stop!: Date;\n\n  public get id() {\n    return this.scopeId;\n  }\n\n  protected init(id: ScopeID) {\n    if (this._init) return this;\n    this._init = true;\n    this.scopeId = id;\n    return this;\n  }\n\n  protected begin() {\n    if (!this.start) {\n      this.start = new Date();\n    }\n  }\n\n  protected end() {\n    if (!this.stop) {\n      this.stop = new Date();\n    }\n  }\n\n  public diration() {\n    if (this.start && this.stop) {\n      return this.stop.getTime() - this.start.getTime();\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Env\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    E\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Env-1.html":{"url":"interfaces/Env-1.html","title":"interface - Env-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Env\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    E\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IConfigCmdOptions.html":{"url":"interfaces/IConfigCmdOptions.html","title":"interface - IConfigCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IConfigCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/config/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        config\n                                \n                                \n                                            可选的\n                                        force\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IConfigCmdOptions {\n  force?: boolean;\n  config?: string;\n}\n\nexport const options: CommandPlugin = {\n  name: \"config\",\n  description: \"编译configs文件\",\n  options: [[\"-F, --force\", \"清除所有configs，并重新编译\"]],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc config\");\n    console.log(\"    $ atc config --force\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IConfigsCompiler.html":{"url":"interfaces/IConfigsCompiler.html","title":"interface - IConfigsCompiler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IConfigsCompiler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/ConfigReader.ts\n        \n\n\n            \n                继承\n            \n            \n                    BaseCompiler\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigs(process: NodeJS.Process)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        process\n                                                        \n                                                                    NodeJS.Process\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Partial\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { AstroboyContext } from \"./AstroboyContext\";\nimport { Injectable } from \"../decorators/injectable\";\n\ninterface BaseCompiler {\n  procedures?(process: NodeJS.Process): string[];\n}\n\nexport interface IStrictConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): T;\n}\n\nexport interface IConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): Partial;\n}\n\n/**\n * ## Astroboy.ts Base ConfigReader\n * * provide type intelliSence\n * * a delegate for ctx.getConfig(...)\n * * extends this class for DI\n */\n@Injectable()\nexport class ConfigReader {\n  static Expression(expression: string): T {\n    return Symbol(expression) as any;\n  }\n\n  public get global(): T {\n    return this.read();\n  }\n\n  constructor(private __context: AstroboyContext) {}\n\n  public read(key: K): T[K];\n  public read(): T;\n  public read(key?: string): any {\n    return this.__context.ctx.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IContext.html":{"url":"interfaces/IContext.html","title":"interface - IContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IContext.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    callService\n                                \n                                \n                                    getConfig\n                                \n                                \n                                    getLib\n                                \n                                \n                                    getService\n                                \n                                \n                                    getServiceClass\n                                \n                                \n                                    invokeServiceMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(service: string, method: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:19\n                            \n                        \n\n\n                \n                    \n                            调用服务\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                                    描述\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                服务名\n\n                                                        \n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                方法名\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                参数\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:12\n                            \n                        \n\n\n                \n                    \n                            获取一个 Service 类实例\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(pkgName: string, service: string, method: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:27\n                            \n                        \n\n\n                \n                    \n                            调用服务\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                                    描述\n                                            \n                                        \n                                        \n                                                \n                                                        pkgName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                包名\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                参数\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\n\nexport interface IContext extends Koa.Context {\n  config: any;\n  getConfig(...args: any[]): any;\n  getServiceClass(...args: any[]): any;\n  /**\n   * 获取一个 Service 类实例\n   * @param {String} packageName 包名\n   * @param {String} serviceName 服务名\n   */\n  getService(...args: any[]): any;\n  /**\n   * 调用服务\n   * @param {String} service 服务名\n   * @param {String} method 方法名\n   * @param {Object} args 参数\n   */\n  callService(service: string, method: string, ...args: any[]): any;\n  /**\n   * 调用服务\n   * @param {String} pkgName 包名\n   * @param {String} serviceName 服务名\n   * @param {String} methodName 方法名\n   * @param {Object} args 参数\n   */\n  invokeServiceMethod(\n    pkgName: string,\n    service: string,\n    method: string,\n    ...args: any[]\n  ): any;\n  getLib(...args: any[]): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IDevCmdOptions.html":{"url":"interfaces/IDevCmdOptions.html","title":"interface - IDevCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IDevCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/dev/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        debug\n                                \n                                \n                                        env\n                                \n                                \n                                        inspect\n                                \n                                \n                                        mock\n                                \n                                \n                                        port\n                                \n                                \n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inspect\n                                    \n                                \n                                \n                                    \n                                        inspect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IDevCmdOptions {\n  config: string;\n  debug: string | boolean;\n  env: string;\n  port: number | string;\n  mock: string | boolean;\n  tsconfig: string;\n  inspect: boolean;\n}\n\nexport const options: CommandPlugin = {\n  name: \"dev\",\n  description: \"本地开发，开启后端服务\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"使用自定义的atc.config.js配置文件\"],\n    [\"-D, --debug [debugName]\", \"开启 debug 模式\"],\n    [\"-E, --env [NODE_ENV]\", \"设置 NODE_ENV 环境变量，默认 development\"],\n    [\"-P, --port [NODE_PORT]\", \"设置 NODE_PORT 环境变量，默认 8201\"],\n    [\n      \"-M, --mock [proxyUrl]\",\n      \"开启 mock 模式，默认 proxy 地址为 http://127.0.0.1:8001\"\n    ],\n    [\"-T, --tsconfig [config]\", \"使用自定义的ts编译配置文件\"],\n    [\"-I, --inspect [inspect]\", \"启用inspector，开启编辑器断点调试\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc dev\");\n    console.log(\"    $ atc dev --debug\");\n    console.log(\"    $ atc dev --debug koa:application\");\n    console.log(\"    $ atc dev --debug --mock\");\n    console.log(\"    $ atc dev --mock http://127.0.0.1:8001\");\n    console.log(\"    $ atc dev --mock\");\n    console.log(\"    $ atc dev --env pre\");\n    console.log(\"    $ atc dev --port 8201\");\n    console.log(\"    $ atc dev --env development --port 8201\");\n    console.log(\"    $ atc dev --tsconfig app/tsconfig.json\");\n    console.log(\"    $ atc dev --inspect\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IENV.html":{"url":"interfaces/IENV.html","title":"interface - IENV","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IENV\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        NODE_ENV\n                                \n                                \n                                            可选的\n                                        NODE_PORT\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/base.ts:13\n                            \n                        \n            \n        \n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_ENV\n                                    \n                                \n                                \n                                    \n                                        NODE_ENV:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_PORT\n                                    \n                                \n                                \n                                    \n                                        NODE_PORT:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface ConfigCompilerConfig {\n  enabled?: boolean;\n  force?: boolean;\n  configroot?: string;\n  outputroot?: string;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n  configCompiler?: ConfigCompilerConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    },\n    configCompiler: {\n      ...get(merge, \"configCompiler\", {}),\n      ...get(config, \"configCompiler\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IENV-1.html":{"url":"interfaces/IENV-1.html","title":"interface - IENV-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IENV\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/configs/env.config.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        diType\n                                \n                                \n                                        env\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        diType\n                                    \n                                \n                                \n                                    \n                                        diType:     \"native\" | \"proxy\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"native\" | \"proxy\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    设置DI解析的模式，默认：'native' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    运行环境，默认：'development' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createConfig } from \"../services/Configs\";\n\ninterface IENV {\n  /** 设置DI解析的模式，默认：`'native'` */\n  diType: \"native\" | \"proxy\";\n  /** 运行环境，默认：`'development'` */\n  env: string;\n}\n\nexport const defaultEnv: IENV = {\n  diType: \"native\",\n  env: \"development\"\n};\n\n/** astroboy.ts环境变量 */\nexport const ENV = createConfig(\"@astroboy.ts\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IErrorHandler.html":{"url":"interfaces/IErrorHandler.html","title":"interface - IErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IErrorHandler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/render.options.ts\n        \n\n            \n                描述\n            \n            \n                模板渲染错误处理接口\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        path\n                                \n                                \n                                        tplStr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面渲染函数，作为兜底的渲染能力提供，\n\n默认(dev)：() => \"${错误的堆栈信息}\"\"\n默认(prod)：() => \"Internal Server Error\"\n通常不要复写此字段，除非path或tplStr能够提供可用的内容\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面模板的path，默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tplStr\n                                    \n                                \n                                \n                                    \n                                        tplStr:     string | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面字符串模板，默认：undefined \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\nimport { createOptions } from \"../services/Configs\";\nimport { NunjunksEngine } from \"../plugins/nunjunks\";\nimport { IViewEngine } from \"../typings/IViewEngine\";\n\n/**\n * ## 模板渲染错误处理接口\n * @description\n * @author Big Mogician\n * @interface IErrorHandler\n */\ninterface IErrorHandler {\n  /** 错误页面模板的path，默认：`undefined` */\n  path: string | false;\n  /** 错误页面字符串模板，默认：`undefined` */\n  tplStr: string | false;\n  /**\n   * 错误页面渲染函数，作为兜底的渲染能力提供，\n   * * 默认(dev)：`() => \"${错误的堆栈信息}\"\"`\n   * * 默认(prod)：`() => \"Internal Server Error\"`\n   * * 通常不要复写此字段，除非`path`或`tplStr`能够提供可用的内容\n   */\n  content: (error: Error, title?: string) => string;\n}\n\n/**\n * ## 配置RenderResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface RenderResultOptions\n */\nexport interface RenderResultOptions {\n  /** astroboy原生渲染的参数配置 */\n  astConf: {\n    /** 使用原生的渲染逻辑，默认：`false` */\n    use: boolean;\n    /** 原生astroboy渲染时的`config`字段，默认：`undefined` */\n    configs: any;\n    /** 原生astroboy渲染时的`state`字段，默认：`undefined` */\n    state: any;\n  };\n  /** 模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined` */\n  root: string;\n  /** 模板文件相对路径，默认：`\"\"` */\n  path: string;\n  /** 模板字符串，如果提供将优先使用此渲染，默认：`undefined` */\n  tplStr: string;\n  /** 配置信息，将作为渲染引擎需要接受的configs字段下传，默认：`undefined` */\n  configs: any;\n  /** 默认的模板引擎，默认：`\"nunjunks\"` */\n  engine: T;\n  /** 模板引擎DI列表，可以动态merge合并配置，默认：`{ nunjunks: NunjunksEngine }` */\n  engines: {\n    [prop: string]: Constructor;\n  };\n  /** 当渲染错误(生产模式)需要走的执行逻辑 */\n  onError: Partial;\n  /** 当渲染错误(开发模式)需要走的执行逻辑 */\n  onDevError: Partial;\n}\n\nexport const defaultRenderResultOptions: RenderResultOptions = {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n};\n\nfunction checkCustomError(error: Error) {\n  return error && error.name && error.name !== \"Error\";\n}\n\n/** RenderResult配置token */\nexport const RENDER_RESULT_OPTIONS = createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IGlobalErrorHandler.html":{"url":"interfaces/IGlobalErrorHandler.html","title":"interface - IGlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IGlobalErrorHandler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/errors.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        handler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions, Configs } from \"../services/Configs\";\nimport { InjectService } from \"../services/Injector\";\nimport { Context } from \"../services/Context\";\nimport { Render } from \"../services/Render\";\nimport { RenderResult } from \"../results/render\";\nimport { RENDER_RESULT_OPTIONS } from \"./render.options\";\nimport { ENV } from \"../configs/env.config\";\nimport { SimpleLogger } from \"../plugins/simple-logger\";\n\ninterface IGlobalErrorHandler {\n  handler?: (error: any, injector: InjectService, configs: Configs) => void;\n}\n\nexport const defaultGlobalError: IGlobalErrorHandler = {\n  handler: async (error, injector, configs) => {\n    const render = injector.get(Render);\n    const { ctx } = injector.get(Context);\n    const { env } = configs.get(ENV);\n    const { onError, onDevError } = configs.get(RENDER_RESULT_OPTIONS);\n    const { content: defaultRender, ...args } =\n      env === \"production\" ? onError : onDevError;\n    render.setView(\"__viewError\", error);\n    try {\n      const path = !args.path ? undefined : args.path;\n      const tpl = !args.tplStr ? undefined : args.tplStr;\n      if (!path && !tpl) {\n        throw new Error(\"No template provided for global error handler.\");\n      }\n      const result = new RenderResult({ path, tplStr: tpl });\n      ctx.body = await result.toResult({ injector, configs });\n    } catch (_) {\n      const logger = injector.get(SimpleLogger);\n      logger.trace(\"GLOBAL_ERROR render failed\", _);\n      ctx.body = defaultRender(error, \"Internal Server Error\");\n    }\n  }\n};\n\nexport const GLOBAL_ERROR = createOptions(\"GLOBAL_ERROR\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IGlobalSetOptions.html":{"url":"interfaces/IGlobalSetOptions.html","title":"interface - IGlobalSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IGlobalSetOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        toSnake\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        toSnake\n                                    \n                                \n                                \n                                    \n                                        toSnake:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IInjectableConfigs.html":{"url":"interfaces/IInjectableConfigs.html","title":"interface - IInjectableConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IInjectableConfigs\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/injectable.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     InjectToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     InjectScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectScope\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Constructor,\n  IBaseInjectable,\n  InjectScope,\n  InjectToken\n} from \"@bonbons/di\";\nimport { GlobalDI } from \"../utils\";\n\ninterface IInjectableConfigs {\n  type: InjectScope;\n  token: InjectToken;\n}\n\n/**\n * ## 定义服务\n * @description\n * @author Big Mogician\n * @export\n * @param {Partial} [config]\n * @returns\n */\nexport function Injectable(): (target: Constructor) => any;\nexport function Injectable(\n  scope: InjectScope\n): (target: Constructor) => any;\nexport function Injectable(\n  config: Partial\n): (target: Constructor) => any;\nexport function Injectable(config?: InjectScope | Partial) {\n  return function(target: Constructor) {\n    let token: InjectToken = undefined;\n    let scope: InjectScope = InjectScope.Scope;\n    switch (config) {\n      case InjectScope.Scope:\n      case InjectScope.Singleton:\n      case InjectScope.New:\n        scope = config;\n        break;\n      default:\n        const { token: tk = undefined, type: tp = InjectScope.Scope } =\n          config || {};\n        scope = tp || InjectScope.Scope;\n        token = tk;\n    }\n    const prototype: IBaseInjectable = target.prototype;\n    prototype.__valid = true;\n    GlobalDI.register({ token: token || target, imp: target, scope });\n    return >target;\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IMiddlewaresScope.html":{"url":"interfaces/IMiddlewaresScope.html","title":"interface - IMiddlewaresScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IMiddlewaresScope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/middlewares/core.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        ctx\n                                \n                                \n                                        injector\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Configs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Configs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IContext } from \"../typings/IContext\";\nimport { InjectService } from \"../services/Injector\";\nimport { Configs } from \"../services/Configs\";\nimport { getScopeId, GlobalDI } from \"../utils\";\n\nexport interface IMiddlewaresScope {\n  injector: InjectService;\n  configs: Configs;\n  ctx: T;\n  next: () => Promise;\n}\n\ntype ProvideInvoker = (\n  bunddle: IMiddlewaresScope\n) => void | Promise;\n\n/**\n * 创建具有依赖注入能力的中间件\n *\n * @author Big Mogician\n * @export\n * @template T extends IContext\n * @param {((bunddle: IMiddlewaresScope, ctx: T, next: () => Promise) => void | Promise)} middleware\n * @returns\n */\nexport function createMiddleware(\n  middleware: ProvideInvoker\n) {\n  return async (ctx: T, next: () => Promise) => {\n    const scopeId = getScopeId(ctx);\n    const configs = GlobalDI.get(Configs, scopeId);\n    const injector = GlobalDI.get(InjectService, scopeId);\n    await middleware({ injector, configs, ctx, next });\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/INunjunksRenderOptions.html":{"url":"interfaces/INunjunksRenderOptions.html","title":"interface - INunjunksRenderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  INunjunksRenderOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/nunjunks/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoescape\n                                \n                                \n                                        cache\n                                \n                                \n                                        lstripBlocks\n                                \n                                \n                                        root\n                                \n                                \n                                        throwOnUndefined\n                                \n                                \n                                        trimBlocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        autoescape\n                                    \n                                \n                                \n                                    \n                                        autoescape:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lstripBlocks\n                                    \n                                \n                                \n                                    \n                                        lstripBlocks:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnUndefined\n                                    \n                                \n                                \n                                    \n                                        throwOnUndefined:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trimBlocks\n                                    \n                                \n                                \n                                    \n                                        trimBlocks:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import path from \"path\";\nimport { createOptions } from \"../../services/Configs\";\n\nexport interface INunjunksRenderOptions {\n  root: string;\n  autoescape: true;\n  throwOnUndefined: false;\n  trimBlocks: false;\n  lstripBlocks: false;\n  cache: true;\n}\n\nexport const defaultNunjunksOptions: INunjunksRenderOptions = {\n  root: path.resolve(process.cwd(), \"app/views\"),\n  cache: true,\n  autoescape: true,\n  throwOnUndefined: false,\n  trimBlocks: false,\n  lstripBlocks: false\n};\n\nexport const NUNJUNKS_OPTIONS = createOptions(\n  \"NUNJUNKS_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IPreProcess.html":{"url":"interfaces/IPreProcess.html","title":"interface - IPreProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IPreProcess\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/index.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        always\n                                \n                                \n                                        appRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        fileType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制刷新2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRoot\n                                    \n                                \n                                \n                                    \n                                        appRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    整个项目的url前缀，默认：'/' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动生成2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    生成router文件的文件类型，默认：'js' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import Astroboy from \"astroboy\";\nimport { ControllerConstructor } from \"astroboy-router/dist/metadata\";\nimport { createRouter } from \"astroboy-router\";\nimport { GlobalImplements } from \"./utils\";\nimport { copyPrototype } from \"./decorators/controller\";\nimport { initRouters } from \"./builders/routers\";\nimport { compileFn } from \"./builders/config-compiler\";\nimport { ConfigCompilerOptions } from \"./options/config-compiler.options\";\n\n/**\n * ## 构建路由\n * * 等效astroboy-router的createRouter方法\n * @description\n * @author Big Mogician\n * @export\n * @template T\n * @param {ControllerConstructor} ctor\n * @param {string} name\n * @param {string} root\n * @returns\n */\nexport function buildRouter(\n  ctor: ControllerConstructor,\n  name: string,\n  root: string\n) {\n  const sourceCtor = GlobalImplements.get(ctor);\n  const result = createRouter(sourceCtor, name, root);\n  copyPrototype(ctor, sourceCtor);\n  return result;\n}\n\ninterface IPreProcess {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\n/**\n * ## astroboy.ts 预处理函数\n * * 硬核初始化routers\n * @description\n * @author Big Mogician\n * @export\n * @param {Partial} {\n *   routerAutoBuild: open = defaultEnv.routerAutoBuild,\n *   routerAlwaysBuild: always = defaultEnv.routerAlwaysBuild,\n *   routerRoot: root = defaultEnv.routerRoot\n * }\n */\nexport function preInitFn(configs: Partial): void;\nexport function preInitFn(configs: Partial, inEnd?) {\n  return initRouters(configs, inEnd);\n}\n\n/**\n * ## astroboy.ts 配置文件预处理函数\n * * 硬核初始化config\n * @author Big Mogician\n * @export\n * @param {Partial} configs\n */\nexport function preConfigCompiler(configs: Partial) {\n  return compileFn(configs);\n}\n\nexport * from \"astroboy-router\";\nexport * from \"./decorators\";\nexport * from \"./middlewares\";\nexport * from \"./services/Injector\";\nexport * from \"./services/Context\";\nexport * from \"./services/BaseClass\";\nexport * from \"./services/AstroboyContext\";\nexport * from \"./services/Render\";\nexport * from \"./services/ConfigReader\";\nexport * from \"./server\";\nexport * from \"./configs\";\nexport * from \"./typings/IContext\";\nexport * from \"./typings/IResult\";\nexport * from \"./typings/IViewEngine\";\nexport * from \"./typings/IStaticTypeResolver\";\nexport * from \"./results/json\";\nexport * from \"./results/render\";\n\nexport { Bundles } from \"./bundle\";\n\nexport {\n  TypedSerializer,\n  Serialize,\n  Deserialize,\n  Extends\n} from \"./plugins/typed-serializer\";\nexport { NUNJUNKS_OPTIONS } from \"./plugins/nunjunks\";\nexport { SIMPLE_LOGGER_OPTIONS } from \"./plugins/simple-logger\";\n\nexport {\n  Configs,\n  ConfigToken,\n  ConfigEntry,\n  createOptions,\n  createConfig,\n  TokenGenerator,\n  InjectScope\n} from \"./services/Configs\";\n\nexport {\n  CONFIG_COMPILER_OPTIONS,\n  GLOBAL_ERROR,\n  JSON_RESULT_OPTIONS,\n  RENDER_RESULT_OPTIONS,\n  ROUTER_OPTIONS,\n  STATIC_RESOLVER,\n  ConfigCompilerOptions,\n  JsonResultOptions,\n  RenderResultOptions,\n  RouterOptions\n} from \"./options\";\n\nexport { Astroboy };\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IResult.html":{"url":"interfaces/IResult.html","title":"interface - IResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IResult.ts\n        \n\n            \n                描述\n            \n            \n                路由方法返回接口定义\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    toResult\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoResult(scope: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IResult.ts:29\n                            \n                        \n\n\n                \n                    \n                            需要实现的解析函数\n\n将目标处理成body内容\n\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ConfigsCollection as ReadonlyConfigs } from \"@bonbons/di\";\nimport { InjectService } from \"../services/Injector\";\n\nexport interface IResultScope {\n  configs: ReadonlyConfigs;\n  injector: InjectService;\n}\n\n/** 表示一个异步过程 */\nexport type Async = T | Promise;\n\n/**\n * ## 路由方法返回接口定义\n * @description\n * @author Big Mogician\n * @export\n * @interface IResult\n */\nexport interface IResult {\n  /**\n   * ### 需要实现的解析函数\n   * * 将目标处理成body内容\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} scope\n   * @returns {(string | Promise)}\n   * @memberof IResult\n   */\n  toResult(scope: IResultScope): string | Promise;\n}\n\nexport type ICommonResultType = string | void | IResult;\n\nexport type IBodyResult = Async;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IResultScope.html":{"url":"interfaces/IResultScope.html","title":"interface - IResultScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IResultScope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IResult.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        injector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     ReadonlyConfigs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ReadonlyConfigs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConfigsCollection as ReadonlyConfigs } from \"@bonbons/di\";\nimport { InjectService } from \"../services/Injector\";\n\nexport interface IResultScope {\n  configs: ReadonlyConfigs;\n  injector: InjectService;\n}\n\n/** 表示一个异步过程 */\nexport type Async = T | Promise;\n\n/**\n * ## 路由方法返回接口定义\n * @description\n * @author Big Mogician\n * @export\n * @interface IResult\n */\nexport interface IResult {\n  /**\n   * ### 需要实现的解析函数\n   * * 将目标处理成body内容\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} scope\n   * @returns {(string | Promise)}\n   * @memberof IResult\n   */\n  toResult(scope: IResultScope): string | Promise;\n}\n\nexport type ICommonResultType = string | void | IResult;\n\nexport type IBodyResult = Async;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouter.html":{"url":"interfaces/IRouter.html","title":"interface - IRouter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouter\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/builders/routers.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:    string | IRouter\n\n                    \n                \n                        \n                            \n                                被定义在 src/builders/routers.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\nimport rimraf from \"rimraf\";\nimport { GlobalImplements } from \"../utils\";\nimport { InnerRouterOptions, defaultRouterOptions as df } from \"../options\";\n\ninterface IRouter {\n  [prop: string]: string | IRouter;\n}\n\nexport function initRouters(\n  {\n    ctorFolder: base = df.ctorFolder,\n    routerFolder: routerBase = df.routerFolder,\n    enabled: open = df.enabled,\n    always = df.always,\n    appRoot: root = df.appRoot,\n    fileType = df.fileType\n  }: Partial,\n  onEnd?: (data: { routers?: IRouter; error?: Error }) => void\n) {\n  if (open) {\n    try {\n      const routers: IRouter = {};\n      const ctorPath = path.resolve(process.cwd(), base);\n      const routerPath = path.resolve(process.cwd(), routerBase);\n      if (always) {\n        // 硬核开关，强撸routers文件夹\n        rimraf.sync(routerPath);\n        fs.mkdirSync(routerPath);\n      } else if (!fs.existsSync(routerPath)) {\n        fs.mkdirSync(routerPath);\n      }\n      checkRouterFolders({\n        turn: 0,\n        baseRouter: routerPath,\n        folders: fs.readdirSync(ctorPath),\n        ctorPath,\n        routerPath,\n        fileType,\n        routers,\n        root\n      });\n      onEnd && onEnd({ routers });\n    } catch (e) {\n      onEnd && onEnd({ error: e });\n    }\n  }\n}\n\nfunction checkRouterFolders({\n  turn,\n  baseRouter,\n  folders,\n  ctorPath,\n  routerPath,\n  fileType,\n  root,\n  routers\n}: {\n  turn: number;\n  baseRouter: string;\n  folders: string[];\n  ctorPath: string;\n  routerPath: string;\n  fileType: string;\n  root: string;\n  routers: IRouter;\n}) {\n  folders.forEach(path => {\n    if (path.indexOf(\".\") === -1) {\n      routers[path] = {};\n      const routerFolder = `${routerPath}/${path}`;\n      const ctorFolder = `${ctorPath}/${path}`;\n      if (!fs.existsSync(routerFolder)) {\n        fs.mkdirSync(routerFolder);\n      }\n      checkRouterFolders({\n        turn: turn + 1,\n        baseRouter,\n        folders: fs.readdirSync(ctorFolder),\n        ctorPath: ctorFolder,\n        routerPath: routerFolder,\n        fileType,\n        routers: routers[path],\n        root\n      });\n    } else {\n      if (checkIfOnlyDeclares(path)) return;\n      createTsRouterFile({\n        turn,\n        baseRouter,\n        ctorPath,\n        routerPath,\n        path,\n        fileType,\n        urlRoot: root,\n        routers\n      });\n    }\n  });\n}\n\nfunction checkIfOnlyDeclares(p: string): any {\n  return p.endsWith(\".d.ts\");\n}\n\nfunction createTsRouterFile({\n  turn,\n  baseRouter,\n  ctorPath,\n  routerPath,\n  path,\n  fileType,\n  urlRoot,\n  routers\n}: {\n  turn: number;\n  baseRouter: string;\n  ctorPath: string;\n  routerPath: string;\n  path: string;\n  fileType: string;\n  urlRoot: string;\n  routers: IRouter;\n}) {\n  try {\n    // 尝试按照新版逻辑解析Controller\n    const commonName = path.split(\".\")[0];\n    const controller = require(`${ctorPath}/${commonName}`);\n    // 找不到router源定义，静默退出\n    if (!controller.prototype[\"@router\"]) return;\n    const sourceCtor = GlobalImplements.get(controller);\n    // 无法解析控制器数据，则判断是老版本的Router\n    if (!sourceCtor) return;\n    const file = createFile(\n      routerPath,\n      baseRouter,\n      commonName,\n      turn,\n      fileType,\n      urlRoot\n    );\n    const _PATH = `${routerPath}/${commonName}.${fileType}`;\n    if (fs.existsSync(_PATH)) {\n      const oldFile = fs.readFileSync(_PATH, { flag: \"r\" });\n      const content = (oldFile.toString() || \"\").split(\"\\n\");\n      // 存在router.js文件，且内容一致，不做处理直接退出\n      if (content[1] === file[1] && content[3] === file[3]) return;\n    }\n    // 复写router.js文件\n    fs.appendFileSync(_PATH, file.join(\"\\n\"), { flag: \"w\" });\n    routers[`${commonName}.${fileType}`] = \"success\";\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction createFile(\n  routerPath: string,\n  baseRouter: string,\n  commonName: string,\n  turn: number,\n  fileType: string,\n  urlRoot: string\n) {\n  const controllerName =\n    routerPath === baseRouter\n      ? commonName\n      : `${routerPath\n          .replace(`${baseRouter}/`, \"\")\n          .replace(/\\//g, \".\")}.${commonName}`;\n  const turnLod = [\"..\"];\n  for (let index = 0; index \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouterCmdOptions.html":{"url":"interfaces/IRouterCmdOptions.html","title":"interface - IRouterCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouterCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/router/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        always\n                                \n                                \n                                            可选的\n                                        approot\n                                \n                                \n                                            可选的\n                                        config\n                                \n                                \n                                            可选的\n                                        details\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        filetype\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approot\n                                    \n                                \n                                \n                                    \n                                        approot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filetype\n                                    \n                                \n                                \n                                    \n                                        filetype:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IRouterCmdOptions {\n  config?: string;\n  enabled?: boolean;\n  always?: boolean;\n  filetype?: string;\n  approot?: string;\n  details?: string;\n  tsconfig?: string;\n}\n\nexport const options: CommandPlugin = {\n  name: \"router\",\n  description: \"astroboy.ts routers cmd\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"use atc.config.js\"],\n    [\"-E, --enabled [isEnabled]\", \"open routers-auto-build\"],\n    [\"-A, --always [isAlways]\", \"set routers-always-rebuild\"],\n    [\"-F, --filetype [fileType]\", \"set routers fileType\"],\n    [\"-R, --approot [appRoot]\", \"set routers-root\"],\n    [\"-T, --tsconfig [tsconfig]\", \"set tsconfig.json\"],\n    [\"-D, --details [showRouters]\", \"show building results or not\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc router\");\n    console.log(\"    $ atc router --always\");\n    console.log(\"    $ atc router --fileType ts\");\n    console.log(\"    $ atc router --approot /v1/prj\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouterMagic.html":{"url":"interfaces/IRouterMagic.html","title":"interface - IRouterMagic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouterMagic\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prototype\n                                \n                                \n                                        routerMeta\n                                \n                                \n                                        routes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        prototype\n                                    \n                                \n                                \n                                    \n                                        prototype:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerMeta\n                                    \n                                \n                                \n                                    \n                                        routerMeta:     IRouter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     IRouter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ISimpleLoggerOptions.html":{"url":"interfaces/ISimpleLoggerOptions.html","title":"interface - ISimpleLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ISimpleLoggerOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/simple-logger/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     SimpleLogLevel | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     SimpleLogLevel | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../../services/Configs\";\nimport { SimpleLogLevel } from \"./base\";\n\nexport interface ISimpleLoggerOptions {\n  level: SimpleLogLevel | number;\n}\n\nexport const defaultSimpleLoggerOptions: ISimpleLoggerOptions = {\n  level: SimpleLogLevel.WARN\n};\n\nexport const SIMPLE_LOGGER_OPTIONS = createOptions(\n  \"SIMPLE_LOGGER_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStaticSerializeOptions.html":{"url":"interfaces/IStaticSerializeOptions.html","title":"interface - IStaticSerializeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStaticSerializeOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IStaticTypeResolver.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Constructor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Constructor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\n\nexport interface IStaticSerializeOptions {\n  format: boolean;\n  type: Constructor;\n}\n\nexport interface IStaticTypedResolver {\n  /** Convert static typed instance to JSON text */\n  ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string;\n  /** Convert JSON text to static typed instance */\n  FromJSON(json: string, type?: Constructor): T;\n  /** Convert static typed instance to javascript object */\n  ToObject(\n    obj: any,\n    options?: Partial>\n  ): any;\n  /** Convert javascript object to static typed instance */\n  FromObject(json: any, type?: Constructor): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStaticTypedResolver.html":{"url":"interfaces/IStaticTypedResolver.html","title":"interface - IStaticTypedResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStaticTypedResolver\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IStaticTypeResolver.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    FromJSON\n                                \n                                \n                                    FromObject\n                                \n                                \n                                    ToJSON\n                                \n                                \n                                    ToObject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nFromJSON(json: string, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:15\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert JSON text to static typed instance \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nFromObject(json: any, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:22\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert javascript object to static typed instance \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nToJSON(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:10\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert static typed instance to JSON text \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nToObject(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:17\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert static typed instance to javascript object \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\n\nexport interface IStaticSerializeOptions {\n  format: boolean;\n  type: Constructor;\n}\n\nexport interface IStaticTypedResolver {\n  /** Convert static typed instance to JSON text */\n  ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string;\n  /** Convert JSON text to static typed instance */\n  FromJSON(json: string, type?: Constructor): T;\n  /** Convert static typed instance to javascript object */\n  ToObject(\n    obj: any,\n    options?: Partial>\n  ): any;\n  /** Convert javascript object to static typed instance */\n  FromObject(json: any, type?: Constructor): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStrictConfigsCompiler.html":{"url":"interfaces/IStrictConfigsCompiler.html","title":"interface - IStrictConfigsCompiler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStrictConfigsCompiler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/ConfigReader.ts\n        \n\n\n            \n                继承\n            \n            \n                    BaseCompiler\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigs(process: NodeJS.Process)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/ConfigReader.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        process\n                                                        \n                                                                    NodeJS.Process\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { AstroboyContext } from \"./AstroboyContext\";\nimport { Injectable } from \"../decorators/injectable\";\n\ninterface BaseCompiler {\n  procedures?(process: NodeJS.Process): string[];\n}\n\nexport interface IStrictConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): T;\n}\n\nexport interface IConfigsCompiler extends BaseCompiler {\n  configs(process: NodeJS.Process): Partial;\n}\n\n/**\n * ## Astroboy.ts Base ConfigReader\n * * provide type intelliSence\n * * a delegate for ctx.getConfig(...)\n * * extends this class for DI\n */\n@Injectable()\nexport class ConfigReader {\n  static Expression(expression: string): T {\n    return Symbol(expression) as any;\n  }\n\n  public get global(): T {\n    return this.read();\n  }\n\n  constructor(private __context: AstroboyContext) {}\n\n  public read(key: K): T[K];\n  public read(): T;\n  public read(key?: string): any {\n    return this.__context.ctx.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IView.html":{"url":"interfaces/IView.html","title":"interface - IView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IView\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/configs/view.config.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy的配置的view结构\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cache\n                                \n                                \n                                        defaultExtension\n                                \n                                \n                                        defaultViewEngine\n                                \n                                \n                                        mapping\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultExtension\n                                    \n                                \n                                \n                                    \n                                        defaultExtension:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultViewEngine\n                                    \n                                \n                                \n                                    \n                                        defaultViewEngine:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                    \n                                \n                                \n                                    \n                                        mapping:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createConfig } from \"../services/Configs\";\n\n/**\n * Astroboy的配置的view结构\n * @description\n * @author Big Mogician\n * @interface IView\n */\ninterface IView {\n  cache: boolean;\n  root: string;\n  defaultExtension: string;\n  defaultViewEngine: string;\n  mapping: { [prop: string]: any };\n}\n\nexport const defaultView: Partial = {};\n\n/** astroboy view config */\nexport const CONFIG_VIEW = createConfig(\"view\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IViewEngine.html":{"url":"interfaces/IViewEngine.html","title":"interface - IViewEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IViewEngine\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IViewEngine.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    render\n                                \n                                \n                                    renderString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender(path: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IViewEngine.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Async\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderString\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenderString(path: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IViewEngine.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Async\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Async } from \"./IResult\";\n\nexport interface IViewEngine {\n  render(path: string, configs: any): Async;\n  renderString(path: string, configs: any): Async;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerCmdConfig.html":{"url":"interfaces/InnerCmdConfig.html","title":"interface - InnerCmdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerCmdConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        exec\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface ConfigCompilerConfig {\n  enabled?: boolean;\n  force?: boolean;\n  configroot?: string;\n  outputroot?: string;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n  configCompiler?: ConfigCompilerConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    },\n    configCompiler: {\n      ...get(merge, \"configCompiler\", {}),\n      ...get(config, \"configCompiler\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerConfigCompilerOptions.html":{"url":"interfaces/InnerConfigCompilerOptions.html","title":"interface - InnerConfigCompilerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerConfigCompilerOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/config-compiler.options.ts\n        \n\n\n            \n                继承\n            \n            \n                    ConfigCompilerOptions\n            \n\n\n\n\n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerConfigCompilerOptions extends ConfigCompilerOptions {\n  // TO DO\n}\n\nexport interface ConfigCompilerOptions {\n  /** 是否自动编译configs文件夹，默认：`false` */\n  enabled: boolean;\n  /** 是否强制编译configs文件夹，默认：`false` */\n  force: boolean;\n  /** 整个configs文件夹的相对位置，默认：`'config'` */\n  configRoot?: string;\n  /** 整个configs文件夹编译后的输出位置，默认：`'config'` */\n  outRoot?: string;\n}\n\nexport const defaultConfigCompilerOptions: ConfigCompilerOptions = {\n  enabled: false,\n  force: false,\n  configRoot: \"config\",\n  outRoot: \"config\"\n};\n\nexport const CONFIG_COMPILER_OPTIONS = createOptions(\n  \"CONFIG_COMPILER_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerRouterOptions.html":{"url":"interfaces/InnerRouterOptions.html","title":"interface - InnerRouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerRouterOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/router.options.ts\n        \n\n\n            \n                继承\n            \n            \n                    RouterOptions\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctorFolder\n                                \n                                \n                                        routerFolder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctorFolder\n                                    \n                                \n                                \n                                    \n                                        ctorFolder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerFolder\n                                    \n                                \n                                \n                                    \n                                        routerFolder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerRouterOptions extends RouterOptions {\n  ctorFolder: string;\n  routerFolder: string;\n}\n\nexport interface RouterOptions {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\nexport const defaultRouterOptions: InnerRouterOptions = {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n};\n\nexport const ROUTER_OPTIONS = createOptions(\"ROUTER_OPTIONS\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/JsonResult.html":{"url":"classes/JsonResult.html","title":"class - JsonResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  JsonResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/results/json.ts\n        \n\n            \n                描述\n            \n            \n                Body序列化约定实现\n\n按照约定将内容序列化到body响应中\n\n\n            \n\n\n            \n                实现\n            \n            \n                        IResult\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                toResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(value: any, configs?: Partial)\n                    \n                \n                        \n                            \n                                被定义在 src/results/json.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoResult(undefined: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/results/json.ts:32\n                            \n                        \n\n\n                \n                    \n                            将json对象序列化写入body\n\n@框架调用方法，请勿手动调用\n\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import camel from \"camelcase\";\nimport decamel from \"decamelize\";\nimport set from \"lodash/set\";\nimport { IResult, IResultScope } from \"../typings/IResult\";\nimport { JsonResultOptions, JSON_RESULT_OPTIONS } from \"../options\";\nimport { resolveKeys } from \"../utils\";\n\n/**\n * ## Body序列化约定实现\n * * 按照约定将内容序列化到body响应中\n * @description\n * @author Big Mogician\n * @export\n * @class JsonResult\n * @implements {IResult}\n */\nexport class JsonResult implements IResult {\n  constructor(\n    private value: any,\n    private configs?: Partial\n  ) {}\n\n  /**\n   * ### 将json对象序列化写入body\n   * * @框架调用方法，请勿手动调用\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} { configs }\n   * @returns {string}\n   * @memberof JsonResult\n   */\n  toResult({ configs }: IResultScope): string {\n    const {\n      format,\n      whiteSpace: b,\n      keyResolver: r,\n      jsonTemplate: tpl,\n      jsonTplKey: tplKey\n    } = {\n      ...configs.get(JSON_RESULT_OPTIONS),\n      ...this.configs\n    };\n    let value = this.value || {};\n    if (tpl) {\n      const n = { ...tpl };\n      if (tplKey) set(n, tplKey, value);\n      value = n;\n    }\n    return JSON.stringify(\n      !r ? value : resolveKeys(r, value),\n      null,\n      decideWhiteSpace(format, b)\n    );\n  }\n}\n\nfunction decideWhiteSpace(format: boolean, b: 0 | 1 | 2 | 4) {\n  if (!format) return \"\";\n  switch (b) {\n    case 4:\n      return \"    \";\n    case 2:\n      return \"  \";\n    case 1:\n      return \" \";\n    case 0:\n      return \"\";\n    default:\n      return \"\";\n  }\n}\n\nfunction camelCase(key: string) {\n  return camel(key);\n}\n\nfunction snakeCase(key: string) {\n  return decamel(key, \"_\");\n}\n\nexport const JsonResolvers = {\n  camelcase: camelCase,\n  snakecase: snakeCase\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/JsonResultOptions.html":{"url":"interfaces/JsonResultOptions.html","title":"interface - JsonResultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  JsonResultOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/json.options.ts\n        \n\n            \n                描述\n            \n            \n                配置JsonResult的解析方式\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                            可选的\n                                        jsonTemplate\n                                \n                                \n                                            可选的\n                                        jsonTplKey\n                                \n                                \n                                            可选的\n                                        keyResolver\n                                \n                                \n                                        whiteSpace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否进行格式化 - 默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonTemplate\n                                    \n                                \n                                \n                                    \n                                        jsonTemplate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    json模板 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonTplKey\n                                    \n                                \n                                \n                                    \n                                        jsonTplKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    json模板上写入内容的字段位置 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyResolver\n                                    \n                                \n                                \n                                    \n                                        keyResolver:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    对象键值处理函数 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whiteSpace\n                                    \n                                \n                                \n                                    \n                                        whiteSpace:     \"0\" | \"1\" | \"2\" | \"4\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"0\" | \"1\" | \"2\" | \"4\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    格式化空格数量 - 默认：2 \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\n/**\n * ## 配置JsonResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface JsonResultOptions\n */\nexport interface JsonResultOptions {\n  /** 是否进行格式化 - 默认：`false` */\n  format: boolean;\n  /** 格式化空格数量 - 默认：`2` */\n  whiteSpace: 0 | 1 | 2 | 4;\n  /** 对象键值处理函数 - 默认：`undefined` */\n  keyResolver?: (key: string) => string;\n  /** json模板 - 默认：`undefined` */\n  jsonTemplate?: { [prop: string]: any };\n  /** json模板上写入内容的字段位置 - 默认：`undefined` */\n  jsonTplKey?: string;\n}\n\nexport const defaultJsonResultOptions: JsonResultOptions = {\n  format: false,\n  whiteSpace: 2,\n  keyResolver: undefined,\n  jsonTemplate: undefined,\n  jsonTplKey: undefined\n};\n\nexport const JSON_RESULT_OPTIONS = createOptions(\n  \"JSON_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/NormalizedMessage.html":{"url":"classes/NormalizedMessage.html","title":"class - NormalizedMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  NormalizedMessage\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/NormalizedMessage.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                character\n                            \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                content\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                file\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                line\n                            \n                            \n                                    Public\n                                    Readonly\n                                severity\n                            \n                            \n                                    Static\n                                    Readonly\n                                SEVERITY_ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                SEVERITY_WARNING\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                            \n                                    Static\n                                    Readonly\n                                TYPE_DIAGNOSTIC\n                            \n                            \n                                    Static\n                                    Readonly\n                                TYPE_LINT\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compare\n                            \n                            \n                                    Static\n                                compareNumbers\n                            \n                            \n                                    Static\n                                compareOptionalStrings\n                            \n                            \n                                    Static\n                                compareSeverities\n                            \n                            \n                                    Static\n                                compareTypes\n                            \n                            \n                                    Static\n                                createFromJSON\n                            \n                            \n                                    Static\n                                deduplicate\n                            \n                            \n                                    Static\n                                equals\n                            \n                            \n                                    Public\n                                getFormattedCode\n                            \n                            \n                                    Public\n                                isDiagnosticType\n                            \n                            \n                                    Public\n                                isErrorSeverity\n                            \n                            \n                                    Public\n                                isLintType\n                            \n                            \n                                    Public\n                                isWarningSeverity\n                            \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(data: NormalizedMessageJson)\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/utils/NormalizedMessage.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    NormalizedMessageJson\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            character\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string | number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SEVERITY_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"error\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SEVERITY_WARNING\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"warning\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TYPE_DIAGNOSTIC\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"diagnostic\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TYPE_LINT\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"lint\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compare(messageA: NormalizedMessage, messageB: NormalizedMessage)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messageA\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        messageB\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareNumbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareNumbers(numberA?: number, numberB?: number)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        numberA\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numberB\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareOptionalStrings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareOptionalStrings(stringA?: string, stringB?: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        stringA\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        stringB\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareSeverities\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareSeverities(severityA: Severity, severityB: Severity)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        severityA\n                                                        \n                                                                    Severity\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        severityB\n                                                        \n                                                                    Severity\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareTypes(typeA: ErrorType, typeB: ErrorType)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typeA\n                                                        \n                                                                    ErrorType\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        typeB\n                                                        \n                                                                    ErrorType\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createFromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFromJSON(json: NormalizedMessageJson)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    NormalizedMessageJson\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     NormalizedMessage\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            deduplicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deduplicate(messages: NormalizedMessage[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messages\n                                                        \n                                                                    NormalizedMessage[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            equals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        equals(messageA: NormalizedMessage, messageB: NormalizedMessage)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messageA\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        messageB\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormattedCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormattedCode()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     string | number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDiagnosticType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDiagnosticType()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isErrorSeverity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isErrorSeverity()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLintType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isLintType()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isWarningSeverity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isWarningSeverity()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toJSON()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     NormalizedMessageJson\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type ErrorType = \"diagnostic\" | \"lint\";\nexport type Severity = \"error\" | \"warning\";\n\ninterface NormalizedMessageJson {\n  type: ErrorType;\n  code: string | number;\n  severity: Severity;\n  content: string;\n  file?: string;\n  line?: number;\n  character?: number;\n}\n\nexport class NormalizedMessage {\n  public static readonly TYPE_DIAGNOSTIC: ErrorType = \"diagnostic\";\n  public static readonly TYPE_LINT: ErrorType = \"lint\";\n\n  // severity types\n  public static readonly SEVERITY_ERROR: Severity = \"error\";\n  public static readonly SEVERITY_WARNING: Severity = \"warning\";\n\n  public readonly type: ErrorType;\n  public readonly code: string | number;\n  public readonly severity: Severity;\n  public readonly content: string;\n  public readonly file?: string;\n  public readonly line?: number;\n  public readonly character?: number;\n\n  constructor(data: NormalizedMessageJson) {\n    this.type = data.type;\n    this.code = data.code;\n    this.severity = data.severity;\n    this.content = data.content;\n    this.file = data.file;\n    this.line = data.line;\n    this.character = data.character;\n  }\n\n  public static createFromJSON(json: NormalizedMessageJson) {\n    return new NormalizedMessage(json);\n  }\n\n  public static compare(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    if (!(messageA instanceof NormalizedMessage)) {\n      return -1;\n    }\n    if (!(messageB instanceof NormalizedMessage)) {\n      return 1;\n    }\n\n    return (\n      NormalizedMessage.compareTypes(messageA.type, messageB.type) ||\n      NormalizedMessage.compareOptionalStrings(messageA.file, messageB.file) ||\n      NormalizedMessage.compareSeverities(\n        messageA.severity,\n        messageB.severity\n      ) ||\n      NormalizedMessage.compareNumbers(messageA.line, messageB.line) ||\n      NormalizedMessage.compareNumbers(\n        messageA.character,\n        messageB.character\n      ) ||\n      // code can be string (lint failure) or number (typescript error) - should the following line cater for this in some way?\n      NormalizedMessage.compareOptionalStrings(\n        messageA.code as string,\n        messageB.code as string\n      ) ||\n      NormalizedMessage.compareOptionalStrings(\n        messageA.content,\n        messageB.content\n      ) ||\n      0 /* EqualTo */\n    );\n  }\n\n  public static equals(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    return this.compare(messageA, messageB) === 0;\n  }\n\n  public static deduplicate(messages: NormalizedMessage[]) {\n    return messages.sort(NormalizedMessage.compare).filter((message, index) => {\n      return (\n        index === 0 || !NormalizedMessage.equals(message, messages[index - 1])\n      );\n    });\n  }\n\n  public static compareTypes(typeA: ErrorType, typeB: ErrorType) {\n    const priorities = [typeA, typeB].map(type => {\n      return [\n        NormalizedMessage.TYPE_LINT /* 0 */,\n        NormalizedMessage.TYPE_DIAGNOSTIC /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareSeverities(severityA: Severity, severityB: Severity) {\n    const priorities = [severityA, severityB].map(type => {\n      return [\n        NormalizedMessage.SEVERITY_WARNING /* 0 */,\n        NormalizedMessage.SEVERITY_ERROR /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareOptionalStrings(stringA?: string, stringB?: string) {\n    if (stringA === stringB) {\n      return 0;\n    }\n    if (stringA === undefined || stringA === null) {\n      return -1;\n    }\n    if (stringB === undefined || stringB === null) {\n      return 1;\n    }\n\n    return stringA.toString().localeCompare(stringB.toString());\n  }\n\n  public static compareNumbers(numberA?: number, numberB?: number) {\n    if (numberA === numberB) {\n      return 0;\n    }\n    if (numberA === undefined || numberA === null) {\n      return -1;\n    }\n    if (numberB === undefined || numberB === null) {\n      return 1;\n    }\n    return numberA - numberB;\n  }\n\n  public toJSON() {\n    return {\n      type: this.type,\n      code: this.code,\n      severity: this.severity,\n      content: this.content,\n      file: this.file,\n      line: this.line,\n      character: this.character\n    } as NormalizedMessageJson;\n  }\n\n  public isDiagnosticType() {\n    return NormalizedMessage.TYPE_DIAGNOSTIC === this.type;\n  }\n\n  public isLintType() {\n    return NormalizedMessage.TYPE_LINT === this.type;\n  }\n\n  public getFormattedCode() {\n    return this.isDiagnosticType() ? \"TS\" + this.code : this.code;\n  }\n\n  public isErrorSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_ERROR;\n  }\n\n  public isWarningSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_WARNING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/NormalizedMessageJson.html":{"url":"interfaces/NormalizedMessageJson.html","title":"interface - NormalizedMessageJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  NormalizedMessageJson\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/NormalizedMessage.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        character\n                                \n                                \n                                        code\n                                \n                                \n                                        content\n                                \n                                \n                                            可选的\n                                        file\n                                \n                                \n                                            可选的\n                                        line\n                                \n                                \n                                        severity\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        character\n                                    \n                                \n                                \n                                    \n                                        character:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                    \n                                \n                                \n                                    \n                                        line:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        severity\n                                    \n                                \n                                \n                                    \n                                        severity:     Severity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Severity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ErrorType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ErrorType = \"diagnostic\" | \"lint\";\nexport type Severity = \"error\" | \"warning\";\n\ninterface NormalizedMessageJson {\n  type: ErrorType;\n  code: string | number;\n  severity: Severity;\n  content: string;\n  file?: string;\n  line?: number;\n  character?: number;\n}\n\nexport class NormalizedMessage {\n  public static readonly TYPE_DIAGNOSTIC: ErrorType = \"diagnostic\";\n  public static readonly TYPE_LINT: ErrorType = \"lint\";\n\n  // severity types\n  public static readonly SEVERITY_ERROR: Severity = \"error\";\n  public static readonly SEVERITY_WARNING: Severity = \"warning\";\n\n  public readonly type: ErrorType;\n  public readonly code: string | number;\n  public readonly severity: Severity;\n  public readonly content: string;\n  public readonly file?: string;\n  public readonly line?: number;\n  public readonly character?: number;\n\n  constructor(data: NormalizedMessageJson) {\n    this.type = data.type;\n    this.code = data.code;\n    this.severity = data.severity;\n    this.content = data.content;\n    this.file = data.file;\n    this.line = data.line;\n    this.character = data.character;\n  }\n\n  public static createFromJSON(json: NormalizedMessageJson) {\n    return new NormalizedMessage(json);\n  }\n\n  public static compare(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    if (!(messageA instanceof NormalizedMessage)) {\n      return -1;\n    }\n    if (!(messageB instanceof NormalizedMessage)) {\n      return 1;\n    }\n\n    return (\n      NormalizedMessage.compareTypes(messageA.type, messageB.type) ||\n      NormalizedMessage.compareOptionalStrings(messageA.file, messageB.file) ||\n      NormalizedMessage.compareSeverities(\n        messageA.severity,\n        messageB.severity\n      ) ||\n      NormalizedMessage.compareNumbers(messageA.line, messageB.line) ||\n      NormalizedMessage.compareNumbers(\n        messageA.character,\n        messageB.character\n      ) ||\n      // code can be string (lint failure) or number (typescript error) - should the following line cater for this in some way?\n      NormalizedMessage.compareOptionalStrings(\n        messageA.code as string,\n        messageB.code as string\n      ) ||\n      NormalizedMessage.compareOptionalStrings(\n        messageA.content,\n        messageB.content\n      ) ||\n      0 /* EqualTo */\n    );\n  }\n\n  public static equals(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    return this.compare(messageA, messageB) === 0;\n  }\n\n  public static deduplicate(messages: NormalizedMessage[]) {\n    return messages.sort(NormalizedMessage.compare).filter((message, index) => {\n      return (\n        index === 0 || !NormalizedMessage.equals(message, messages[index - 1])\n      );\n    });\n  }\n\n  public static compareTypes(typeA: ErrorType, typeB: ErrorType) {\n    const priorities = [typeA, typeB].map(type => {\n      return [\n        NormalizedMessage.TYPE_LINT /* 0 */,\n        NormalizedMessage.TYPE_DIAGNOSTIC /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareSeverities(severityA: Severity, severityB: Severity) {\n    const priorities = [severityA, severityB].map(type => {\n      return [\n        NormalizedMessage.SEVERITY_WARNING /* 0 */,\n        NormalizedMessage.SEVERITY_ERROR /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareOptionalStrings(stringA?: string, stringB?: string) {\n    if (stringA === stringB) {\n      return 0;\n    }\n    if (stringA === undefined || stringA === null) {\n      return -1;\n    }\n    if (stringB === undefined || stringB === null) {\n      return 1;\n    }\n\n    return stringA.toString().localeCompare(stringB.toString());\n  }\n\n  public static compareNumbers(numberA?: number, numberB?: number) {\n    if (numberA === numberB) {\n      return 0;\n    }\n    if (numberA === undefined || numberA === null) {\n      return -1;\n    }\n    if (numberB === undefined || numberB === null) {\n      return 1;\n    }\n    return numberA - numberB;\n  }\n\n  public toJSON() {\n    return {\n      type: this.type,\n      code: this.code,\n      severity: this.severity,\n      content: this.content,\n      file: this.file,\n      line: this.line,\n      character: this.character\n    } as NormalizedMessageJson;\n  }\n\n  public isDiagnosticType() {\n    return NormalizedMessage.TYPE_DIAGNOSTIC === this.type;\n  }\n\n  public isLintType() {\n    return NormalizedMessage.TYPE_LINT === this.type;\n  }\n\n  public getFormattedCode() {\n    return this.isDiagnosticType() ? \"TS\" + this.code : this.code;\n  }\n\n  public isErrorSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_ERROR;\n  }\n\n  public isWarningSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_WARNING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/NunjunksEngine.html":{"url":"injectables/NunjunksEngine.html","title":"injectable - NunjunksEngine","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  NunjunksEngine\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/nunjunks/core.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                @configs\n                            \n                            \n                                    Private\n                                @loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEnv\n                            \n                            \n                                    Public\n                                    Async\n                                render\n                            \n                            \n                                    Public\n                                    Async\n                                renderString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configs\n                                \n                                \n                                    loader\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(cfg: Configs, rs: Render)\n                    \n                \n                        \n                            \n                                被定义在 src/plugins/nunjunks/core.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        cfg\n                                                  \n                                                        \n                                                                    Configs\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        rs\n                                                  \n                                                        \n                                                                    Render\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createEnv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createEnv(configs?: INunjunksRenderOptions)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                        \n                                                                    INunjunksRenderOptions\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        render(name: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            renderString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        renderString(tpl: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            @configs\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     INunjunksRenderOptions\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            @loader\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     FileSystemLoader\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        configs\n                    \n                \n\n                \n                    \n                        getconfigs()\n                    \n                \n                            \n                                \n                                    被定义在 src/plugins/nunjunks/core.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n\n                \n                    \n                        getloader()\n                    \n                \n                            \n                                \n                                    被定义在 src/plugins/nunjunks/core.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"../../decorators/injectable\";\nimport { Render } from \"../../services/Render\";\nimport { IViewEngine } from \"../../typings/IViewEngine\";\nimport { Configs } from \"../../services/Configs\";\nimport { NUNJUNKS_OPTIONS, INunjunksRenderOptions } from \"./options\";\nimport { FileSystemLoader, Environment } from \"nunjucks\";\n\n@Injectable()\nexport class NunjunksEngine implements IViewEngine {\n  private \"@configs\": INunjunksRenderOptions;\n  private \"@loader\": FileSystemLoader;\n\n  private get configs() {\n    return (\n      this[\"@configs\"] || (this[\"@configs\"] = this.cfg.get(NUNJUNKS_OPTIONS))\n    );\n  }\n\n  private get loader() {\n    return (\n      this[\"@loader\"] ||\n      (this[\"@loader\"] = new FileSystemLoader(this.configs.root, {\n        noCache: !this.configs.cache\n      }))\n    );\n  }\n\n  private createEnv(configs?: INunjunksRenderOptions) {\n    return new Environment(\n      this.loader,\n      !configs ? this.configs : { ...this.configs, ...configs }\n    );\n  }\n\n  constructor(private cfg: Configs, private rs: Render) {}\n\n  public async render(name: string, configs: any): Promise {\n    return this.createEnv(configs).render(name, this.rs.views);\n  }\n\n  public async renderString(tpl: string, configs: any): Promise {\n    return this.createEnv(configs).renderString(tpl, this.rs.views);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ParamsOptions.html":{"url":"interfaces/ParamsOptions.html","title":"interface - ParamsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ParamsOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        transform\n                                \n                                \n                                        useStatic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                    \n                                \n                                \n                                    \n                                        transform:     ParamsResolver\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ParamsResolver\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useStatic\n                                    \n                                \n                                \n                                    \n                                        useStatic:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RealConfigCollection.html":{"url":"classes/RealConfigCollection.html","title":"class - RealConfigCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RealConfigCollection\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n            \n                实现\n            \n            \n                        IConfigCollection\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                toArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map()\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Configs.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(token: ConfigToken)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:33\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    ConfigToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(token: ConfigToken, entry: T)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:29\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    ConfigToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toArray()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     ConfigEntry[]\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Render.html":{"url":"injectables/Render.html","title":"injectable - Render","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Render\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n            \n                描述\n            \n            \n                统一渲染服务\n\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _views\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    views\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: AstroboyContext)\n                    \n                \n                        \n                            \n                                被定义在 src/services/Render.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    AstroboyContext\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:52\n                            \n                        \n\n\n                \n                    \n                            Render init\n\n重载方法已实现新的初始化逻辑\n\n\n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(obj: literal type, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(key: string, obj: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(key: string, obj: any, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     any\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Render.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        views\n                    \n                \n\n                \n                    \n                        getviews()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/Render.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RenderResult.html":{"url":"classes/RenderResult.html","title":"class - RenderResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RenderResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/results/render.ts\n        \n\n            \n                描述\n            \n            \n                Body渲染约定的实现\n\n按照约定将模板渲染到body相应中\n\n\n            \n\n\n            \n                实现\n            \n            \n                        IResult\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configs\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                toResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(value: string | Partial)\n                    \n                \n                        \n                            \n                                被定义在 src/results/render.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string | Partial\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configs\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Partial\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/results/render.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toResult(undefined: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/results/render.ts:30\n                            \n                        \n\n\n                \n                    \n                            框架调用，请勿手动调用 \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import merge from \"lodash/merge\";\nimport { IResult, IResultScope } from \"../typings/IResult\";\nimport { Context } from \"../services/Context\";\nimport { SimpleLogger } from \"../plugins/simple-logger\";\nimport { ENV } from \"../configs/env.config\";\nimport { IContext } from \"../typings/IContext\";\nimport { Render } from \"../services/Render\";\nimport {\n  RenderResultOptions,\n  RENDER_RESULT_OPTIONS\n} from \"../options/render.options\";\n\n/**\n * ## Body渲染约定的实现\n * * 按照约定将模板渲染到body相应中\n * @description\n * @author Big Mogician\n * @export\n * @class RenderResult\n * @implements {IResult}\n */\nexport class RenderResult implements IResult {\n  private configs!: Partial;\n\n  constructor(value: string | Partial) {\n    this.configs = typeof value === \"string\" ? { path: value } : value;\n  }\n\n  /** 框架调用，请勿手动调用 */\n  async toResult({ injector, configs }: IResultScope): Promise {\n    const { ctx } = injector.get(Context);\n    const opts = merge(\n      {},\n      configs.get(RENDER_RESULT_OPTIONS) || {},\n      this.configs || {}\n    );\n    const {\n      root,\n      path: xpath,\n      tplStr,\n      engines,\n      astConf,\n      engine: key,\n      configs: confs\n    } = opts;\n    if (astConf && !!astConf.use) {\n      return await ctx.render(xpath, astConf.state, astConf.configs);\n    }\n    const engine = injector.get(engines[key]);\n    const path = !root ? xpath : `${root}/${xpath}`;\n    try {\n      return !tplStr\n        ? await engine.render(path, confs)\n        : await engine.renderString(tplStr, confs);\n    } catch (e) {\n      const logger = injector.get(SimpleLogger);\n      const render = injector.get(Render);\n      const { ctx } = injector.get>(Context);\n      const { env } = configs.get(ENV);\n      const errroTitle =\n        (e.name && `模板渲染错误: ${e.name}`) || \"模板渲染错误\";\n      render.setView(\"__viewError\", e);\n      logger.debug(errroTitle, e);\n      ctx.status = 500;\n      const { path: errorPath, tplStr: errorTpl, content } =\n        env === \"production\" ? opts.onError : opts.onDevError;\n      if (errorPath) return await engine.render(errorPath, confs);\n      if (errorTpl) return await engine.renderString(errorTpl, confs);\n      return (content && content(e)) || \"Internal Server Error\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RenderResultOptions.html":{"url":"interfaces/RenderResultOptions.html","title":"interface - RenderResultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RenderResultOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/render.options.ts\n        \n\n            \n                描述\n            \n            \n                配置RenderResult的解析方式\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        astConf\n                                \n                                \n                                        configs\n                                \n                                \n                                        engine\n                                \n                                \n                                        engines\n                                \n                                \n                                        onDevError\n                                \n                                \n                                        onError\n                                \n                                \n                                        path\n                                \n                                \n                                        root\n                                \n                                \n                                        tplStr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        astConf\n                                    \n                                \n                                \n                                    \n                                        astConf:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    astroboy原生渲染的参数配置 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    配置信息，将作为渲染引擎需要接受的configs字段下传，默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    默认的模板引擎，默认：\"nunjunks\" \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engines\n                                    \n                                \n                                \n                                    \n                                        engines:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板引擎DI列表，可以动态merge合并配置，默认：{ nunjunks: NunjunksEngine } \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onDevError\n                                    \n                                \n                                \n                                    \n                                        onDevError:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    当渲染错误(开发模式)需要走的执行逻辑 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onError\n                                    \n                                \n                                \n                                    \n                                        onError:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    当渲染错误(生产模式)需要走的执行逻辑 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板文件相对路径，默认：\"\" \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tplStr\n                                    \n                                \n                                \n                                    \n                                        tplStr:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板字符串，如果提供将优先使用此渲染，默认：undefined \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\nimport { createOptions } from \"../services/Configs\";\nimport { NunjunksEngine } from \"../plugins/nunjunks\";\nimport { IViewEngine } from \"../typings/IViewEngine\";\n\n/**\n * ## 模板渲染错误处理接口\n * @description\n * @author Big Mogician\n * @interface IErrorHandler\n */\ninterface IErrorHandler {\n  /** 错误页面模板的path，默认：`undefined` */\n  path: string | false;\n  /** 错误页面字符串模板，默认：`undefined` */\n  tplStr: string | false;\n  /**\n   * 错误页面渲染函数，作为兜底的渲染能力提供，\n   * * 默认(dev)：`() => \"${错误的堆栈信息}\"\"`\n   * * 默认(prod)：`() => \"Internal Server Error\"`\n   * * 通常不要复写此字段，除非`path`或`tplStr`能够提供可用的内容\n   */\n  content: (error: Error, title?: string) => string;\n}\n\n/**\n * ## 配置RenderResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface RenderResultOptions\n */\nexport interface RenderResultOptions {\n  /** astroboy原生渲染的参数配置 */\n  astConf: {\n    /** 使用原生的渲染逻辑，默认：`false` */\n    use: boolean;\n    /** 原生astroboy渲染时的`config`字段，默认：`undefined` */\n    configs: any;\n    /** 原生astroboy渲染时的`state`字段，默认：`undefined` */\n    state: any;\n  };\n  /** 模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined` */\n  root: string;\n  /** 模板文件相对路径，默认：`\"\"` */\n  path: string;\n  /** 模板字符串，如果提供将优先使用此渲染，默认：`undefined` */\n  tplStr: string;\n  /** 配置信息，将作为渲染引擎需要接受的configs字段下传，默认：`undefined` */\n  configs: any;\n  /** 默认的模板引擎，默认：`\"nunjunks\"` */\n  engine: T;\n  /** 模板引擎DI列表，可以动态merge合并配置，默认：`{ nunjunks: NunjunksEngine }` */\n  engines: {\n    [prop: string]: Constructor;\n  };\n  /** 当渲染错误(生产模式)需要走的执行逻辑 */\n  onError: Partial;\n  /** 当渲染错误(开发模式)需要走的执行逻辑 */\n  onDevError: Partial;\n}\n\nexport const defaultRenderResultOptions: RenderResultOptions = {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n};\n\nfunction checkCustomError(error: Error) {\n  return error && error.name && error.name !== \"Error\";\n}\n\n/** RenderResult配置token */\nexport const RENDER_RESULT_OPTIONS = createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Request\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/controller.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Constructor, IBaseInjectable } from \"@bonbons/di\";\nimport { Router } from \"astroboy-router\";\nimport { createInstance, GlobalImplements, getInjector } from \"../utils\";\nimport { InjectService } from \"../services/Injector\";\nimport { Context } from \"../services/Context\";\nimport { ICommonResultType, IResult } from \"../typings/IResult\";\nimport { IContext } from \"../typings/IContext\";\nimport { Configs } from \"../services/Configs\";\nimport { tryGetRouteMagic, RouteArgument } from \"./route\";\nimport { STATIC_RESOLVER } from \"../options/typed-serialize.options\";\nimport { IStaticTypedResolver } from \"../typings/IStaticTypeResolver\";\n\ndeclare module \"koa\" {\n  interface Request {\n    body: any;\n  }\n}\n\nconst INTERNAL_INJECTOR = \"$INTERNAL_INJECTOR\";\nconst $$injector = \"$$injector\";\n\n/**\n * ## 定义控制器\n * * routes部分由astroboy-router实现\n * @description\n * @author Big Mogician\n * @export\n * @param {string} prefix\n * @returns\n */\nexport function Controller(prefix: string) {\n  return function(target: Constructor) {\n    const prototype: IBaseInjectable = target.prototype;\n    prototype.__valid = true;\n    Router(prefix)(target);\n    const DI_CONTROLLER = class {\n      constructor(ctx) {\n        const injector = getInjector(ctx);\n        const controller = createInstance(target, ctx);\n        controller[INTERNAL_INJECTOR] = injector;\n        return controller;\n      }\n    };\n    Object.defineProperty(prototype, $$injector, {\n      get() {\n        return this[INTERNAL_INJECTOR];\n      },\n      configurable: false,\n      enumerable: false\n    });\n    const { routes = {} } = prototype[\"@router\"];\n    Object.getOwnPropertyNames(prototype).forEach(name => {\n      if (name === \"@router\") return;\n      if (name === \"constructor\") return;\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, name);\n      const { value, get } = descriptor;\n      if (get) return;\n      if (name in routes && value && typeof value === \"function\") {\n        const { params: routeParams } = tryGetRouteMagic(prototype, name);\n        descriptor.value = async function() {\n          const injector: InjectService = this[$$injector];\n          const { ctx } = injector.get(Context);\n          const staticResolver = injector.get(Configs).get(STATIC_RESOLVER);\n          const params = resolveRouteMethodParams(\n            routeParams,\n            ctx,\n            staticResolver\n          );\n          const result: ICommonResultType = await value.bind(this)(...params);\n          if (result) resolveMethodResult(result, ctx, injector);\n        };\n        Object.defineProperty(prototype, name, descriptor);\n      }\n    });\n    copyPrototype(DI_CONTROLLER, target);\n    GlobalImplements.set(DI_CONTROLLER, target);\n    return >DI_CONTROLLER;\n  };\n}\n\nexport function copyPrototype(\n  DI_CONTROLLER: Constructor,\n  target: Constructor\n) {\n  Object.getOwnPropertyNames(target.prototype).forEach(name => {\n    Object.defineProperty(\n      DI_CONTROLLER.prototype,\n      name,\n      Object.getOwnPropertyDescriptor(target.prototype, name)\n    );\n  });\n  // @ts-ignore\n  DI_CONTROLLER.prototype.__proto__ = target.prototype.__proto__;\n  // @ts-ignore\n  DI_CONTROLLER.__proto__ = target.__proto__;\n}\n\nfunction resolveRouteMethodParams(\n  routeParams: RouteArgument[],\n  ctx: IContext,\n  staticResolver: IStaticTypedResolver\n) {\n  const params: any[] = [];\n  routeParams.forEach(i => {\n    const { index, type, resolver, ctor, static: stac } = i;\n    let final: any;\n    if (type === \"body\") {\n      const v = !resolver ? ctx.request.body : resolver(ctx.request.body || {});\n      final = resolveStaticType(stac, ctor, v, staticResolver);\n    } else {\n      const v = !resolver\n        ? { ...ctx.query, ...ctx.params }\n        : resolver({ ...ctx.query, ...ctx.params });\n      final = resolveStaticType(stac, ctor, v, staticResolver);\n    }\n    params[index] = final;\n  });\n  return params;\n}\n\nfunction resolveStaticType(\n  stac: boolean | undefined,\n  ctor: any,\n  value: any,\n  staticResolver: IStaticTypedResolver\n) {\n  return !ctor || stac === false\n    ? value || {}\n    : typeTransform(staticResolver, value, ctor);\n}\n\nfunction typeTransform(\n  staticResolver: IStaticTypedResolver,\n  value: any,\n  ctor: any\n) {\n  switch (ctor) {\n    case Number:\n    case String:\n      return ctor(value);\n    case Boolean:\n      return String(value || \"\") === \"true\";\n    case Object:\n      return value || {};\n    default:\n      return staticResolver.FromObject(value || {}, ctor);\n  }\n}\n\nasync function resolveMethodResult(\n  result: string | IResult,\n  ctx: IContext,\n  injector: InjectService\n) {\n  if ((result).toResult) {\n    ctx.body = await (result).toResult({\n      injector,\n      configs: injector.get(Configs)\n    });\n  } else {\n    ctx.body = result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouteArgument.html":{"url":"interfaces/RouteArgument.html","title":"interface - RouteArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouteArgument\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctor\n                                \n                                \n                                        index\n                                \n                                \n                                        resolver\n                                \n                                \n                                        static\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctor\n                                    \n                                \n                                \n                                    \n                                        ctor:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolver\n                                    \n                                \n                                \n                                    \n                                        resolver:     ParamsResolver | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ParamsResolver | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        static\n                                    \n                                \n                                \n                                    \n                                        static:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"params\" | \"body\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"params\" | \"body\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig.html":{"url":"interfaces/RouterConfig.html","title":"interface - RouterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    RConfig\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig-1.html":{"url":"interfaces/RouterConfig-1.html","title":"interface - RouterConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        always\n                                \n                                \n                                            可选的\n                                        approot\n                                \n                                \n                                            可选的\n                                        details\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        filetype\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approot\n                                    \n                                \n                                \n                                    \n                                        approot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filetype\n                                    \n                                \n                                \n                                    \n                                        filetype:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface ConfigCompilerConfig {\n  enabled?: boolean;\n  force?: boolean;\n  configroot?: string;\n  outputroot?: string;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n  configCompiler?: ConfigCompilerConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    },\n    configCompiler: {\n      ...get(merge, \"configCompiler\", {}),\n      ...get(config, \"configCompiler\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig-2.html":{"url":"interfaces/RouterConfig-2.html","title":"interface - RouterConfig-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    RConfig\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterOptions.html":{"url":"interfaces/RouterOptions.html","title":"interface - RouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/router.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        always\n                                \n                                \n                                        appRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        fileType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制刷新2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRoot\n                                    \n                                \n                                \n                                    \n                                        appRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    整个项目的url前缀，默认：'/' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动生成2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    生成router文件的文件类型，默认：'js' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerRouterOptions extends RouterOptions {\n  ctorFolder: string;\n  routerFolder: string;\n}\n\nexport interface RouterOptions {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\nexport const defaultRouterOptions: InnerRouterOptions = {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n};\n\nexport const ROUTER_OPTIONS = createOptions(\"ROUTER_OPTIONS\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Scope.html":{"url":"injectables/Scope.html","title":"injectable - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Scope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Scope.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                scopeId\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                begin\n                            \n                            \n                                    Public\n                                diration\n                            \n                            \n                                    Protected\n                                end\n                            \n                            \n                                    Protected\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            begin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        begin()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            diration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        diration()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        end()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(id: ScopeID)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    ScopeID\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _init\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : false\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scopeId\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ScopeID\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Date\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Date\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/Scope.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"../decorators/injectable\";\nimport { ScopeID } from \"@bonbons/di\";\n\nexport namespace Scope {\n  export interface Contract {\n    readonly id: ScopeID;\n    diration(): number;\n  }\n}\n\n@Injectable()\nexport class Scope implements Scope.Contract {\n  private _init = false;\n  private scopeId!: ScopeID;\n  private start!: Date;\n  private stop!: Date;\n\n  public get id() {\n    return this.scopeId;\n  }\n\n  protected init(id: ScopeID) {\n    if (this._init) return this;\n    this._init = true;\n    this.scopeId = id;\n    return this;\n  }\n\n  protected begin() {\n    if (!this.start) {\n      this.start = new Date();\n    }\n  }\n\n  protected end() {\n    if (!this.stop) {\n      this.stop = new Date();\n    }\n  }\n\n  public diration() {\n    if (this.start && this.stop) {\n      return this.stop.getTime() - this.start.getTime();\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/TypedSerializerCreator.html":{"url":"classes/TypedSerializerCreator.html","title":"class - TypedSerializerCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  TypedSerializerCreator\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/typed-serializer/core.ts\n        \n\n            \n                描述\n            \n            \n                内建静态类型序列化工具类\n\n            \n\n\n            \n                实现\n            \n            \n                        IStaticTypedResolver\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                FromJSON\n                            \n                            \n                                    Public\n                                FromObject\n                            \n                            \n                                    Public\n                                ToJSON\n                            \n                            \n                                    Public\n                                ToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        FromJSON(json: string, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:29\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        FromObject(json: any, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:43\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ToJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ToJSON(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:17\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ToObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ToObject(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:35\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IStaticTypedResolver,\n  IStaticSerializeOptions\n} from \"../../typings/IStaticTypeResolver\";\nimport { Serialize, Deserialize, GenericDeserialize } from \"cerialize\";\nimport { Constructor } from \"@bonbons/di\";\n\n/**\n * 内建静态类型序列化工具类\n * @description\n * @author Big Mogician\n * @export\n * @class TypedSerializerCreator\n * @implements {IStaticTypedResolver}\n */\nexport class TypedSerializerCreator implements IStaticTypedResolver {\n  public ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string {\n    if (options === undefined) options = { format: false };\n    return JSON.stringify(\n      Serialize(obj, options.type),\n      null,\n      options.format ? \"  \" : 0\n    );\n  }\n\n  public FromJSON(json: string, type?: Constructor): T {\n    return !type\n      ? (Deserialize(JSON.parse(json)) as T)\n      : (GenericDeserialize(JSON.parse(json), type) as T);\n  }\n\n  public ToObject(\n    obj: any,\n    options?: Partial>\n  ): any {\n    if (options === undefined) options = { format: false };\n    return Serialize(obj, options.type);\n  }\n\n  public FromObject(json: any, type?: Constructor): T {\n    return !type\n      ? (Deserialize(json) as T)\n      : (GenericDeserialize(json, type) as T);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n迭代记录\n1.1.0\n\n1.1.0 功能锁定\n\n1.0.11-rc.17\n\natc 新增 config 编译命令，支持对 ts 格式的 config 执行编译操作，支持未来的 config-DI 能力\n\n1.0.11-rc.7\n\n[ BREAKING CHANGE ] 调整了构造工厂函数的格式要求，废弃 1.0.9-rc.1 的改动\n\n1.0.11-rc.4\n\nServer 部分函数支持继承树扩展\n少量代码重构\n\n1.0.11-rc.2\n\n新增 Bundles 特性支持移动 DI\n\n1.0.11\n\n更新 @bonbons/di 到 1.3.5\n增加 UT 覆盖\n\n1.0.9-rc.1\n\n[ BREAKING CHANGE ] 调整 DI 接受工厂函数的类型，工厂函数 injector 和 configs\n\n1.0.8\n\n1.0.8 功能锁定\n\n1.0.7-rc.3\n\n恢复 tsconfig-paths 支持\n\n1.0.7-rc.1\n\n调整版本策略\n\n1.0.7\n\n1.0.7 功能锁定\n调整 package 解构\n修复问题\n\n1.0.6-rc.3\n\n[ BREAKING CHANGE ] rename CMD to AtcCLI\n\n1.0.6\n\n1.0.6 功能锁定\n\n1.0.5-rc.5\n\n新增 CMD namespace\n\n1.0.5\n\n1.0.5 功能锁定\natc 支持并行类型检查，默认开启\n\n1.0.4\n\n1.0.4 功能锁定\n\n1.0.3-rc.21\n\n细节优化\n\n1.0.3-rc.16\n\n新增全局错误处理\n\n1.0.3-rc.12\n\n修复 Injectable 装饰器故障\n\n1.0.3-rc.9\n\n增强多重继承的类型化写法\nRender 新增 init 重载钩子\n\n1.0.3-rc.7\n\n[ BREAKING CHANGE ] 调整 RenderResult 的原生参数配置\n所有基础服务全部完成契约化，可以通过 class 本身的 Contract 拿到其公共接口\n增加大量文档和注释\n\n1.0.3-rc.5\n\nDI 接入的重构\nInjectable 装饰器赠加新的重载\n\n1.0.3-rc.4\n\n增加单元测试\n\n1.0.3-rc.1\n\n功能锁定 1.0.3，开始新一轮 rc\n\n1.0.2-rc.39\n\n调整了内部日志的记录方式\n增强了 RenderResult 的模板扩展能力\n强化了模板渲染异常的处理逻辑\n\n1.0.2-rc.37\n\n[ BREAKING CHANGE ] 调整配置文件参数\n增加 atc-cli 对 router 命令的 config 文件支持\n\n1.0.2-rc.35\n\n[ BREAKING CHANGE ] 去除 atc-cli 对 js 的支持，去掉参数 --ts\n调整视觉风格\n\n1.0.2-rc.31\n\n修复找不到 Controller 的问题\n修复 nunjunks 默认模板 root 路径不正确的问题\n\n1.0.2-rc.29\n\n内置 nunjunks 模板渲染引擎\n新增 Render DI 渲染服务，可以自定义实现\n\n1.0.2-rc.28\n\nastt 新增 --config 指令，允许使用配置文件启动 cli\n\n1.0.2-rc.24\n\n[ BREAKING CHANGE ] astt 更名 atc ，并支持新的 dev 命令\n\n1.0.2-rc.23\n\nastt-cli 新增 tsconfig 配置支持\nastt-cli 新增 details 配置支持\n\n1.0.2-rc.20\n\nJsonResult 内置了支持模板定制的能力\n新增 RenderResult 对象能力\n新增 CONFIG_VIEW config 描述 astroboy 的 view 配置\n\n1.0.2-rc.18\n\n新增 __BASE_ROUTE_DECO_FACTORY 装饰器，为 Route 自定义提供最高扩展性\n\n1.0.2-rc.16\n\nastt-cli 工具已加入，支持生成 routers\n\n1.0.2-rc.1\n\n锁定 1.02 功能，开始新一轮 rc\n\n1.0.1-rc.30\n\n针对 @Controller 修饰过的 ts 控制器，将自动生成对应的 router.ts 文件\n当不存在 app/routers 文件夹的时候自动创建\n提供了一个独立的初始化routers的函数来支持进行发布前的预处理\n默认不执行初始化动作，可以选择预处理或是动态处理任意一种方式来实现\n\n1.0.1-rc.22\n\n[ BREAKING CHANGE ] 重新调整 Context 和 AstroboyContext 对于 ctx 类型复写的行为\n[ BREAKING CHANGE ] Context 取消在 AstroboyContext 中公开，只在继承链路中可见\nAstroboyContext 现在支持复写 app 和 config 字段的类型\n\n1.0.1-rc.20\n\n支持 DI 多重继承的能力\n\n1.0.1-rc.18\n\n[ BREAKING CHANGE ] 移除 @bonbons/di 的定义输出，并修复部分接口\n修复 astroboy-router 的一个兼容问题\n\n1.0.1-rc.15\n\n实现路由参数注入和类型安全映射\n支持扩展基础注入器，实现路由参数字段注入\n\n1.0.1-rc.14\n\n基本功能完成\n修复一些问题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                cmd.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            function\n            create\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            function\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/config-compiler.ts\n            \n            function\n            compileFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/config-compiler.ts\n            \n            function\n            connectExports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/config-compiler.ts\n            \n            function\n            readExcus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/config-compiler.ts\n            \n            function\n            readExpressions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/config-compiler.ts\n            \n            function\n            resolveExpressions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            interface\n            IRouter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            checkIfOnlyDeclares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            checkRouterFolders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            createFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            createJsFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            createTsFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            createTsRouterFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders/routers.ts\n            \n            function\n            initRouters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bundle.ts\n            \n            variable\n            Bundles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/bundle.ts\n            \n            variable\n            InnerBundle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            CmdConfig\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            CommandPlugin\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            ConfigCompilerConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            IENV\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            InnerCmdConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            function\n            createCmdConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            function\n            mergeCmdConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            function\n            create\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            function\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/compile-configs.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/config/actions.ts\n            \n            function\n            showCounts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/config/options.ts\n            \n            interface\n            IConfigCmdOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/config/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/actions.ts\n            \n            function\n            refreshToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/actions.ts\n            \n            function\n            startTypeCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            function\n            validation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/options.ts\n            \n            interface\n            IDevCmdOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/dev/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/index.ts\n            \n            function\n            initCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/init.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            transpile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            tsconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            tsnode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/router/actions.ts\n            \n            function\n            showRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/router/options.ts\n            \n            interface\n            IRouterCmdOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/router/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            class\n            CancellationToken\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            interface\n            CancellationTokenData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            function\n            existsSync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/NormalizedMessage.ts\n            \n            class\n            NormalizedMessage\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/cmd/utils/NormalizedMessage.ts\n            \n            interface\n            NormalizedMessageJson\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/utils/loadConfig.ts\n            \n            function\n            loadConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            interface\n            ConfigurationFile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            createProgram\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            loadLinterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            loadProgramConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            interface\n            IENV\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            variable\n            defaultEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            interface\n            IView\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            variable\n            CONFIG_VIEW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            variable\n            defaultView\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            Controller\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            copyPrototype\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveMethodResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveRouteMethodParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveStaticType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            typeTransform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            variable\n            $$injector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            variable\n            INTERNAL_INJECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            interface\n            IInjectableConfigs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            IRouterMagic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            ParamsOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            RouteArgument\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            __BASE_ROUTE_DECO_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            addMagicForRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            DELETE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            GET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            POST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            PUT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            resolveParamType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            route_query\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            tryGetRouteMagic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            tryGetRouterMagic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            variable\n            MAGIC_CONTENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/singleton.ts\n            \n            function\n            Watch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            interface\n            IPreProcess\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            buildRouter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preConfigCompiler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preInitFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preInitFn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/core.ts\n            \n            interface\n            IMiddlewaresScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/middlewares/core.ts\n            \n            function\n            createMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            disposeRequestScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            initRequestScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            tryCatchGlobalError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            variable\n            serverInit\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/options/config-compiler.options.ts\n            \n            interface\n            ConfigCompilerOptions\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/options/config-compiler.options.ts\n            \n            interface\n            InnerConfigCompilerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/config-compiler.options.ts\n            \n            variable\n            CONFIG_COMPILER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/config-compiler.options.ts\n            \n            variable\n            defaultConfigCompilerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            interface\n            IGlobalErrorHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            variable\n            defaultGlobalError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            variable\n            GLOBAL_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            interface\n            JsonResultOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            variable\n            defaultJsonResultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            variable\n            JSON_RESULT_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            interface\n            IErrorHandler\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            interface\n            RenderResultOptions\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            function\n            checkCustomError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            variable\n            defaultRenderResultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            variable\n            RENDER_RESULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            interface\n            InnerRouterOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            interface\n            RouterOptions\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            variable\n            defaultRouterOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            variable\n            ROUTER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/typed-serialize.options.ts\n            \n            variable\n            STATIC_RESOLVER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/core.ts\n            \n            injectable\n            NunjunksEngine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            interface\n            INunjunksRenderOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            variable\n            defaultNunjunksOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            variable\n            NUNJUNKS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            injectable\n            SimpleLogger\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            function\n            createStamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            function\n            createType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            interface\n            ISimpleLoggerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            variable\n            defaultSimpleLoggerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            variable\n            SIMPLE_LOGGER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/core.ts\n            \n            class\n            TypedSerializerCreator\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/index.ts\n            \n            variable\n            TypedSerializer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            class\n            JsonResult\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            camelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            decideWhiteSpace\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            snakeCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            variable\n            JsonResolvers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/render.ts\n            \n            class\n            RenderResult\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            class\n            Server\n            \n                46 %\n                (26/56)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            logActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/AstroboyContext.ts\n            \n            injectable\n            AstroboyContext\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/services/AstroboyContext.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/services/BaseClass.ts\n            \n            class\n            BaseClass\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/services/BaseClass.ts\n            \n            variable\n            BC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/ConfigReader.ts\n            \n            injectable\n            ConfigReader\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/services/ConfigReader.ts\n            \n            interface\n            BaseCompiler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/ConfigReader.ts\n            \n            interface\n            IConfigsCompiler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/ConfigReader.ts\n            \n            interface\n            IStrictConfigsCompiler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            class\n            RealConfigCollection\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            ConfigEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            ConfigToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            variable\n            createConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            variable\n            createOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Context.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createProxyByDepts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createProxyByKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            injectable\n            Render\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            interface\n            IGlobalSetOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Scope.ts\n            \n            injectable\n            Scope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/Scope.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IContext.ts\n            \n            interface\n            IContext\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/typings/IResult.ts\n            \n            interface\n            IResult\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/typings/IResult.ts\n            \n            interface\n            IResultScope\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IStaticTypeResolver.ts\n            \n            interface\n            IStaticSerializeOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IStaticTypeResolver.ts\n            \n            interface\n            IStaticTypedResolver\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/typings/IViewEngine.ts\n            \n            interface\n            IViewEngine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            createInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            fullText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getMethodParamsType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getPropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getPrototypeConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getShortScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            isCustomClassInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            optionAssign\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            resolveDepts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            resolveKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            setColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            setScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            Colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            GlobalDI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            GlobalImplements\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        依赖项\n    \n    \n        \n            @bonbons/di : ^1.4.1-rc.2\n        \n            @types/koa : ^2.0.47\n        \n            @types/koa-router : ^7.0.35\n        \n            @types/node : ^10.12.10\n        \n            @types/uuid : 3.4.4\n        \n            astroboy : 0.0.37\n        \n            astroboy-router : 1.2.0-rc.1\n        \n            camelcase : 4.1.0\n        \n            cerialize : 0.1.18\n        \n            chalk : 2.4.1\n        \n            commander : 2.19.0\n        \n            decamelize : 1.2.0\n        \n            lodash : ^4.17.11\n        \n            nodemon : 1.18.8\n        \n            nunjucks : 3.1.6\n        \n            rimraf : 2.6.2\n        \n            tsconfig-paths : 3.7.0\n        \n            tslib : ^1.9.3\n        \n            uuid : 3.3.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  列举\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            SimpleLogLevel   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/plugins/simple-logger/base.ts\n    \n        \n            \n                \n                    \n                        \n                        SimpleLogLevel\n                    \n                \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                值 : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                值 : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                值 : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                值 : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                值 : 4\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                值 : 5\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n&#x1F31F;astroboy.ts\n\n基于astroboy的 DI 版本，TypeScript3.2 信仰加成\n\n\n\n\n\n已经实现的功能\n\n高性能依赖注入[ 实现：@bonbons/di ]\n控制器声明式路由[ 实现：astroboy-router ]\n可扩展的注入式模版引擎\n可配置容器定义化\nDI 可注入依赖实现多重继承\n配置容器对接 astroboy 标准 configs 模式\n自动化生成 astroboy 的 routers 规范\n命令行工具支持\n完整兼容 astroboy 原始语义，支持任意扩展\n支持完整依赖注入能力的高级中间件\n路由方法返回配置接口化\n\n\n&#x1F628; 更多功能正在开发中...\n\nWiki + Demo\n\nDemo1:多版本并存 - 最大兼容预览(多重代码风格可以共存)\nDemo2:全量 astroboy.ts+构建 base 项目包 - base 仓库预览(构建继承 astroboy.ts 的 base 项目)\nDemo3:使用 base 仓库构建应用 - 最大预览(使用 base 项目构建应用)\nCore - 核心组件\nServices - 内置服务列表\nConfigs/Options - 配置列表\nDecorators - 装饰器列表\nFunctions - 功能函数\nInterfaces - 公开接口列表\n\n安装\nnpm install astroboy.tsyarn add astroboy.ts接入说明\n1. 按照 astroboy 框架要求创建应用程序目录（略）\n2. 调整 app.ts\nimport path from \"path\";\nimport { Server, Astroboy } from \"astroboy.ts\";\n\nServer.Create(Astroboy, {\n  ROOT_PATH: path.resolve(__dirname, \"..\")\n}).run({\n  onStart: () => console.log(\"hello world!\"),\n  onError: err => console.log(`oh shit : ${String(err)}`)\n});3. 配置初始化中间件\n\napp/middleware/server-init.ts\n\nimport { serverInit } from \"astroboy.ts\";\n\nexport = () => serverInit;\nconfig/middleware.default.js\n\nmodule.exports = {\n  \"server-init\": {\n    priority: 0.1,\n    enable: true\n  }\n};\nconfig/config.default.js\n\n/**\n * 默认配置文件\n */\nconst path = require(\"path\");\n\nmodule.exports = {\n  \"@astroboy.ts\": {\n    showTrace: false,\n    diType: \"proxy\"\n  }\n};4. 启动\n# 本地安装astrpboy.ts\n./node_modules/.bin/atc dev --inspect --tsconfig app/tsconfig.json\n# 全局装过astrpboy.ts\natc dev --inspect --tsconfig app/tsconfig.json开发姿势\n0.cli 配置文件\nastroboy.ts 开放了一个配置文件，用来简化 cli 参数的使用，类似 webpack，可以使用--config 参数修改配置文件的名字。\n\natc.config.js - 一个简单的配置文件\n\nconst path = require(\"path\");\n\nmodule.exports = {\n  tsconfig: \"tsconfig.json\",\n  inspect: true,\n  typeCheck: true,\n  transpile: true,\n  debug: \"*\",\n  mock: \"http://127.0.0.1:8001\",\n  // atc router 的命令配置\n  routers: {\n    enabled: true,\n    always: false,\n    approot: \"/v1\",\n    filetype: \"ts\",\n    details: true\n  },\n  // atc-cli监控的文件修改列表，自动重启node服务\n  watch: [\n    path.join(__dirname, \"app/**/*.*\"),\n    path.join(__dirname, \"config/**/*.*\"),\n    path.join(__dirname, \"plugins/**/*.*\")\n  ],\n  // 忽略的文件列表\n  ignore: []\n};1.编写路由控制器\n控制器方面使用装饰器来定制 Router 的业务层级，确定 Route 的 url 和 method，提供 params 和 body 的注入获取能力，并抽象了响应中 body 的写入能力。\n\napp/controllers/test.ts\n\nimport {\n  Controller,\n  Configs,\n  AstroboyContext,\n  ENV,\n  JsonResult,\n  GET,\n  POST,\n  FromParams,\n  FromBody,\n  Deserialize,\n  IContext\n} from \"astroboy.ts\";\n\ninterface GetQuery {\n  id: string;\n  name: string;\n  type: string;\n}\n\ninterface PostData {\n  id: number;\n  name: string;\n}\n\n@Controller(\"test\")\nclass TestController {\n  // 构造函数注入能力\n  constructor(\n    private configs: Configs,\n    private base: AstroboyContext\n  ) {}\n\n  // GET: {项目前缀}/api/test/testGet/:type?id=xxxx&name=xxxx\n  @GET(\"testGet/:type\")\n  // 显式进行params参数前提，作为路由方法参数\n  // 使用接口为了更好的类型描述，不会进行任何运行时类型处理\n  public methodGet(@FromParams() params: GetQuery) {\n    const { ctx } = this.base;\n    const { id, name, type } = params;\n    ctx.type = \"application/json\";\n    // JsonResult实现了IResult接口，提供将json内容编程化写入body的能力，同时提供了Configs容器的配置化支持\n    // 你可以自己实现自定义逻辑，只要实现IResult接口即可\n    return new JsonResult({\n      id,\n      name,\n      type,\n      url: ctx.url\n    });\n  }\n\n  // POST: {项目前缀}/api/post/:type?id=xxxx&name=xxxx\n  @POST(\"post/:type\")\n  // body也能进行相似的流程实现参数前提\n  // 你仍然可以进行直接解构\n  public async methodPost(\n    @FromParams() params: GetQuery,\n    @FromBody() { id, name }: PostData\n  ) {\n    const { name, id: id2, type } = params;\n    return new JsonResult({\n      id,\n      name,\n      type,\n      id2,\n      name\n    });\n  }\n}\n\nexport = TestController;到此一个业务路由层级的构建并没有完成，和原生 astroboy 开发类似，相应的需要一个 router 文件来创建 astroboy 的 router 数组定义。\n\napp/routers/test.ts\n\nimport TEST from \"../controllers/test\";\nimport { buildRouter } from \"astroboy.ts\";\n\n// “test”代表controllers内的文件级别\n// “/v1”代表应用的路由前缀，这里只作为示例\nexport = buildRouter(TEST, \"test\", \"/v1\");\n注：1.0.1-rc.27 版本以后已经支持自动生成 router，不需再要上述步骤，有两种模式任选其一，操作如下：\n\n1. routers 预处理模式\n\n使用 astroboy.ts 提供的命令行工具\n\n# 在开发启动或者生产打包前确保执行即可\n./node_modules/.bin/atc router --always --filetype ts2. 动态初始化(不推荐)\n\n配置 app/app.ts 文件 (但是在删除控制器后，需要手动删除 routers 中多余的文件)\n\nServer.Create(..., {\n  ...\n})\n  .option(ROUTER_OPTIONS, { appRoot: \"/v1\", enabled: true })\n  ...到此一个完整的业务级别的 router 构造完成了。\n2.编写可注入服务\nastroboy.ts 按照 IoC 模式的指导思路进行设计，所有的服务都应该按照 DI 的方式（无论是手动还是自动）获取、组装和构造逻辑层级。\n\napp/services/test.ts\n\nimport { Injectable } from \"astroboy.ts\";\n\n@Injectable()\nclass TestService {\n  private value = 98765;\n\n  public add(v: number) {\n    this.value += v;\n  }\n\n  public showValue() {\n    return this.value;\n  }\n}\n\nexport = TestService;astroboy.ts 服务的默认行为是范围单例（scoped），简单的描述来说，一个服务在同一个请求流程中总是保持单例状态，并在请求结束后释放。scoped 服务可以在请求流程中的任意位置获取，并承担数据传输载体的职责。\n你当然可以手动改变这一默认行为：\n// 请确保你了解type的含义，以免服务出现不符合预期的行为\n@Injectable({ type: InjectScope.Singleton })\nclass Test02Service {\n  ...\n}其他行为：\n\nnew（每次获取总是创建一个全新的对象）\nsingleton（在整个应用中保持唯一并积累副作用）\n\n服务还具有其他高级功能（包括依赖注入分离和实现多重继承），这里不一一展开了。\n3.对接 astroboy 的配置\n创建接口来描述 astroboy 的配置中的各个业务部分：\n\nconfig/options/demo.ts\n\nimport { createConfig } from \"astroboy.ts\";\n\ninterface DemoOptions {\n  /** ccccc */\n  key01: number;\n  key02: string;\n}\n\nexport const DEMO_OPTIONS = createConfig(\"demo\");\nconfig/config.default.js\n\n/**\n * 默认配置文件\n */\nconst path = require(\"path\");\n\nmodule.exports = {\n  \"@astroboy.ts\": {\n    showTrace: true,\n    diType: \"proxy\"\n  },\n\n  demo: {\n    key01: 12345,\n    key02: \"woshinidie\"\n  },\n\n  strOpt: \"test_string_config\"\n};这样既可以更好的描述原本混乱的 config 文件，同时可以在对 config 访问的时候提供定义支持。\n// 注入Configs服务，然后获取配置\n// opts变量将会被正确的绑定上类型信息\nconst opts = this.configs.get(DEMO_OPTIONS);4.在中间件中使用依赖注入\n过程比较轻量，废话不多，直接上 demo：\n\napp/middlewares/demo.ts\n\nimport { injectScope, ENV, Context } from \"astroboy.ts\";\nimport DataService from \"../services/Data\";\n\nexport = () =>\n  injectScope(async ({ injector, configs, ctx, next }) => {\n    // console.log(configs.get(ENV).showTrace);\n    const data = injector.get(DataService);\n    data.setStamp(new Date().getTime());\n    await next();\n    // console.log(\"fuck\");\n  });\n文档完善中...\n\n\nMIT License\nCopyright (c) 2018 NODE.Mogician bigmogician@outlook.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 NODE.Mogician\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n    \n\n    \n        \n            \n                \n                    \n                    6 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    8 类列表\n                \n            \n        \n        \n            \n                \n                    \n                    56 接口\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  类型别名\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            Async   (src/.../IResult.ts)\n                        \n                        \n                            ChangeReturn   (src/.../utils.ts)\n                        \n                        \n                            DependencyFactory   (src/.../server.ts)\n                        \n                        \n                            DIPair   (src/.../server.ts)\n                        \n                        \n                            ErrorType   (src/.../NormalizedMessage.ts)\n                        \n                        \n                            IBodyResult   (src/.../IResult.ts)\n                        \n                        \n                            ICommonResultType   (src/.../IResult.ts)\n                        \n                        \n                            InnerBundle   (src/.../bundle.ts)\n                        \n                        \n                            ParamsFactory   (src/.../route.ts)\n                        \n                        \n                            ParamsResolver   (src/.../route.ts)\n                        \n                        \n                            PartReset   (src/.../utils.ts)\n                        \n                        \n                            ProvideInvoker   (src/.../core.ts)\n                        \n                        \n                            ServerBundle   (src/.../bundle.ts)\n                        \n                        \n                            Severity   (src/.../NormalizedMessage.ts)\n                        \n                        \n                            TokenGenerator   (src/.../Configs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/typings/IResult.ts\n    \n    \n        \n            \n                \n                    \n                    Async\n                \n            \n            \n                \n                    表示一个异步过程 \n\n                \n            \n            \n                \n                        T | Promise\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IBodyResult\n                \n            \n            \n                \n                        Async\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ICommonResultType\n                \n            \n            \n                \n                        string | void | IResult\n\n                \n            \n        \n    \n    src/utils.ts\n    \n    \n        \n            \n                \n                    \n                    ChangeReturn\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PartReset\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/server.ts\n    \n    \n        \n            \n                \n                    \n                    DependencyFactory\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DIPair\n                \n            \n            \n                \n                        [any, any]\n\n                \n            \n        \n    \n    src/cmd/utils/NormalizedMessage.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorType\n                \n            \n            \n                \n                        \"diagnostic\" | \"lint\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Severity\n                \n            \n            \n                \n                        \"error\" | \"warning\"\n\n                \n            \n        \n    \n    src/bundle.ts\n    \n    \n        \n            \n                \n                    \n                    InnerBundle\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServerBundle\n                \n            \n            \n                \n                        PartReset\n\n                \n            \n        \n    \n    src/decorators/route.ts\n    \n    \n        \n            \n                \n                    \n                    ParamsFactory\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamsResolver\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    src/middlewares/core.ts\n    \n    \n        \n            \n                \n                    \n                    ProvideInvoker\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    src/services/Configs.ts\n    \n    \n        \n            \n                \n                    \n                    TokenGenerator\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            $$injector   (src/.../controller.ts)\n                        \n                        \n                            BC   (src/.../BaseClass.ts)\n                        \n                        \n                            Bundles   (src/.../bundle.ts)\n                        \n                        \n                            Colors   (src/.../utils.ts)\n                        \n                        \n                            CONFIG_COMPILER_OPTIONS   (src/.../config-compiler.options.ts)\n                        \n                        \n                            CONFIG_VIEW   (src/.../view.config.ts)\n                        \n                        \n                            createConfig   (src/.../Configs.ts)\n                        \n                        \n                            createOptions   (src/.../Configs.ts)\n                        \n                        \n                            defaultConfigCompilerOptions   (src/.../config-compiler.options.ts)\n                        \n                        \n                            defaultEnv   (src/.../env.config.ts)\n                        \n                        \n                            defaultGlobalError   (src/.../errors.options.ts)\n                        \n                        \n                            defaultJsonResultOptions   (src/.../json.options.ts)\n                        \n                        \n                            defaultNunjunksOptions   (src/.../options.ts)\n                        \n                        \n                            defaultRenderResultOptions   (src/.../render.options.ts)\n                        \n                        \n                            defaultRouterOptions   (src/.../router.options.ts)\n                        \n                        \n                            defaultSimpleLoggerOptions   (src/.../options.ts)\n                        \n                        \n                            defaultView   (src/.../view.config.ts)\n                        \n                        \n                            ENV   (src/.../env.config.ts)\n                        \n                        \n                               (src/.../init.ts)\n                        \n                        \n                               (src/.../check.ts)\n                        \n                        \n                            GLOBAL_ERROR   (src/.../errors.options.ts)\n                        \n                        \n                               (src/.../compile-configs.ts)\n                        \n                        \n                            GlobalDI   (src/.../utils.ts)\n                        \n                        \n                            GlobalImplements   (src/.../utils.ts)\n                        \n                        \n                            InnerBundle   (src/.../bundle.ts)\n                        \n                        \n                            INTERNAL_INJECTOR   (src/.../controller.ts)\n                        \n                        \n                            JSON_RESULT_OPTIONS   (src/.../json.options.ts)\n                        \n                        \n                            JsonResolvers   (src/.../json.ts)\n                        \n                        \n                            MAGIC_CONTENT   (src/.../route.ts)\n                        \n                        \n                            NUNJUNKS_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            RENDER_RESULT_OPTIONS   (src/.../render.options.ts)\n                        \n                        \n                            ROUTER_OPTIONS   (src/.../router.options.ts)\n                        \n                        \n                            serverInit   (src/.../index.ts)\n                        \n                        \n                            SIMPLE_LOGGER_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            STATIC_RESOLVER   (src/.../typed-serialize.options.ts)\n                        \n                        \n                            transpile   (src/.../register.ts)\n                        \n                        \n                            tsconfig   (src/.../register.ts)\n                        \n                        \n                            tsnode   (src/.../register.ts)\n                        \n                        \n                            TypedSerializer   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $$injector\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"$$injector\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INTERNAL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"$INTERNAL_INJECTOR\"\n                        \n                    \n\n\n            \n        \n\n    src/services/BaseClass.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BC\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : C\n                        \n                    \n\n\n            \n        \n\n    src/bundle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Bundles\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ChangeReturn\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  option(...args: any[]): ServerBundle {\n    Bundles[\"@options\"].push(args);\n    return Bundles as any;\n  },\n  scoped(...args: any[]): ServerBundle {\n    Bundles[\"@scopeds\"].push(args);\n    return Bundles as any;\n  },\n  singleton(...args: any[]): ServerBundle {\n    Bundles[\"@singletons\"].push(args);\n    return Bundles as any;\n  },\n  unique(...args: any[]): ServerBundle {\n    Bundles[\"@uniques\"].push(args);\n    return Bundles as any;\n  },\n  \"@options\": [],\n  \"@singletons\": [],\n  \"@scopeds\": [],\n  \"@uniques\": []\n} as any\n                        \n                    \n\n                \n                    \n                        DI Bundles\n\n导入并移动使用DI容器的注册api\n和普通注入项解析方式相同\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InnerBundle\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     InnerBundle\n\n                        \n                    \n                    \n                        \n                            缺省值 : Bundles as any\n                        \n                    \n\n\n            \n        \n\n    src/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Colors\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  reset: \"\\x1b[0m\",\n  red: \"\\x1b[31m\\x1b[1m\",\n  green: \"\\x1b[32m\",\n  blue: \"\\x1b[34m\",\n  yellow: \"\\x1b[33m\",\n  cyan: \"\\x1b[36m\",\n  magenta: \"\\x1b[35m\",\n  white: \"\\x1b[37m\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalDI\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new DIContainer({\n  // throws: false,\n  // onEmit: ({ level, data }) =>\n  //   console.log(\n  //     chalk[level === \"warn\" ? \"yellow\" : level === \"error\" ? \"red\" : \"white\"](\n  //       `[${level.toUpperCase()}] - ${data.msg}`\n  //     )\n  //   )\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalImplements\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map()\n                        \n                    \n\n\n            \n        \n\n    src/options/config-compiler.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_COMPILER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"CONFIG_COMPILER_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfigCompilerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ConfigCompilerOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  enabled: false,\n  force: false,\n  configRoot: \"config\",\n  outRoot: \"config\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/configs/view.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_VIEW\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createConfig(\"view\")\n                        \n                    \n\n                \n                    \n                        astroboy view config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultView\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Partial\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n\n\n            \n        \n\n    src/services/Configs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     TokenGenerator\n\n                        \n                    \n                    \n                        \n                            缺省值 : (key: string) => ({\n  key: Symbol(`config::${key}`)\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     TokenGenerator\n\n                        \n                    \n                    \n                        \n                            缺省值 : (key: string) => ({\n  key: Symbol(key)\n})\n                        \n                    \n\n\n            \n        \n\n    src/configs/env.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultEnv\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     IENV\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  diType: \"native\",\n  env: \"development\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ENV\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createConfig(\"@astroboy.ts\")\n                        \n                    \n\n                \n                    \n                        astroboy.ts环境变量 \n\n                    \n                \n\n            \n        \n\n    src/options/errors.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGlobalError\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     IGlobalErrorHandler\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  handler: async (error, injector, configs) => {\n    const render = injector.get(Render);\n    const { ctx } = injector.get(Context);\n    const { env } = configs.get(ENV);\n    const { onError, onDevError } = configs.get(RENDER_RESULT_OPTIONS);\n    const { content: defaultRender, ...args } =\n      env === \"production\" ? onError : onDevError;\n    render.setView(\"__viewError\", error);\n    try {\n      const path = !args.path ? undefined : args.path;\n      const tpl = !args.tplStr ? undefined : args.tplStr;\n      if (!path && !tpl) {\n        throw new Error(\"No template provided for global error handler.\");\n      }\n      const result = new RenderResult({ path, tplStr: tpl });\n      ctx.body = await result.toResult({ injector, configs });\n    } catch (_) {\n      const logger = injector.get(SimpleLogger);\n      logger.trace(\"GLOBAL_ERROR render failed\", _);\n      ctx.body = defaultRender(error, \"Internal Server Error\");\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GLOBAL_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\"GLOBAL_ERROR\")\n                        \n                    \n\n\n            \n        \n\n    src/options/json.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultJsonResultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     JsonResultOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  format: false,\n  whiteSpace: 2,\n  keyResolver: undefined,\n  jsonTemplate: undefined,\n  jsonTplKey: undefined\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON_RESULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"JSON_RESULT_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/plugins/nunjunks/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNunjunksOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     INunjunksRenderOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  root: path.resolve(process.cwd(), \"app/views\"),\n  cache: true,\n  autoescape: true,\n  throwOnUndefined: false,\n  trimBlocks: false,\n  lstripBlocks: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUNJUNKS_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"NUNJUNKS_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/options/render.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRenderResultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     RenderResultOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RENDER_RESULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n)\n                        \n                    \n\n                \n                    \n                        RenderResult配置token \n\n                    \n                \n\n            \n        \n\n    src/options/router.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRouterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     InnerRouterOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\"ROUTER_OPTIONS\")\n                        \n                    \n\n\n            \n        \n\n    src/plugins/simple-logger/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSimpleLoggerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ISimpleLoggerOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  level: SimpleLogLevel.WARN\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIMPLE_LOGGER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"SIMPLE_LOGGER_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/cmd/init.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/cmd/dev/check.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/cmd/compile-configs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/results/json.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JsonResolvers\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  camelcase: camelCase,\n  snakecase: snakeCase\n}\n                        \n                    \n\n\n            \n        \n\n    src/decorators/route.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAGIC_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map>()\n                        \n                    \n\n\n            \n        \n\n    src/cmd/router/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"router\",\n  description: \"astroboy.ts routers cmd\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"use atc.config.js\"],\n    [\"-E, --enabled [isEnabled]\", \"open routers-auto-build\"],\n    [\"-A, --always [isAlways]\", \"set routers-always-rebuild\"],\n    [\"-F, --filetype [fileType]\", \"set routers fileType\"],\n    [\"-R, --approot [appRoot]\", \"set routers-root\"],\n    [\"-T, --tsconfig [tsconfig]\", \"set tsconfig.json\"],\n    [\"-D, --details [showRouters]\", \"show building results or not\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc router\");\n    console.log(\"    $ atc router --always\");\n    console.log(\"    $ atc router --fileType ts\");\n    console.log(\"    $ atc router --approot /v1/prj\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/cmd/config/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"config\",\n  description: \"编译configs文件\",\n  options: [[\"-F, --force\", \"清除所有configs，并重新编译\"]],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc config\");\n    console.log(\"    $ atc config --force\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/cmd/dev/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"dev\",\n  description: \"本地开发，开启后端服务\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"使用自定义的atc.config.js配置文件\"],\n    [\"-D, --debug [debugName]\", \"开启 debug 模式\"],\n    [\"-E, --env [NODE_ENV]\", \"设置 NODE_ENV 环境变量，默认 development\"],\n    [\"-P, --port [NODE_PORT]\", \"设置 NODE_PORT 环境变量，默认 8201\"],\n    [\n      \"-M, --mock [proxyUrl]\",\n      \"开启 mock 模式，默认 proxy 地址为 http://127.0.0.1:8001\"\n    ],\n    [\"-T, --tsconfig [config]\", \"使用自定义的ts编译配置文件\"],\n    [\"-I, --inspect [inspect]\", \"启用inspector，开启编辑器断点调试\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc dev\");\n    console.log(\"    $ atc dev --debug\");\n    console.log(\"    $ atc dev --debug koa:application\");\n    console.log(\"    $ atc dev --debug --mock\");\n    console.log(\"    $ atc dev --mock http://127.0.0.1:8001\");\n    console.log(\"    $ atc dev --mock\");\n    console.log(\"    $ atc dev --env pre\");\n    console.log(\"    $ atc dev --port 8201\");\n    console.log(\"    $ atc dev --env development --port 8201\");\n    console.log(\"    $ atc dev --tsconfig app/tsconfig.json\");\n    console.log(\"    $ atc dev --inspect\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/middlewares/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            serverInit\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : async (ctx: IContext, next: () => Promise) => {\n  const { injector, scope, logger } = initRequestScope(ctx);\n  try {\n    await next();\n  } catch (error) {\n    await tryCatchGlobalError(injector, error);\n  } finally {\n    disposeRequestScope(scope, logger, injector);\n  }\n}\n                        \n                    \n\n                \n                    \n                        astroboy.ts初始化中间件\n\n请确保此中间件的优先级足够高\n建议优先级\n\n\n                    \n                \n\n            \n        \n\n    src/options/typed-serialize.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STATIC_RESOLVER\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"STATIC_RESOLVER\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/cmd/register.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            transpile\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.__TRANSPILE === \"true\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsconfig\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.__TSCONFIG\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsnode\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : require(\"ts-node\")\n                        \n                    \n\n\n            \n        \n\n    src/plugins/typed-serializer/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TypedSerializer\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new TypedSerializerCreator()\n                        \n                    \n\n                \n                    \n                        内建静态类型序列化工具 (based on cerialize) \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
