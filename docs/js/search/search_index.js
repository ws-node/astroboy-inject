var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/AstroboyContext.html",[0,1.479,1,1.918]],["body/injectables/AstroboyContext.html",[0,1.848,1,3.007,2,0.015,3,0.146,4,2.809,5,2.646,6,3.222,7,3.359,8,4.425,9,4.389,10,1.909,11,3.622,12,4.189,13,3.622,14,3.622,15,3.622,16,3.622,17,3.121,18,3.222,19,3.596,20,4.568,21,3.596,22,2.639,23,4.189,24,3.596,25,4.189,26,3.596,27,4.189,28,3.596,29,4.189,30,3.596,31,4.568,32,3.596,33,3.596,34,3.596,35,4.389,36,1.701,37,3.596,38,3.596,39,4.389,40,3.596,41,4.389,42,3.502,43,0.285,44,2.954,45,2.389,46,1.704,47,2.101,48,0.232,49,1.167,50,0.269,51,1.04,52,2.771,53,0.631,54,0.829,55,0.829,56,0.829,57,0.961,58,2.529,59,3.228,60,1.314,61,3.121,62,1.826,63,0.835,64,3.121,65,3.121,66,3.121,67,3.121,68,3.121,69,2.389,70,2.25,71,3.628,72,6.02,73,3.121,74,3.121,75,3.121,76,3.121,77,3.121,78,3.121,79,0.006,80,0.006]],["title/classes/BaseClass.html",[57,0.769,81,3.162]],["body/classes/BaseClass.html",[1,2.735,2,0.015,3,0.178,5,3.02,6,3.112,7,4.754,8,4.018,10,1.67,11,4.135,12,4.135,13,4.135,14,4.135,15,4.135,16,4.135,20,4.509,22,2.798,23,4.135,25,4.135,27,4.135,29,4.135,31,4.509,42,3.186,43,0.26,44,4.02,48,0.211,53,0.766,54,1.006,55,1.006,56,1.006,57,1.097,59,2.41,62,2.405,79,0.008,80,0.008,81,5.743,82,3.411,83,2.566,84,5.011,85,5.773,86,4.366,87,4.366,88,4.366,89,4.366,90,4.366,91,4.366,92,4.366,93,4.366,94,3.79,95,0.543,96,4.509]],["title/classes/CancellationToken.html",[57,0.769,97,2.899]],["body/classes/CancellationToken.html",[2,0.015,3,0.145,43,0.3,48,0.131,50,0.268,57,0.679,59,2.778,62,2.478,63,0.803,70,1.891,79,0.006,80,0.006,95,0.626,97,4.531,98,2.79,99,2.847,100,6.494,101,6.494,102,5.059,103,5.492,104,2.761,105,4.552,106,5.492,107,5.492,108,5.492,109,5.492,110,3.697,111,3.572,112,0.764,113,1.738,114,5.033,115,4.299,116,3.572,117,3.572,118,1.698,119,3.572,120,1.686,121,3.572,122,3.405,123,4.531,124,3.572,125,3.572,126,3.572,127,3.572,128,3.572,129,3.572,130,3.931,131,4.369,132,1.997,133,3.931,134,3.101,135,0.763,136,3.101,137,3.101,138,2.087,139,2.79,140,2.087,141,3.931,142,3.101,143,3.101,144,1.512,145,3.127,146,2.52,147,1.616,148,6.302,149,5.059,150,5.059,151,1.545,152,1.633,153,3.101,154,3.101,155,3.101,156,4.369,157,3.101,158,4.369,159,3.101,160,3.101,161,2.79,162,3.101,163,3.101,164,3.101,165,4.369,166,3.101,167,3.101,168,3.101,169,3.101]],["title/interfaces/CancellationTokenData.html",[50,0.303,123,2.899]],["body/interfaces/CancellationTokenData.html",[2,0.015,3,0.173,43,0.319,48,0.156,50,0.319,57,0.809,59,3.133,62,2.326,63,0.842,70,2.072,79,0.008,80,0.008,95,0.706,97,4.065,98,3.325,99,2.593,100,6.571,101,6.571,102,3.695,103,3.695,104,2.017,105,3.325,106,3.695,107,3.695,108,3.695,109,3.695,110,2.487,112,0.762,113,1.699,115,4.232,118,1.436,122,2.487,123,4.574,130,4.434,131,4.927,132,2.252,133,4.434,134,3.695,135,0.909,136,3.695,137,3.695,138,2.487,139,3.325,140,2.487,141,4.434,142,3.695,143,3.695,144,1.705,145,3.526,146,2.761,147,1.925,148,6.571,149,5.543,150,5.543,151,1.841,152,1.842,153,3.695,154,3.695,155,3.695,156,4.927,157,3.695,158,4.927,159,3.695,160,3.695,161,3.325,162,3.695,163,3.695,164,3.695,165,4.927,166,3.695,167,3.695,168,3.695,169,3.695]],["title/interfaces/CmdConfig.html",[50,0.303,170,1.751]],["body/interfaces/CmdConfig.html",[2,0.015,3,0.144,10,1.294,22,1.907,43,0.16,48,0.259,50,0.498,53,0.623,63,0.566,70,1.152,71,3.856,79,0.006,80,0.006,95,0.784,112,0.863,113,1.911,118,1.197,120,1.449,135,1.07,144,1.896,170,3.134,171,2.204,172,3.613,173,2.263,174,3.811,175,3.811,176,2.593,177,3.811,178,3.069,179,4.035,180,4.588,181,4.578,182,2.532,183,2.075,184,2.503,185,2.358,186,1.765,187,1.408,188,0.988,189,2.073,190,1.765,191,1.959,192,2.073,193,2.073,194,1.152,195,1.605,196,1.605,197,1.605,198,1.605,199,1.765,200,1.857,201,2.073,202,1.066,203,2.358,204,2.358,205,2.358,206,1.681,207,1.681,208,5.019,209,3.328,210,3.328,211,3.328,212,2.358,213,2.358,214,3.858,215,3.858,216,2.358,217,2.358,218,2.358,219,2.358,220,2.358]],["title/interfaces/CommandPlugin.html",[50,0.303,186,2.013]],["body/interfaces/CommandPlugin.html",[2,0.015,3,0.161,10,1.397,22,2.059,43,0.178,48,0.267,50,0.519,53,1.161,63,0.611,70,1.286,71,3.74,79,0.007,80,0.007,95,0.822,112,0.857,113,1.808,118,1.338,120,1.565,135,1.526,144,1.988,170,3.164,171,2.462,172,3.222,173,2.162,174,3.399,175,3.399,176,2.418,177,3.399,178,2.861,179,3.598,180,4.092,181,4.441,182,2.344,183,1.625,184,2.146,185,2.633,186,2.691,187,2.625,188,1.843,189,3.598,190,3.291,191,3.652,192,2.316,193,2.316,194,1.286,195,1.793,196,1.793,197,1.793,198,1.793,199,1.971,200,2.074,201,2.316,202,1.191,203,2.633,204,2.633,205,2.633,206,1.878,207,1.878,208,5.123,209,3.594,210,3.594,211,3.594,212,2.633,213,2.633,214,4.092,215,4.092,216,2.633,217,2.633,218,2.633,219,2.633,220,2.633]],["title/interfaces/Config.html",[10,1.045,50,0.303]],["body/interfaces/Config.html",[2,0.015,3,0.212,10,2.037,43,0.234,48,0.285,49,1.689,50,0.526,63,0.73,79,0.009,80,0.009,135,1.38,170,3.177,173,2.483,176,2.685,182,1.981,184,3.055,202,2.111,206,2.466,207,2.466,221,3.728,222,3.775,223,3.775,224,4.365,225,2.909,226,4.066,227,3.38,228,3.233,229,3.233,230,3.041,231,3.458,232,3.041]],["title/interfaces/Config-1.html",[10,0.878,50,0.255,233,1.537]],["body/interfaces/Config-1.html",[2,0.015,3,0.217,10,2.027,43,0.24,48,0.283,49,1.732,50,0.532,63,0.741,79,0.01,80,0.01,135,1.401,170,3.073,173,2.475,176,2.709,182,2.032,184,3.019,202,2.135,206,2.529,207,2.529,222,3.119,223,3.119,224,4.077,225,2.717,227,2.793,228,3.316,229,3.316,234,3.823,235,2.946]],["title/interfaces/ConfigEntry.html",[50,0.303,236,2.365]],["body/interfaces/ConfigEntry.html",[2,0.015,3,0.176,36,2.035,43,0.194,48,0.286,49,1.399,50,0.481,51,1.247,53,1.005,54,1.319,55,1.319,56,1.319,57,1.221,58,1.864,60,2.348,62,2.006,63,0.646,79,0.008,80,0.008,95,0.799,99,1.641,112,0.69,152,1.399,194,2.426,202,1.295,236,3.755,237,2.519,238,4.367,239,3.911,240,4.241,241,4.1,242,2.678,243,3.992,244,1.858,245,2.379,246,3.087,247,1.113,248,3.755,249,1.71,250,2.864,251,2.144,252,2.864,253,2.519,254,3.159,255,3.087,256,4.549,257,3.087,258,3.803,259,3.087,260,3.087,261,3.087,262,3.087,263,3.087,264,1.98,265,4.253,266,3.087,267,1.575,268,1.641,269,1.864]],["title/interfaces/ConfigToken.html",[50,0.303,240,2.234]],["body/interfaces/ConfigToken.html",[2,0.015,3,0.178,36,1.97,43,0.196,48,0.286,49,1.415,50,0.484,51,1.261,53,1.012,54,1.329,55,1.329,56,1.329,57,1.228,58,1.885,60,2.361,62,2.018,63,0.651,79,0.008,80,0.008,95,0.803,99,1.659,112,0.694,152,1.415,194,2.523,202,1.31,236,3.369,237,2.547,238,4.018,239,3.598,240,4.2,241,4.13,242,2.708,243,4.014,244,1.871,245,2.406,246,4.628,247,1.126,248,3.776,249,1.729,250,2.896,251,2.168,252,2.896,253,2.547,254,3.183,255,3.122,256,4.569,257,3.122,258,3.831,259,3.122,260,3.122,261,3.122,262,3.122,263,3.122,264,1.989,265,4.272,266,3.122,267,1.593,268,1.659,269,1.885]],["title/interfaces/ConfigurationFile.html",[50,0.303,270,3.162]],["body/interfaces/ConfigurationFile.html",[2,0.015,3,0.173,10,1.094,43,0.286,48,0.233,50,0.317,63,0.768,79,0.008,80,0.008,95,0.906,112,0.685,113,1.014,115,3.515,132,2.245,135,1.361,138,2.475,139,3.309,140,2.475,161,4.42,178,2.447,179,2.475,202,1.273,225,1.754,247,1.461,270,5.311,271,3.678,272,6.799,273,3.306,274,4.237,275,5.658,276,3.678,277,6.371,278,5.658,279,4.237,280,4.237,281,4.237,282,6.799,283,5.658,284,4.237,285,4.237,286,4.237,287,4.237,288,4.237,289,4.237,290,4.237,291,3.034,292,4.237,293,4.237,294,3.678,295,4.237,296,4.237,297,3.678,298,4.237,299,4.237,300,4.42,301,4.237,302,5.658,303,4.237,304,5.658,305,4.237,306,5.658,307,4.237,308,4.237,309,5.658,310,4.237,311,5.658,312,3.306,313,4.237,314,4.237,315,4.563,316,4.237,317,4.237,318,4.237,319,4.237,320,4.237,321,4.237,322,4.237,323,4.237,324,4.237,325,4.053,326,4.237,327,4.237,328,5.658,329,4.237,330,3.034,331,4.237,332,4.237,333,4.237,334,4.237,335,4.237,336,4.237,337,2.338,338,4.237,339,4.237]],["title/interfaces/Contract.html",[50,0.303,51,1.171]],["body/interfaces/Contract.html",[0,1.899,1,2.83,2,0.015,3,0.152,4,2.921,5,1.957,6,3.258,7,2.484,8,4.474,9,3.246,10,1.896,11,3.722,12,3.722,13,3.722,14,3.722,15,3.722,16,3.722,18,2.92,20,4.666,22,2.672,23,4.278,25,4.278,27,4.278,29,4.278,31,4.666,35,3.246,36,1.819,39,3.246,41,3.246,42,3.744,43,0.29,44,3.036,45,2.484,46,1.772,47,2.185,48,0.236,49,1.214,50,0.28,51,1.503,52,2.83,53,0.656,54,0.862,55,0.862,56,0.862,57,0.988,58,2.583,59,3.297,60,1.366,61,3.246,62,1.865,63,0.842,64,3.246,65,3.246,66,3.246,67,3.246,68,3.246,69,2.484,70,2.279,71,3.674,72,6.095,73,3.246,74,3.246,75,3.246,76,3.246,77,3.246,78,3.246,79,0.007,80,0.007,340,3.74,341,3.74,342,3.74,343,3.74,344,3.74,345,3.74]],["title/interfaces/Contract-1.html",[50,0.255,51,0.983,233,1.537]],["body/interfaces/Contract-1.html",[2,0.015,3,0.18,36,1.978,43,0.199,48,0.287,49,1.433,50,0.487,51,1.682,53,1.021,54,1.341,55,1.341,56,1.341,57,1.236,58,1.91,60,2.376,62,2.03,63,0.657,79,0.008,80,0.008,95,0.808,99,1.681,112,0.699,152,1.433,194,2.44,202,1.327,236,3.398,237,2.58,238,4.038,239,3.616,240,4.15,241,4.166,242,2.743,243,4.294,244,1.887,245,2.437,246,3.163,247,1.14,248,3.8,249,1.752,250,2.934,251,2.196,252,2.934,253,2.58,254,3.21,255,3.163,256,4.592,257,3.163,258,3.864,259,3.163,260,3.163,261,3.163,262,3.163,263,3.163,264,1.999,265,4.294,266,3.163,267,1.614,268,1.681,269,1.91]],["title/interfaces/Contract-2.html",[50,0.255,51,0.983,346,1.986]],["body/interfaces/Contract-2.html",[2,0.015,3,0.215,6,3.494,7,3.505,18,3.339,36,2.071,43,0.293,44,4.13,46,2.5,47,3.082,48,0.27,49,1.712,50,0.395,51,1.884,52,2.5,53,1.143,54,1.216,55,1.216,56,1.216,57,1.238,58,2.281,59,2.912,60,1.928,62,1.647,63,0.596,79,0.009,80,0.009,83,2.093,247,1.362,269,2.281,347,4.58,348,5.276,349,5.276,350,4.58,351,5.276]],["title/interfaces/Contract-3.html",[50,0.255,51,0.983,352,2.655]],["body/interfaces/Contract-3.html",[2,0.015,3,0.144,22,1.349,36,2.147,43,0.159,48,0.279,49,1.15,50,0.265,51,1.448,52,2.372,53,1.018,54,1.337,55,1.337,56,1.337,57,0.951,58,2.164,60,1.295,63,0.832,79,0.006,80,0.006,95,0.622,112,0.623,120,1.025,135,1.547,146,1.532,151,2.509,152,1.624,189,2.071,194,2.046,238,2.924,244,1.15,258,3.855,265,4.288,267,2.12,268,1.349,269,1.532,353,3.076,354,4.962,355,6.902,356,3.544,357,3.684,358,3.544,359,2.202,360,2.071,361,3.076,362,3.325,363,2.202,364,3.544,365,1.603,366,1.854,367,3.544,368,4.692,369,7.368,370,5.992,371,5.19,372,4.944,373,4.516,374,5.005,375,3.544,376,5.005,377,5.005,378,2.538,379,3.544,380,5.005,381,5.005,382,5.005,383,6.305,384,3.611,385,5.005,386,5.005,387,3.544,388,3.544,389,3.544,390,3.544,391,3.544]],["title/interfaces/Contract-4.html",[50,0.255,51,0.983,392,2.258]],["body/interfaces/Contract-4.html",[0,1.788,1,2.701,2,0.015,3,0.14,18,1.552,22,1.306,43,0.307,48,0.227,49,1.114,50,0.366,51,1.415,52,1.626,53,0.859,54,1.128,55,1.128,56,1.128,57,0.93,60,1.254,62,2.132,63,0.388,69,2.28,79,0.006,80,0.006,95,0.709,99,1.306,112,0.821,113,0.822,120,2.193,144,1.867,146,1.484,183,1.47,188,2.001,194,1.85,247,1.605,269,1.484,273,3.631,360,2.858,365,2.811,371,4.083,372,4.083,373,3.504,393,2.458,394,5.132,395,5.863,396,4.854,397,3.432,398,4.709,399,2.425,400,3.432,401,5.132,402,3.432,403,3.432,404,2.681,405,2.681,406,2.7,407,2.458,408,2.28,409,2.28,410,1.484,411,2.132,412,2.458,413,2.28,414,5.613,415,2.72,416,2.681,417,2.681,418,4.854,419,2.458,420,2.858,421,2.681,422,4.453,423,4.453,424,5.49,425,2.681,426,4.854,427,3.821]],["title/interfaces/Contract-5.html",[50,0.255,51,0.983,428,2.655]],["body/interfaces/Contract-5.html",[0,2.29,2,0.015,3,0.202,43,0.282,45,3.293,48,0.251,49,1.609,50,0.371,51,1.813,52,2.349,57,0.942,60,1.811,62,1.957,63,0.841,79,0.009,80,0.009,99,2.748,118,2.115,144,1.489,146,2.144,151,2.144,152,2.034,244,1.609,354,5.132,360,4.015,429,3.872,430,5.942,431,6.465,432,4.957,433,3.279,434,4.303,435,4.303,436,4.303,437,6.268,438,4.303,439,5.44,440,4.303,441,5.44,442,4.303,443,5.965,444,4.303,445,5.965,446,4.303,447,4.303]],["title/interfaces/Env.html",[50,0.303,173,1.264]],["body/interfaces/Env.html",[2,0.015,3,0.221,10,2.033,43,0.244,48,0.288,49,1.76,50,0.536,63,0.748,79,0.01,80,0.01,135,1.415,170,3.095,173,2.387,176,1.982,182,2.064,184,2.957,202,2.15,206,2.57,207,2.57,221,3.884,222,3.872,223,3.872,224,4.446,225,3.086,226,4.237,227,3.467,228,3.369,229,3.369,230,3.169,231,3.603,232,3.169]],["title/interfaces/Env-1.html",[50,0.255,173,1.061,233,1.537]],["body/interfaces/Env-1.html",[2,0.015,3,0.227,10,2.021,43,0.25,48,0.286,49,1.807,50,0.542,63,0.761,79,0.01,80,0.01,135,1.438,170,2.912,173,2.348,176,2.035,182,2.119,184,2.872,202,2.175,206,2.639,207,2.639,222,3.253,223,3.253,224,4.183,225,2.997,227,2.913,228,3.459,229,3.459,234,3.988,235,3.073]],["title/interfaces/FactoryContext.html",[50,0.303,448,3.162]],["body/interfaces/FactoryContext.html",[0,2.214,1,0.57,2,0.015,3,0.049,5,0.629,6,2.061,8,1.747,18,2.188,22,1.734,36,0.565,43,0.277,44,2.245,48,0.123,50,0.435,53,1.117,54,1.566,55,1.566,56,1.566,57,0.919,58,2.712,62,2.121,63,0.708,79,0.002,80,0.002,83,1.678,95,0.658,99,2.627,104,2.004,115,2.627,120,1.223,135,0.45,145,1.309,147,3.098,152,1.718,173,0.658,183,0.845,188,0.783,189,0.703,194,0.39,202,0.361,230,1.231,231,0.799,238,4.181,239,1.103,240,2.121,244,0.39,245,2.805,247,1.249,253,1.231,256,0.799,264,1.93,265,2.627,267,2.522,268,2.151,269,2.912,312,2.245,337,2.121,354,3.518,357,2.245,359,1.309,360,3.469,361,1.044,362,3.027,363,1.309,378,0.861,399,1.296,406,3.406,410,0.52,415,0.872,419,0.861,420,0.703,433,2.384,448,3.559,449,0.861,450,2.004,451,0.799,452,0.703,453,1.044,454,1.202,455,1.4,456,1.044,457,1.829,458,1.646,459,1.829,460,5.295,461,3.379,462,1.044,463,1.509,464,0.799,465,1.509,466,1.509,467,0.799,468,0.703,469,0.799,470,1.309,471,0.703,472,1.4,473,0.861,474,1.509,475,0.861,476,0.477,477,1.509,478,1.044,479,1.044,480,1.231,481,0.747,482,1.509,483,0.861,484,0.861,485,0.799,486,1.509,487,0.861,488,0.799,489,0.799,490,1.509,491,1.044,492,2.933,493,1.044,494,3.248,495,1.202,496,1.202,497,1.202,498,1.202,499,2.107,500,2.107,501,1.202,502,1.202,503,2.387,504,3.379,505,1.202,506,2.107,507,1.202,508,2.813,509,1.202,510,1.202,511,6.53,512,2.107,513,1.829,514,2.813,515,2.107,516,2.004,517,1.202,518,1.202,519,2.813,520,1.202,521,0.939,522,1.202,523,1.202,524,6.059,525,6.242,526,4.838,527,4.2,528,4.229,529,4.532,530,4.838,531,3.64,532,3.842,533,2.813,534,6.735,535,1.202,536,4.229,537,4.229,538,3.303,539,4.557,540,4.229,541,3.842,542,6.171,543,4.229,544,2.107,545,2.813,546,2.107,547,2.107,548,2.107,549,2.107,550,1.202,551,1.202,552,1.202,553,1.202,554,1.202,555,1.202,556,1.202,557,1.202,558,1.202,559,1.829,560,1.202,561,5.26,562,4.557,563,3.379,564,3.379,565,1.202,566,1.829,567,1.202,568,1.202,569,1.829,570,1.202,571,3.379,572,0.939,573,1.202,574,1.202,575,1.202,576,2.107,577,1.202,578,1.202,579,2.107,580,1.202,581,1.202,582,1.202,583,1.202,584,1.202,585,1.202,586,1.202,587,1.202,588,1.202,589,1.202,590,1.202,591,1.202,592,1.202,593,2.107,594,1.202,595,1.202,596,1.202,597,1.202,598,1.202,599,1.202,600,1.202,601,1.202,602,1.202,603,0.861,604,0.939,605,1.202,606,1.509,607,1.202,608,1.202,609,3.465,610,1.202,611,1.202,612,1.202,613,1.202,614,1.202,615,1.202,616,1.202,617,1.202,618,1.202,619,1.202,620,1.202,621,2.813,622,2.639,623,1.202,624,2.933,625,1.202,626,1.829,627,1.202,628,1.202,629,1.202,630,1.202,631,1.202,632,1.202,633,1.202,634,1.202,635,1.202,636,1.202,637,1.202,638,1.202,639,1.829,640,1.202,641,1.202,642,1.202,643,1.202,644,1.202,645,1.202,646,1.202,647,1.202,648,1.202,649,1.202,650,2.107,651,1.202,652,2.107,653,3.001,654,1.509,655,2.42,656,1.202,657,4.229,658,4.229,659,3.671,660,1.202,661,1.202,662,2.107,663,1.202,664,2.813,665,3.842,666,1.202,667,1.202,668,2.107,669,1.202,670,1.202,671,1.202,672,1.202,673,1.202,674,1.202,675,1.202,676,1.202,677,1.202,678,1.202,679,1.202,680,1.202,681,1.202,682,1.202,683,1.202,684,3.303,685,1.646,686,1.829,687,1.829,688,1.829,689,1.044,690,1.044,691,1.044,692,1.044,693,1.044,694,0.939]],["title/interfaces/IContext.html",[46,1.918,50,0.303]],["body/interfaces/IContext.html",[2,0.015,3,0.171,7,2.797,10,1.751,11,4.036,12,4.036,13,4.036,14,4.036,15,4.036,16,4.549,22,2.987,23,4.036,25,4.036,27,4.036,29,4.036,43,0.189,44,3.292,46,2.67,48,0.154,50,0.315,79,0.008,80,0.008,112,0.874,202,1.265,267,2.794,366,2.948,525,6.45,695,3.655,696,5.635,697,4.937,698,4.21,699,4.21,700,4.21,701,4.21,702,4.21,703,4.21,704,4.21,705,6.351,706,4.21,707,5.635,708,4.21]],["title/interfaces/IDevCmdOptions.html",[50,0.303,709,3.162]],["body/interfaces/IDevCmdOptions.html",[2,0.015,3,0.167,10,1.865,36,1.102,42,2.267,43,0.249,48,0.203,50,0.308,53,0.721,70,1.333,79,0.007,80,0.007,95,0.511,112,0.864,113,1.822,118,2.117,172,3.981,173,2.306,174,4.076,175,4.2,178,3.124,186,2.757,187,1.63,188,1.543,190,2.043,191,2.267,192,3.238,193,3.238,225,1.701,235,2.267,363,2.552,603,3.97,653,3.209,709,4.33,710,3.209,711,6.41,712,4.33,713,3.566,714,4.856,715,3.209,716,2.942,717,3.209,718,3.566,719,5.445,720,3.566,721,3.566,722,4.33,723,3.566,724,6.208,725,3.209,726,5.155,727,3.566,728,3.566,729,3.209]],["title/interfaces/IENV.html",[50,0.303,182,1.541]],["body/interfaces/IENV.html",[2,0.015,3,0.163,10,1.408,22,2.075,43,0.18,48,0.268,50,0.521,53,0.704,63,0.616,70,1.302,71,3.753,79,0.007,80,0.007,95,0.826,112,0.861,113,1.813,118,2.091,120,1.577,135,1.165,144,1.998,170,3.173,171,2.492,172,3.242,173,2.171,174,3.42,175,3.42,176,2.429,177,3.42,178,2.875,179,3.62,180,4.117,181,4.456,182,2.531,183,1.639,184,2.164,185,2.665,186,1.995,187,1.591,188,1.117,189,2.343,190,1.995,191,2.214,192,3.885,193,3.885,194,1.77,195,1.814,196,1.814,197,1.814,198,1.814,199,1.995,200,2.098,201,2.343,202,1.205,203,2.665,204,2.665,205,2.665,206,1.9,207,1.9,208,5.134,209,3.623,210,3.623,211,3.623,212,2.665,213,2.665,214,4.117,215,4.117,216,2.665,217,2.665,218,2.665,219,2.665,220,2.665,730,3.482,731,4.011]],["title/interfaces/IENV-1.html",[50,0.255,182,1.294,233,1.537]],["body/interfaces/IENV-1.html",[2,0.015,3,0.226,5,2.907,43,0.25,48,0.246,50,0.416,79,0.01,80,0.01,95,0.836,112,0.777,173,2.442,182,2.753,251,2.764,363,4.493,463,3.98,476,2.205,603,5.18,604,5.871,606,5.513,732,4.341,733,5.557,734,5.557,735,4.824]],["title/interfaces/IErrorHandler.html",[50,0.303,736,2.899]],["body/interfaces/IErrorHandler.html",[2,0.015,3,0.151,36,0.993,43,0.289,48,0.235,50,0.482,53,0.906,54,1.19,55,1.19,56,1.19,63,0.418,79,0.007,80,0.007,83,1.469,95,0.642,112,0.826,113,0.887,132,2.907,135,1.269,144,1.931,147,2.335,183,2.367,225,2.137,244,1.202,249,2.048,264,1.859,312,3.016,337,2.849,365,1.675,399,1.742,415,2.137,471,3.016,472,2.461,476,1.469,480,3.472,483,2.653,494,2.955,516,3.571,714,3.207,736,4.256,737,2.653,738,3.864,739,4.868,740,4.481,741,3.948,742,3.704,743,3.704,744,2.301,745,2.653,746,3.215,747,3.215,748,5.021,749,2.044,750,3.692,751,3.697,752,3.215,753,3.215,754,4.033,755,3.215,756,2.568,757,3.215,758,4.604,759,3.697,760,3.215,761,3.697,762,3.697,763,2.461,764,2.653,765,2.653,766,2.893,767,3.215,768,4.481,769,2.893]],["title/interfaces/IGlobalErrorHandler.html",[50,0.303,770,2.899]],["body/interfaces/IGlobalErrorHandler.html",[2,0.015,3,0.179,6,1.991,18,1.991,22,1.675,43,0.343,48,0.212,50,0.33,58,1.903,79,0.01,80,0.008,95,0.976,120,1.273,132,2.576,135,1.239,138,2.572,140,2.572,145,2.734,152,1.883,173,2.027,183,1.744,249,1.746,264,2.075,312,3.391,357,3.391,415,2.688,450,3.077,451,2.924,452,2.572,471,2.572,474,3.153,475,3.153,476,1.746,484,3.153,487,3.153,488,3.856,489,2.924,494,2.189,516,3.4,738,2.429,739,2.924,741,2.924,749,3.203,762,4.157,763,3.856,770,4.651,771,3.438,772,6.396,773,3.821,774,4.402,775,3.821,776,2.086,777,3.438,778,3.153,779,3.438,780,3.438,781,3.821,782,3.438,783,3.438,784,5.038,785,4.651,786,5.038,787,3.821,788,3.153,789,3.821,790,4.534,791,2.734,792,3.821,793,3.438,794,3.821,795,3.821,796,3.821,797,3.821]],["title/interfaces/IGlobalSetOptions.html",[50,0.303,413,2.69]],["body/interfaces/IGlobalSetOptions.html",[0,1.942,1,2.879,2,0.015,3,0.157,18,1.747,22,1.47,43,0.319,48,0.239,49,1.253,50,0.398,51,1.117,52,1.83,53,0.933,54,1.225,55,1.225,56,1.225,57,1.01,60,1.411,62,2.214,63,0.436,69,2.566,79,0.007,80,0.007,95,0.755,99,1.47,112,0.807,113,1.455,120,2.141,144,1.966,146,1.67,183,1.597,188,1.822,194,1.253,269,1.67,360,3.105,365,2.96,371,4.352,372,4.352,373,3.806,393,2.766,394,4.151,395,4.746,396,4.151,398,4.406,399,2.208,401,4.746,404,3.017,405,3.017,406,2.933,407,2.766,408,2.566,409,2.566,410,1.67,411,2.399,412,2.766,413,3.531,414,5.996,415,2.841,416,3.017,417,3.017,418,5.112,419,2.766,420,3.105,421,3.017,422,4.746,423,4.746,424,5.675,425,3.017,426,5.112,427,4.151]],["title/interfaces/IInjectableConfigs.html",[50,0.303,798,3.162]],["body/interfaces/IInjectableConfigs.html",[0,2.437,2,0.015,3,0.189,10,1.886,43,0.27,48,0.267,50,0.348,53,0.816,54,1.072,55,1.072,56,1.072,63,0.679,79,0.008,80,0.008,95,0.748,135,1.506,146,2.011,147,3.49,183,1.808,230,2.717,238,4.448,244,1.509,245,4.202,247,1.886,267,1.699,268,1.77,368,4.647,399,2.25,410,2.011,433,3.821,455,3.09,459,6.339,622,3.633,624,6.121,626,4.037,654,3.331,655,4.776,659,4.037,798,4.7,799,4.037,800,5.223,801,4.651,802,4.037,803,6.016,804,6.016,805,3.09,806,4.037,807,4.037,808,4.651]],["title/interfaces/IMiddlewaresScope.html",[50,0.303,809,3.162]],["body/interfaces/IMiddlewaresScope.html",[2,0.015,3,0.192,6,3.453,36,2.012,43,0.318,46,2.873,47,2.75,48,0.245,50,0.353,54,1.085,55,1.085,56,1.085,58,2.036,63,0.532,79,0.008,80,0.008,95,0.834,120,1.754,135,1.432,202,1.414,247,1.215,264,2.279,267,1.72,268,1.792,291,5.468,354,4.456,357,4.139,410,2.036,450,3.556,452,2.75,455,3.128,476,1.868,776,2.231,791,2.924,809,5.533,810,3.677,811,4.086,812,4.283,813,5.263,814,6.064,815,6.708,816,4.086,817,4.708,818,4.708,819,4.708]],["title/interfaces/INunjunksRenderOptions.html",[50,0.303,820,2.69]],["body/interfaces/INunjunksRenderOptions.html",[2,0.015,3,0.22,43,0.297,48,0.261,50,0.405,79,0.01,80,0.01,95,0.822,112,0.768,132,2.623,144,2.335,146,3.219,249,2.623,476,2.143,481,4.107,482,3.869,756,3.798,820,4.746,821,4.22,822,6.628,823,5.965,824,6.628,825,6.628,826,6.628,827,4.689,828,4.689]],["title/interfaces/IPreProcess.html",[50,0.303,829,3.162]],["body/interfaces/IPreProcess.html",[2,0.015,3,0.153,5,1.97,36,1.01,43,0.316,47,2.2,48,0.297,50,0.282,53,0.916,54,1.204,55,1.204,56,1.204,58,1.628,63,0.59,70,1.946,79,0.011,80,0.007,83,2.863,95,0.649,112,0.775,113,1.685,120,1.089,135,1.28,176,1.376,187,2.378,188,1.049,195,2.928,196,3.076,197,2.928,198,2.928,199,2.982,202,1.131,236,2.2,240,2.078,245,2.078,248,2.2,249,1.494,251,1.873,264,1.51,267,2.366,268,1.433,399,2.023,408,2.502,410,1.628,412,2.697,451,2.502,452,2.2,453,3.269,476,1.494,477,2.697,478,3.269,479,3.269,481,2.339,483,2.697,485,2.502,487,2.697,488,2.502,489,2.502,490,2.697,491,3.269,494,1.873,503,3.244,745,2.697,756,3.22,773,3.269,829,4.079,830,3.269,831,4.533,832,3.74,833,3.269,834,5.995,835,2.697,836,3.766,837,2.474,838,2.502,839,2.941,840,3.766,841,3.766,842,2.941,843,4.533,844,3.766,845,3.766,846,3.766,847,4.079,848,2.941,849,3.766,850,2.697,851,3.766,852,3.766,853,3.766,854,3.766,855,3.766,856,5.222,857,5.222,858,3.766,859,3.766,860,3.766,861,2.697,862,2.941,863,3.269,864,2.941]],["title/interfaces/IResult.html",[50,0.303,865,2.013]],["body/interfaces/IResult.html",[2,0.015,3,0.202,36,1.329,43,0.282,48,0.278,50,0.515,53,1.1,54,1.444,55,1.444,56,1.444,79,0.009,80,0.009,112,0.776,120,1.434,242,3.08,243,3.893,244,1.609,247,1.774,264,1.434,267,1.811,268,1.887,269,2.144,357,3.661,433,3.279,450,2.349,452,2.896,776,2.969,812,4.219,865,3.704,866,3.55,867,4.895,868,5.44,869,4.626,870,4.957,871,3.279,872,3.55,873,3.872]],["title/interfaces/IResultScope.html",[50,0.303,869,2.515]],["body/interfaces/IResultScope.html",[2,0.015,3,0.205,36,1.351,43,0.285,48,0.279,50,0.519,53,1.111,54,1.46,55,1.46,56,1.46,79,0.009,80,0.009,112,0.744,120,1.458,242,3.131,243,4.513,244,1.636,247,1.788,264,2.101,267,1.842,268,1.918,269,2.18,357,4.244,433,2.637,450,3.442,452,2.945,776,3.001,812,4.046,865,3.613,866,3.61,868,4.375,869,4.513,871,2.637,872,3.61,873,3.937]],["title/interfaces/IRouter.html",[50,0.303,874,2.515]],["body/interfaces/IRouter.html",[2,0.015,3,0.136,43,0.293,48,0.122,50,0.251,63,0.735,79,0.006,80,0.006,95,0.954,112,0.855,118,1.898,120,0.969,130,3.757,132,2.583,135,1.39,138,2.81,140,2.81,145,2.082,151,2.08,176,2.729,188,0.933,195,1.516,196,2.175,197,1.516,198,3.338,225,2.545,233,2.175,235,1.85,315,2.4,330,2.4,365,2.175,384,2.516,399,1.131,410,1.449,468,1.958,470,2.082,490,2.4,516,2.666,730,2.909,738,1.85,756,3.37,837,2.279,838,2.226,843,4.175,850,3.445,874,4.436,875,2.909,876,3.351,877,4.175,878,3.351,879,4.029,880,3.351,881,4.029,882,3.351,883,3.351,884,3.351,885,3.351,886,3.351,887,3.351,888,6.51,889,7.141,890,3.351,891,7.614,892,3.351,893,3.351,894,4.81,895,3.351,896,4.884,897,7.379,898,7.379,899,6.148,900,3.351,901,3.351,902,3.351,903,4.81,904,3.351,905,3.351,906,3.351,907,3.351,908,3.351,909,3.351,910,4.175,911,6.51,912,3.351,913,3.351,914,3.195,915,6.51,916,3.351,917,3.351,918,3.351,919,3.351,920,4.175,921,3.351,922,3.351,923,3.351,924,3.351,925,3.351,926,4.81,927,1.958,928,3.351,929,3.351,930,4.81,931,3.351,932,3.351,933,3.351,934,3.351,935,3.351,936,3.351,937,3.351,938,3.351,939,3.351,940,3.351,941,3.351,942,3.351,943,3.351]],["title/interfaces/IRouterCmdOptions.html",[50,0.303,944,3.162]],["body/interfaces/IRouterCmdOptions.html",[2,0.015,3,0.18,5,2.307,10,1.854,36,1.182,42,2.433,43,0.261,48,0.212,50,0.33,53,0.774,70,1.431,79,0.008,80,0.008,95,0.548,112,0.862,113,1.765,176,2.623,178,3.188,186,2.89,187,1.749,188,1.618,190,2.193,191,2.433,195,3.247,196,3.4,197,3.4,198,3.45,200,3.756,225,1.825,227,2.307,235,2.433,337,2.433,406,3.812,712,4.538,713,3.827,715,3.444,716,3.158,717,3.444,724,5.959,725,3.444,726,4.589,756,2.193,837,3.402,850,3.158,927,2.576,944,4.538,945,3.444,946,3.827,947,3.827,948,3.827,949,3.827,950,3.827,951,3.827,952,3.444,953,3.827,954,3.827,955,3.827,956,3.827,957,3.827]],["title/interfaces/IRouterMagic.html",[50,0.303,958,2.69]],["body/interfaces/IRouterMagic.html",[2,0.015,3,0.11,36,1.938,43,0.249,48,0.284,50,0.372,53,1.144,54,1.503,55,1.503,56,1.503,63,0.834,79,0.005,80,0.005,83,1.971,95,0.741,104,1.949,112,0.83,113,1.427,118,2.012,120,0.784,132,2.729,135,1.643,152,0.88,183,2.067,187,1.632,188,1.145,194,0.88,247,1.888,254,1.496,264,0.784,267,2.179,268,2.482,273,2.403,325,1.942,365,1.226,366,1.418,368,1.684,384,3.599,399,1.872,410,1.172,503,2.555,697,4.17,805,4.907,835,1.942,837,1.284,871,2.6,874,3.446,927,1.584,958,2.732,959,1.684,960,4.658,961,4.27,962,2.118,963,2.118,964,2.118,965,5.479,966,2.118,967,2.118,968,1.942,969,1.801,970,4.671,971,2.118,972,3.559,973,1.801,974,5.248,975,5.248,976,2.555,977,3.961,978,2.946,979,2.946,980,3.212,981,3.704,982,3.212,983,4.333,984,2.118,985,2.118,986,2.118,987,2.118,988,1.801,989,3.212,990,3.212,991,5.568,992,3.559,993,2.118,994,1.801,995,3.212,996,1.801,997,2.118,998,2.118,999,2.118,1000,2.118,1001,2.118,1002,2.118,1003,3.973,1004,3.212,1005,2.118,1006,2.118,1007,3.212,1008,3.212,1009,2.118,1010,2.118,1011,2.118,1012,2.118,1013,2.118,1014,1.942,1015,2.118,1016,2.118,1017,1.801,1018,2.118,1019,2.118,1020,1.942,1021,2.118,1022,2.118]],["title/interfaces/ISimpleLoggerOptions.html",[50,0.303,1023,2.899]],["body/interfaces/ISimpleLoggerOptions.html",[2,0.015,3,0.232,43,0.307,48,0.267,50,0.428,79,0.01,80,0.01,95,0.85,118,2.469,235,3.151,249,2.712,476,2.265,485,4.542,486,4.089,1023,5.241,1024,4.089,1025,4.46,1026,6.731,1027,6.584,1028,4.956]],["title/interfaces/IStaticSerializeOptions.html",[50,0.303,1029,2.69]],["body/interfaces/IStaticSerializeOptions.html",[2,0.015,3,0.215,36,1.749,43,0.238,48,0.238,50,0.489,79,0.01,80,0.01,104,3.501,110,3.088,112,0.701,113,1.694,122,3.811,147,3.496,188,1.817,244,1.715,247,1.996,366,3.413,398,4.052,399,2.201,529,5.771,538,5.096,1029,4.334,1030,4.129,1031,4.589,1032,3.284,1033,6.413,1034,6.413,1035,5.663,1036,4.129,1037,4.129,1038,4.129]],["title/interfaces/IStaticTypedResolver.html",[50,0.303,1032,2.515]],["body/interfaces/IStaticTypedResolver.html",[2,0.015,3,0.179,36,2.045,43,0.198,48,0.212,50,0.435,79,0.008,80,0.008,104,3.613,110,3.794,112,0.771,113,1.054,122,4.305,147,3.449,188,2.052,244,1.428,247,1.94,366,3.612,398,4.288,399,2.486,529,5.957,538,5.392,1029,2.924,1030,3.438,1031,2.734,1032,3.605,1033,6.619,1034,6.619,1035,5.992,1036,4.534,1037,5.072,1038,4.534,1039,5.038,1040,5.038,1041,4.402,1042,4.402,1043,3.821,1044,4.402,1045,3.821,1046,4.402]],["title/interfaces/IView.html",[50,0.303,1047,3.162]],["body/interfaces/IView.html",[2,0.015,3,0.213,10,1.352,43,0.235,48,0.237,50,0.486,53,0.919,54,1.207,55,1.207,56,1.207,79,0.009,80,0.009,83,2.077,95,0.806,112,0.861,113,1.686,247,1.674,251,2.604,273,3.788,365,2.368,399,1.766,464,3.478,465,3.749,476,2.077,756,3.662,823,5.751,1047,5.503,1048,4.089,1049,6.484,1050,7.363,1051,7.363,1052,7.363,1053,4.089,1054,4.544]],["title/interfaces/IViewEngine.html",[50,0.303,744,2.515]],["body/interfaces/IViewEngine.html",[2,0.015,3,0.227,43,0.251,48,0.204,50,0.418,79,0.01,80,0.01,112,0.841,132,2.675,264,2.265,415,2.791,744,4.189,776,3.651,865,2.775,1055,4.844,1056,5.853,1057,6.742,1058,5.58,1059,6.742,1060,5.58]],["title/interfaces/InnerCmdConfig.html",[50,0.303,201,2.365]],["body/interfaces/InnerCmdConfig.html",[2,0.015,3,0.166,10,1.424,22,2.099,43,0.183,48,0.269,50,0.524,53,0.716,63,0.623,70,1.323,71,3.771,79,0.007,80,0.007,95,0.832,112,0.853,113,1.819,118,1.376,120,1.595,135,1.178,144,2.011,170,3.242,171,2.533,172,3.269,173,2.34,174,3.449,175,3.449,176,2.446,177,3.449,178,2.895,179,3.651,180,4.151,181,4.478,182,2.378,183,1.657,184,2.188,185,2.709,186,2.028,187,1.618,188,1.135,189,2.382,190,2.028,191,2.25,192,2.382,193,2.382,194,1.323,195,1.844,196,1.844,197,1.844,198,1.844,199,2.028,200,2.133,201,3.222,202,1.225,203,2.709,204,2.709,205,4.448,206,1.932,207,1.932,208,5.149,209,3.664,210,3.664,211,3.664,212,2.709,213,2.709,214,4.151,215,4.151,216,2.709,217,2.709,218,2.709,219,2.709,220,2.709]],["title/interfaces/InnerRouterOptions.html",[50,0.303,468,2.365]],["body/interfaces/InnerRouterOptions.html",[2,0.015,3,0.216,43,0.239,48,0.27,50,0.49,70,1.722,79,0.01,80,0.01,95,0.813,112,0.842,113,1.565,144,1.965,195,2.958,196,2.958,197,2.958,198,2.958,199,3.252,202,1.594,249,2.105,468,4.141,469,3.526,470,3.297,476,2.105,832,3.801,847,5.108,848,4.145,879,5.441,881,5.441,1061,3.801,1062,5.076,1063,4.145,1064,3.801,1065,4.145]],["title/classes/JsonResult.html",[57,0.769,1066,2.515]],["body/classes/JsonResult.html",[2,0.015,3,0.162,43,0.322,48,0.226,53,0.952,54,1.251,55,1.251,56,1.251,57,1.031,60,1.983,63,0.854,79,0.007,80,0.007,95,0.767,99,2.065,112,0.745,113,0.953,135,1.318,147,1.801,151,2.346,188,1.109,230,2.326,233,2.454,239,3.832,264,2.006,267,1.455,268,1.515,269,1.722,346,3.17,359,2.473,392,3.605,399,2.083,406,2.197,407,2.851,409,2.645,410,1.722,411,2.473,467,2.645,654,2.851,655,4.748,763,2.645,785,4.421,861,2.851,865,3.297,867,4.822,869,4.309,871,3.468,927,3.17,1031,3.371,1066,4.118,1067,3.11,1068,3.456,1069,3.981,1070,3.456,1071,3.981,1072,5.426,1073,3.981,1074,4.421,1075,3.981,1076,3.456,1077,2.645,1078,3.11,1079,6.629,1080,3.11,1081,3.11,1082,3.11,1083,6.173,1084,3.981,1085,3.11,1086,3.456,1087,5.426,1088,3.981,1089,3.456,1090,3.981,1091,5.426,1092,3.981,1093,3.981,1094,3.981,1095,3.981,1096,4.238]],["title/interfaces/JsonResultOptions.html",[50,0.303,1077,2.69]],["body/interfaces/JsonResultOptions.html",[2,0.015,3,0.188,43,0.208,48,0.257,50,0.449,53,0.811,54,1.065,55,1.065,56,1.065,79,0.008,80,0.008,95,0.745,112,0.802,113,1.591,122,4.109,135,1.279,144,1.997,151,2.874,183,2.34,194,1.499,233,3.007,247,1.547,249,2.376,273,3.5,346,4.362,365,2.089,392,4.416,466,3.308,467,3.979,476,1.833,1031,4.527,1066,3.721,1077,4.673,1078,5.692,1080,5.692,1081,5.692,1082,5.692,1097,3.608]],["title/classes/NormalizedMessage.html",[57,0.769,1098,2.899]],["body/classes/NormalizedMessage.html",[2,0.015,3,0.087,48,0.155,50,0.159,52,3.699,57,0.404,62,2.511,63,0.859,70,0.69,79,0.004,80,0.004,95,0.423,104,3.725,105,2.658,110,2.841,112,0.79,113,1.273,115,1.321,118,2.498,122,1.242,151,2.576,152,0.69,183,1.461,233,2.888,247,1.538,315,3.809,330,1.523,359,3.021,378,2.437,384,1.78,516,2.304,738,2.936,996,1.412,1098,5.303,1099,1.523,1100,4.617,1101,4.925,1102,4.925,1103,5.783,1104,3.693,1105,3.693,1106,3.693,1107,3.693,1108,3.693,1109,3.403,1110,3.403,1111,3.403,1112,3.403,1113,3.403,1114,3.693,1115,4.221,1116,4.221,1117,4.221,1118,4.221,1119,4.221,1120,2.954,1121,4.572,1122,3.403,1123,2.126,1124,2.126,1125,2.126,1126,2.126,1127,2.126,1128,2.126,1129,3.323,1130,2.126,1131,5.477,1132,2.126,1133,3.323,1134,2.126,1135,3.798,1136,2.126,1137,2.126,1138,5.374,1139,2.126,1140,4.617,1141,2.954,1142,5.172,1143,2.126,1144,4.617,1145,2.954,1146,4.925,1147,2.126,1148,4.221,1149,2.954,1150,3.693,1151,2.126,1152,2.954,1153,2.954,1154,3.693,1155,2.126,1156,2.954,1157,2.954,1158,2.126,1159,2.954,1160,2.126,1161,2.126,1162,2.126,1163,2.126,1164,2.126,1165,2.126,1166,2.126,1167,2.126,1168,2.126,1169,2.126,1170,4.221,1171,1.845,1172,4.221,1173,1.845,1174,4.221,1175,1.845,1176,2.954,1177,1.845,1178,2.954,1179,1.845,1180,2.954,1181,1.845,1182,2.954,1183,1.845,1184,1.845,1185,1.845,1186,1.845,1187,1.845,1188,1.845,1189,1.845,1190,1.845,1191,1.845,1192,1.845,1193,1.845,1194,1.845,1195,1.845,1196,1.845,1197,1.845,1198,1.523,1199,1.845,1200,1.845,1201,2.954,1202,1.845,1203,1.845,1204,1.845,1205,1.845,1206,1.845,1207,1.845,1208,1.845,1209,1.845,1210,1.845,1211,2.954,1212,1.845,1213,2.954,1214,2.954,1215,2.954,1216,2.954,1217,2.954,1218,1.845,1219,2.954,1220,2.954,1221,1.845,1222,1.845]],["title/interfaces/NormalizedMessageJson.html",[50,0.303,1121,2.899]],["body/interfaces/NormalizedMessageJson.html",[2,0.015,3,0.118,48,0.189,50,0.217,52,3.43,57,0.55,62,2.467,63,0.892,70,0.939,79,0.005,80,0.005,95,0.537,104,3.473,110,1.69,112,0.821,115,1.797,118,2.544,151,2.882,152,0.939,183,1.722,233,3.168,247,1.769,315,4.607,359,3.561,378,3.093,384,2.26,516,2.449,738,3.55,996,1.922,1098,4.907,1099,2.072,1100,5.584,1101,5.786,1102,5.786,1103,5.932,1104,2.511,1105,2.511,1106,2.511,1107,2.511,1108,2.511,1114,2.511,1115,2.511,1116,2.511,1117,2.511,1118,2.511,1119,2.511,1120,2.511,1121,4.392,1129,3.374,1131,5.471,1133,3.374,1135,4.037,1138,4.975,1140,4.486,1141,2.511,1142,5.323,1144,4.975,1145,2.511,1146,4.975,1148,4.486,1149,2.511,1150,2.511,1152,2.511,1153,2.511,1154,2.511,1156,2.511,1157,2.511,1159,2.511,1170,4.975,1171,2.511,1172,4.975,1173,2.511,1174,4.975,1175,2.511,1176,3.749,1177,2.511,1178,3.749,1179,2.511,1180,3.749,1181,2.511,1182,3.749,1183,2.511,1184,2.511,1185,2.511,1186,2.511,1187,2.511,1188,2.511,1189,2.511,1190,2.511,1191,2.511,1192,2.511,1193,2.511,1194,2.511,1195,2.511,1196,2.511,1197,2.511,1198,2.072,1199,2.511,1200,2.511,1201,3.749,1202,2.511,1203,2.511,1204,2.511,1205,2.511,1206,2.511,1207,2.511,1208,2.511,1209,2.511,1210,2.511,1211,3.749,1212,2.511,1213,3.749,1214,3.749,1215,3.749,1216,3.749,1217,3.749,1218,2.511,1219,3.749,1220,3.749,1221,2.511,1222,2.511]],["title/injectables/NunjunksEngine.html",[0,1.479,480,2.365]],["body/injectables/NunjunksEngine.html",[0,2.013,2,0.015,3,0.166,43,0.324,45,2.705,48,0.149,57,0.774,60,1.487,62,2.25,63,0.789,79,0.007,80,0.007,99,2.971,112,0.774,152,1.788,187,1.615,188,1.134,264,2.329,350,3.534,415,2.983,476,1.615,480,3.219,481,2.529,489,2.705,744,3.422,745,2.916,776,3.414,785,2.916,812,3.909,820,4.787,1056,4.782,1085,4.303,1223,3.534,1224,7.205,1225,5.509,1226,4.071,1227,6.244,1228,4.071,1229,5.509,1230,5.509,1231,4.071,1232,5.509,1233,4.071,1234,5.509,1235,4.071,1236,4.071,1237,6.244,1238,4.071,1239,4.071,1240,4.071,1241,4.071,1242,4.071,1243,5.509,1244,3.534,1245,5.509,1246,4.071,1247,5.509,1248,4.071,1249,4.071,1250,4.071,1251,4.071,1252,4.071,1253,5.509,1254,4.071]],["title/interfaces/ParamsOptions.html",[50,0.303,973,2.69]],["body/interfaces/ParamsOptions.html",[2,0.015,3,0.111,36,1.885,43,0.25,48,0.284,50,0.374,53,1.148,54,1.508,55,1.508,56,1.508,63,0.836,79,0.005,80,0.005,83,1.982,95,0.744,104,1.962,112,0.831,113,1.566,118,2.02,120,0.791,132,2.736,135,1.645,152,0.888,183,2.072,187,1.643,188,1.153,194,0.888,247,1.845,254,1.51,264,0.791,267,2.187,268,2.49,325,1.959,365,1.237,366,1.431,368,1.699,384,3.608,399,1.88,410,1.183,503,2.572,697,4.184,805,4.746,835,1.959,837,1.296,871,2.614,874,2.572,927,1.598,958,1.817,959,1.699,960,3.235,961,2.966,962,2.137,963,2.137,964,2.137,965,5.492,966,2.137,967,2.137,968,1.959,969,1.817,970,4.685,971,2.137,972,4.287,973,2.751,974,5.58,975,5.58,976,2.572,977,3.977,978,2.966,979,2.966,980,3.235,981,3.719,982,3.235,983,4.353,984,2.137,985,2.137,986,2.137,987,2.137,988,1.817,989,3.235,990,3.235,991,5.58,992,3.579,993,2.137,994,1.817,995,3.235,996,1.817,997,2.137,998,2.137,999,2.137,1000,2.137,1001,2.137,1002,2.137,1003,3.991,1004,3.235,1005,2.137,1006,2.137,1007,3.235,1008,3.235,1009,2.137,1010,2.137,1011,2.137,1012,2.137,1013,2.137,1014,1.959,1015,2.137,1016,2.137,1017,1.817,1018,2.137,1019,2.137,1020,1.959,1021,2.137,1022,2.137]],["title/classes/RealConfigCollection.html",[57,0.769,253,2.365]],["body/classes/RealConfigCollection.html",[2,0.015,3,0.161,36,2.067,43,0.178,48,0.282,49,1.283,50,0.461,51,1.143,53,0.947,54,1.244,55,1.244,56,1.244,57,1.169,58,1.709,60,2.247,62,2.357,63,0.61,79,0.007,80,0.007,95,0.764,99,2.34,112,0.661,120,1.143,152,1.752,194,2.372,202,1.188,236,3.593,237,2.309,238,4.173,239,3.458,240,4.254,241,4.404,242,2.455,243,3.82,244,1.752,245,2.181,246,2.831,247,1.02,248,3.593,249,1.568,250,2.626,251,1.966,252,2.626,253,3.154,254,3.819,255,3.867,256,4.745,257,2.831,258,4.086,259,2.831,260,2.831,261,4.733,262,2.831,263,2.831,264,1.911,265,4.105,266,2.831,267,1.444,268,1.504,269,1.709,406,2.98,1255,3.952,1256,3.952,1257,3.952,1258,3.952]],["title/injectables/Render.html",[0,1.479,415,1.676]],["body/injectables/Render.html",[0,1.686,1,3.015,2,0.015,3,0.129,17,2.746,18,2.087,22,1.756,43,0.299,48,0.219,49,1.027,50,0.346,51,0.915,52,1.499,53,0.81,54,1.063,55,1.063,56,1.063,57,0.877,60,1.156,62,2.405,63,0.357,69,2.102,79,0.006,80,0.006,95,0.677,99,2.072,112,0.81,113,0.757,120,2.198,144,1.798,146,1.368,183,1.386,188,1.958,194,1.767,247,1.545,269,1.368,273,3.497,360,3.497,365,2.707,371,3.9,372,3.9,373,3.304,393,2.266,394,4.675,395,5.886,396,4.675,398,4.637,399,2.372,401,4.97,404,2.471,405,2.471,406,2.546,407,2.266,408,2.102,409,2.102,410,1.368,411,1.965,412,2.266,413,2.102,414,5.491,415,2.839,416,2.471,417,4.253,418,4.675,419,2.266,420,3.881,421,3.604,422,4.253,423,4.253,424,5.357,425,2.471,426,4.675,427,3.604,1259,3.163,1260,3.163,1261,3.163,1262,3.163,1263,3.163,1264,3.163,1265,3.163,1266,3.163,1267,3.163,1268,3.163]],["title/classes/RenderResult.html",[57,0.769,749,2.234]],["body/classes/RenderResult.html",[2,0.015,3,0.152,6,2.346,18,1.687,43,0.33,46,1.767,47,2.179,48,0.19,53,0.654,54,0.86,55,0.86,56,0.86,57,0.986,59,2.058,60,1.895,63,0.765,79,0.007,80,0.007,95,0.948,99,2.27,112,0.693,132,2.558,138,2.179,140,2.179,173,1.862,188,1.038,194,1.21,225,2.469,232,3.031,239,3.373,264,1.96,399,2.287,415,2.147,450,1.767,451,2.478,471,2.179,484,2.671,487,2.671,488,3.446,489,2.478,494,1.855,516,1.767,738,2.863,739,3.963,741,2.478,749,3.292,750,2.317,751,3.715,756,2.58,759,3.715,761,2.671,765,3.715,775,3.237,776,2.826,777,2.913,778,2.671,779,2.913,780,2.913,782,2.913,783,2.913,791,4.21,793,2.913,812,3.031,861,2.671,865,3.207,867,4.659,869,4.005,871,3.373,1068,4.503,1070,3.237,1085,4.052,1269,3.237,1270,5.187,1271,3.729,1272,3.729,1273,4.503,1274,5.187,1275,6.777,1276,3.729,1277,3.729,1278,3.729,1279,3.729,1280,3.729,1281,3.729,1282,3.729,1283,3.729,1284,3.729,1285,3.729,1286,3.729,1287,3.729,1288,3.729,1289,5.187,1290,5.187,1291,3.729,1292,3.729,1293,3.729,1294,3.729,1295,3.729]],["title/interfaces/RenderResultOptions.html",[50,0.303,750,2.515]],["body/interfaces/RenderResultOptions.html",[2,0.015,3,0.144,36,1.553,43,0.283,48,0.23,50,0.471,53,0.876,54,1.15,55,1.15,56,1.15,63,0.399,79,0.006,80,0.006,83,1.98,95,0.62,112,0.831,113,0.845,132,2.872,135,0.754,144,1.891,147,2.258,183,2.289,225,2.066,244,1.146,247,1.625,249,1.98,264,2.05,273,3.677,312,3.88,337,2.755,365,1.597,399,2.326,415,2.066,471,2.916,472,2.345,476,1.401,480,3.677,483,2.528,494,2.482,516,3.488,714,2.193,736,3.575,737,2.528,738,3.196,739,4.809,740,3.064,741,3.316,744,2.193,745,2.528,746,3.064,747,3.064,748,4.916,749,2.755,750,3.91,751,4.756,752,3.064,753,3.064,754,3.899,755,3.064,756,3.303,757,3.064,758,4.937,759,4.756,760,4.333,761,4.756,762,4.756,763,2.345,764,2.528,765,2.528,766,2.757,767,3.064,768,4.333,769,2.757,1296,3.53,1297,3.53]],["title/interfaces/Request.html",[50,0.303,531,2.899]],["body/interfaces/Request.html",[2,0.015,3,0.123,6,2.957,18,1.368,43,0.329,44,1.768,46,2.514,47,1.768,48,0.194,50,0.227,53,0.531,54,0.697,55,0.697,56,0.697,57,0.575,59,1.67,63,0.844,70,1.449,71,2.336,79,0.011,80,0.005,83,1.2,84,2.626,94,2.626,95,0.966,104,1.434,112,0.629,113,1.069,118,1.021,135,1.482,144,1.594,146,1.931,147,2.826,183,0.909,187,2.754,230,1.768,239,3.632,244,0.982,247,1.153,264,1.291,267,1.106,268,1.151,357,3.1,366,1.583,368,3.296,384,1.583,410,1.308,450,3.358,451,2.01,452,1.768,473,2.167,476,1.2,493,2.626,503,4.403,531,3.198,654,2.167,655,4.196,776,2.116,778,2.167,790,3.488,791,2.774,800,3.876,802,2.626,805,2.01,806,2.626,807,2.626,837,2.776,838,2.01,839,2.363,861,2.167,862,2.363,865,2.221,871,3.269,872,3.198,914,2.966,961,3.198,976,2.774,977,3.892,978,4.196,979,2.167,981,1.88,1003,3.801,1032,3.639,1298,2.363,1299,2.626,1300,2.626,1301,2.626,1302,3.026,1303,3.026,1304,3.488,1305,3.026,1306,3.026,1307,3.026,1308,3.026,1309,5.306,1310,3.026,1311,3.026,1312,3.026,1313,4.465,1314,3.026,1315,3.026,1316,3.026,1317,3.026,1318,3.026,1319,3.026,1320,5.306,1321,3.026,1322,3.026,1323,6.763,1324,3.026,1325,3.876,1326,3.026,1327,3.026,1328,3.026,1329,3.026,1330,3.026,1331,3.026,1332,3.026,1333,3.026,1334,3.026,1335,3.026,1336,3.026,1337,3.026,1338,3.026,1339,5.306,1340,5.859,1341,5.085,1342,3.026,1343,3.026,1344,4.465,1345,4.465,1346,4.465,1347,3.026,1348,2.626,1349,3.026,1350,2.626,1351,3.026,1352,3.026,1353,3.026,1354,2.626,1355,4.465,1356,3.026]],["title/interfaces/RouteArgument.html",[50,0.303,976,2.515]],["body/interfaces/RouteArgument.html",[2,0.015,3,0.108,36,1.868,43,0.246,48,0.283,50,0.366,53,1.134,54,1.49,55,1.49,56,1.49,63,0.83,79,0.005,80,0.005,83,1.941,95,0.733,104,2.793,112,0.827,113,1.547,118,2.181,120,0.764,132,2.709,135,1.637,152,0.857,183,2.229,187,1.6,188,1.123,194,0.857,247,1.898,254,1.458,264,0.764,267,2.154,268,2.46,325,1.892,365,1.195,366,1.382,368,1.641,384,3.759,399,1.847,410,1.143,503,3.662,697,4.128,805,4.707,835,1.892,837,1.252,871,3.084,874,2.505,927,1.544,958,1.755,959,1.641,960,3.15,961,2.889,962,2.064,963,2.064,964,2.064,965,5.442,966,2.064,967,2.064,968,1.892,969,1.755,970,4.629,971,2.064,972,4.222,973,1.755,974,5.206,975,5.206,976,3.039,977,4.294,978,4.222,979,2.889,980,3.15,981,3.662,982,3.15,983,4.276,984,2.064,985,2.064,986,2.064,987,2.064,988,1.755,989,3.15,990,3.15,991,5.534,992,3.503,993,2.064,994,1.755,995,3.15,996,1.755,997,2.064,998,2.064,999,2.064,1000,2.064,1001,2.064,1002,2.064,1003,3.92,1004,3.15,1005,2.064,1006,2.064,1007,3.15,1008,3.15,1009,2.064,1010,2.064,1011,2.064,1012,2.064,1013,2.064,1014,1.892,1015,2.064,1016,2.064,1017,1.755,1018,2.064,1019,2.064,1020,1.892,1021,2.064,1022,2.064]],["title/interfaces/RouterConfig.html",[50,0.303,184,1.606]],["body/interfaces/RouterConfig.html",[2,0.015,3,0.221,10,2.033,43,0.244,48,0.288,49,1.76,50,0.536,63,0.748,79,0.01,80,0.01,135,1.415,170,3.095,173,2.327,176,1.982,182,2.064,184,3.033,202,2.15,206,2.57,207,2.57,221,3.884,222,3.872,223,3.872,224,4.631,225,2.962,226,4.237,227,3.467,228,3.369,229,3.369,230,3.169,231,3.603,232,3.169]],["title/interfaces/RouterConfig-1.html",[50,0.255,184,1.348,233,1.537]],["body/interfaces/RouterConfig-1.html",[2,0.015,3,0.156,10,1.365,22,2.013,43,0.172,48,0.265,50,0.513,53,0.673,63,0.597,70,1.964,71,3.702,79,0.007,80,0.007,95,0.811,112,0.854,113,1.885,118,1.294,120,1.53,135,1.129,144,1.961,170,3.136,171,2.382,172,3.167,173,2.137,174,3.341,175,3.341,176,2.384,177,3.341,178,3.136,179,3.537,180,4.022,181,4.396,182,2.304,183,1.589,184,2.402,185,2.548,186,1.907,187,1.521,188,1.068,189,2.241,190,1.907,191,2.117,192,2.241,193,2.241,194,1.244,195,2.951,196,2.951,197,2.951,198,2.951,199,3.011,200,3.414,201,2.241,202,1.152,203,2.548,204,2.548,205,2.548,206,1.817,207,1.817,208,5.093,209,3.513,210,3.513,211,3.513,212,2.548,213,2.548,214,4.022,215,4.022,216,2.548,217,2.548,218,2.548,219,2.548,220,2.548]],["title/interfaces/RouterConfig-2.html",[50,0.255,184,1.348,346,1.986]],["body/interfaces/RouterConfig-2.html",[2,0.015,3,0.227,10,2.021,43,0.25,48,0.286,49,1.807,50,0.542,63,0.761,79,0.01,80,0.01,135,1.438,170,2.912,173,2.26,176,2.035,182,2.119,184,2.984,202,2.175,206,2.639,207,2.639,222,3.253,223,3.253,224,4.497,225,2.788,227,2.913,228,3.459,229,3.459,234,3.988,235,3.073]],["title/interfaces/RouterOptions.html",[50,0.303,1062,2.899]],["body/interfaces/RouterOptions.html",[2,0.015,3,0.208,43,0.23,48,0.267,50,0.478,70,2.261,79,0.009,80,0.009,95,0.794,112,0.807,113,1.835,144,1.918,195,3.398,196,3.398,197,3.398,198,3.398,199,3.63,202,1.534,249,2.026,468,3.73,469,3.393,470,3.172,476,2.026,831,5.542,832,4.573,833,4.433,847,4.987,848,3.989,879,4.573,881,4.573,1061,3.658,1062,4.989,1063,3.989,1064,3.658,1065,3.989]],["title/injectables/Scope.html",[0,1.479,433,2.118]],["body/injectables/Scope.html",[0,2.105,2,0.015,3,0.177,43,0.259,45,2.891,48,0.236,49,1.412,50,0.326,51,1.259,52,2.062,57,0.827,60,1.59,62,2.146,63,0.807,79,0.008,80,0.008,99,3.002,118,1.944,120,1.666,144,1.731,146,1.882,151,1.882,152,1.869,244,1.412,354,5.164,360,4.498,420,3.366,429,3.4,430,5.738,431,6.205,433,3.378,434,3.778,435,5.605,436,5.605,437,6.376,438,5.605,439,5,440,5,441,5,442,5.966,443,5.605,444,5.966,445,5.605,446,3.778,447,3.778,1357,4.352,1358,4.352,1359,4.352,1360,4.352,1361,4.352,1362,4.352,1363,4.352,1364,4.352,1365,4.352,1366,4.352]],["title/classes/TypedSerializerCreator.html",[57,0.769,1367,2.899]],["body/classes/TypedSerializerCreator.html",[2,0.015,3,0.166,36,2.094,43,0.281,48,0.202,53,0.716,54,0.94,55,0.94,56,0.94,57,1.048,60,2.015,62,2.438,63,0.756,79,0.007,80,0.007,110,3.651,112,0.751,122,3.222,144,1.657,147,3.334,151,1.763,183,1.657,188,2.139,244,1.323,247,1.983,359,2.533,398,4.159,399,2.432,862,3.185,863,3.539,864,3.185,1029,2.709,1031,3.426,1032,4.159,1036,4.307,1037,4.881,1038,4.307,1039,4.787,1040,4.787,1043,3.539,1045,3.539,1089,3.539,1367,4.475,1368,5.463,1369,3.539,1370,4.077,1371,4.077,1372,4.077,1373,4.077,1374,4.077,1375,3.185,1376,5.514,1377,5.514,1378,4.077,1379,4.077,1380,4.077,1381,4.077,1382,4.077]],["title/changelog.html",[1383,2.655,1384,2.655,1385,2.95]],["body/changelog.html",[0,1.89,1,2.82,2,0.015,6,1.68,8,2.307,10,1.662,18,2.339,49,1.205,51,1.074,57,0.706,70,1.678,79,0.007,80,0.007,83,2.052,176,1.89,178,2.237,199,1.847,200,1.943,227,2.706,244,1.678,264,1.074,362,4.496,415,2.141,420,2.17,450,1.76,464,2.467,494,1.847,609,2.66,714,2.307,726,4.276,749,3.285,756,1.847,758,3.704,837,2.451,914,3.436,981,2.307,1053,2.901,1064,2.66,1066,2.307,1385,3.224,1386,5.951,1387,5.172,1388,3.714,1389,3.224,1390,3.714,1391,3.714,1392,5.587,1393,7.447,1394,7.447,1395,5.172,1396,6.436,1397,5.172,1398,3.224,1399,3.224,1400,5.951,1401,3.714,1402,3.714,1403,5.951,1404,5.172,1405,5.172,1406,7.447,1407,3.714,1408,5.172,1409,3.714,1410,3.714,1411,3.714,1412,5.172,1413,7.688,1414,3.714,1415,3.714,1416,6.082,1417,3.714,1418,3.714,1419,3.714,1420,3.714,1421,6.767,1422,3.714,1423,3.714,1424,5.172,1425,5.172,1426,3.224,1427,3.714,1428,6.082,1429,3.714,1430,3.714,1431,3.714,1432,3.714,1433,3.714]],["title/coverage.html",[1434,5.488]],["body/coverage.html",[0,2.131,1,0.785,2,0.015,4,2.166,10,0.716,46,0.785,50,0.589,51,1.457,57,1.066,79,0.003,80,0.003,81,1.293,82,2.166,96,1.293,97,1.186,98,2.794,123,1.186,135,1.745,151,3.587,152,0.537,170,0.716,171,3.323,173,1.117,177,0.914,178,0.716,182,1.055,184,1.419,186,0.823,188,0.772,201,0.967,221,3.335,222,0.967,223,0.967,231,1.842,232,1.62,234,3.335,236,0.967,237,2.943,240,0.914,249,0.657,251,0.823,253,0.967,270,1.293,271,3.631,276,1.437,297,1.437,347,1.437,353,5.227,370,4.644,393,2.562,409,1.1,411,1.029,413,1.1,415,0.685,429,2.166,433,0.866,448,1.293,449,2.996,450,0.785,455,1.1,456,1.437,463,1.186,464,1.1,465,1.186,466,1.186,467,1.1,468,0.967,469,1.1,470,1.029,471,0.967,472,1.1,473,1.186,474,1.186,475,1.186,477,1.186,480,0.967,481,1.029,482,1.186,484,1.186,485,1.1,486,1.186,490,1.186,494,0.823,531,1.186,572,1.293,609,1.186,694,1.293,695,1.437,709,1.293,710,2.166,732,2.794,736,1.186,737,3.335,744,1.029,749,0.914,750,1.029,764,1.186,770,1.186,771,2.794,798,1.293,799,4.043,809,1.293,810,2.166,811,1.437,816,1.437,820,1.1,821,2.794,829,1.293,830,3.631,838,1.1,839,1.293,842,1.293,865,0.823,866,1.986,869,1.029,874,1.029,875,4.87,896,1.437,910,1.437,914,1.1,920,1.437,944,1.293,945,2.166,958,1.1,959,4.383,968,1.186,969,1.1,973,1.1,976,1.029,988,2.376,992,1.186,994,2.376,1014,1.186,1017,1.1,1020,1.186,1023,1.186,1024,3.608,1025,2.794,1029,1.1,1030,2.166,1032,1.029,1047,1.293,1048,2.794,1055,1.437,1061,2.996,1062,1.186,1066,1.029,1067,3.638,1074,1.186,1077,1.1,1096,1.293,1097,2.794,1098,1.186,1099,1.986,1121,1.186,1223,1.437,1269,1.437,1298,4.555,1299,1.437,1300,1.437,1301,1.437,1304,1.293,1325,1.437,1348,1.437,1350,1.437,1354,1.437,1367,1.186,1368,4.945,1369,1.437,1426,1.437,1435,6.673,1436,8.22,1437,1.656,1438,1.656,1439,1.656,1440,2.772,1441,3.577,1442,3.577,1443,2.772,1444,1.656,1445,1.656,1446,3.105,1447,1.656,1448,7.679,1449,3.577,1450,1.656,1451,1.656,1452,1.437,1453,3.105,1454,1.437,1455,1.656,1456,1.656,1457,1.656,1458,1.656,1459,1.656,1460,1.656,1461,5.35,1462,1.656,1463,2.772,1464,2.772,1465,7.512,1466,7.383,1467,1.656,1468,1.656,1469,1.656,1470,1.656,1471,1.656,1472,1.656,1473,3.577,1474,3.577,1475,2.772,1476,2.772,1477,3.631,1478,1.656,1479,1.656,1480,1.656,1481,1.293,1482,1.656,1483,1.656,1484,1.656,1485,1.437,1486,1.437,1487,3.577,1488,1.656,1489,1.656,1490,1.656,1491,1.656,1492,1.656,1493,6.022,1494,4.657,1495,4.657,1496,1.437,1497,1.656,1498,1.437,1499,1.656,1500,1.656,1501,1.656,1502,1.656,1503,1.656,1504,1.656,1505,1.656,1506,1.656,1507,1.656,1508,1.656,1509,1.656,1510,1.656,1511,1.656,1512,1.656,1513,1.656,1514,1.656,1515,5.284,1516,1.656,1517,1.656,1518,1.656,1519,1.656,1520,1.656,1521,1.656,1522,1.656,1523,1.437,1524,3.577,1525,3.577,1526,1.656,1527,1.656]],["title/dependencies.html",[294,4.218,1399,2.95]],["body/dependencies.html",[2,0.015,79,0.01,80,0.01,83,2.692,133,4.404,178,2.438,244,1.83,837,3.215,877,4.894,1074,4.038,1076,4.894,1244,4.894,1375,4.404,1389,4.894,1392,4.894,1398,4.894,1528,6.785,1529,5.638,1530,5.638,1531,5.638,1532,5.638,1533,5.638,1534,5.638,1535,5.638,1536,6.785,1537,5.638,1538,5.638,1539,5.638,1540,5.638,1541,5.638,1542,5.638,1543,5.638,1544,5.638,1545,5.638,1546,5.638,1547,5.638,1548,5.638,1549,5.638,1550,5.638,1551,5.638,1552,5.638]],["title/miscellaneous/enumerations.html",[1553,2.655,1554,4.859]],["body/miscellaneous/enumerations.html",[2,0.015,79,0.011,80,0.011,151,2.6,172,3.146,233,2.72,346,3.513,352,4.697,392,3.995,428,4.697,516,2.849,1024,4.307,1027,6.119,1555,6.013,1556,6.013,1557,6.013,1558,6.013,1559,6.013,1560,6.013]],["title/index.html",[384,1.778,1383,2.655,1384,2.655]],["body/index.html",[0,1.687,1,1.78,2,0.015,5,3.812,6,1.699,8,1.497,10,1.346,18,1.09,42,1.33,43,0.305,46,1.142,48,0.219,50,0.346,51,0.697,57,0.877,62,1.628,63,0.521,70,0.782,71,1.261,79,0.004,80,0.004,83,2.746,95,0.826,99,1.757,112,0.607,118,1.558,132,2.242,141,1.882,144,1.129,146,2.797,147,1.09,152,1.498,172,1.261,173,1.173,174,2.548,175,1.33,176,1.905,177,1.33,178,1.996,179,1.408,181,1.497,187,2.566,190,1.198,195,1.699,196,1.699,197,1.699,198,1.699,200,1.261,232,1.408,233,2.088,235,3.305,239,1.261,244,0.782,245,1.33,247,1.614,251,1.198,264,1.732,291,2.69,300,1.882,312,1.408,330,1.726,337,2.073,346,2.195,352,2.934,362,3.067,363,2.334,392,1.601,408,1.601,420,1.408,430,4.884,450,1.142,494,1.868,521,3.606,527,2.092,561,2.092,572,1.882,606,2.69,622,1.882,639,2.092,697,1.601,714,2.334,716,1.726,722,1.882,726,3.067,729,2.934,776,1.142,788,1.726,791,1.497,832,2.69,837,3.065,842,1.882,864,1.882,865,1.198,871,2.415,914,1.601,952,1.882,977,3.978,981,1.497,988,2.496,994,2.496,1017,2.496,1066,2.868,1086,3.261,1198,1.726,1273,3.261,1341,2.092,1416,2.092,1428,2.092,1481,2.934,1561,2.41,1562,2.41,1563,2.41,1564,2.41,1565,4.616,1566,2.41,1567,2.41,1568,2.41,1569,2.41,1570,2.41,1571,2.41,1572,2.41,1573,2.41,1574,2.41,1575,2.41,1576,2.41,1577,2.41,1578,2.41,1579,2.41,1580,2.41,1581,2.41,1582,2.41,1583,2.41,1584,2.41,1585,2.41,1586,2.41,1587,2.41,1588,2.41,1589,5.213,1590,2.41,1591,2.41,1592,2.41,1593,3.756,1594,4.616,1595,3.756,1596,3.756,1597,3.756,1598,2.41,1599,2.41,1600,5.213,1601,2.41,1602,4.616,1603,2.41,1604,2.41,1605,4.616,1606,3.756,1607,2.41,1608,3.756,1609,2.41,1610,2.41,1611,2.41,1612,2.41,1613,2.41,1614,2.41,1615,2.41,1616,2.41,1617,2.41,1618,2.41,1619,2.41,1620,3.756,1621,2.41,1622,3.756,1623,2.41,1624,2.41,1625,2.41,1626,2.41,1627,2.41,1628,2.41,1629,2.41,1630,2.41,1631,2.41,1632,2.41,1633,2.41,1634,2.41,1635,2.41,1636,2.41,1637,2.41,1638,2.41,1639,2.41,1640,2.41,1641,2.41,1642,2.41,1643,3.756,1644,3.756,1645,2.41,1646,2.41,1647,2.41,1648,2.41,1649,2.41,1650,2.41,1651,2.41,1652,2.41,1653,2.41,1654,2.41,1655,2.41,1656,2.41,1657,2.41,1658,2.41,1659,2.41,1660,2.41,1661,2.092,1662,1.882,1663,4.007,1664,2.092,1665,2.092,1666,2.41,1667,3.261,1668,2.092,1669,2.092,1670,2.092,1671,2.092,1672,2.092,1673,2.092,1674,3.261,1675,5.768,1676,2.092,1677,2.092,1678,2.092,1679,2.092,1680,3.261,1681,2.092,1682,2.092,1683,2.092,1684,2.092,1685,2.092,1686,2.092,1687,2.092,1688,2.092,1689,3.261,1690,2.092,1691,2.092,1692,2.092,1693,2.092,1694,2.092,1695,2.092,1696,3.261,1697,3.261,1698,2.092,1699,2.092,1700,2.092,1701,2.092,1702,2.092,1703,2.092,1704,2.092,1705,2.092,1706,2.092,1707,2.092,1708,2.092,1709,2.092,1710,2.092,1711,2.092,1712,2.092,1713,2.092,1714,2.092,1715,2.092,1716,2.092,1717,2.092,1718,2.092,1719,2.092,1720,2.092,1721,2.092,1722,2.092,1723,2.092,1724,2.092,1725,2.092]],["title/license.html",[1383,2.655,1384,2.655,1662,2.655]],["body/license.html",[2,0.013,42,2.929,51,1.535,79,0.01,80,0.01,190,2.639,232,3.101,300,4.145,337,3.609,521,5.536,788,3.801,1198,3.801,1661,4.607,1662,4.145,1663,6.152,1664,4.607,1665,4.607,1667,5.676,1668,4.607,1669,4.607,1670,4.607,1671,4.607,1672,4.607,1673,4.607,1674,5.676,1675,6.927,1676,4.607,1677,4.607,1678,4.607,1679,4.607,1680,5.676,1681,4.607,1682,4.607,1683,4.607,1684,4.607,1685,4.607,1686,4.607,1687,4.607,1688,4.607,1689,5.676,1690,4.607,1691,4.607,1692,4.607,1693,4.607,1694,4.607,1695,4.607,1696,5.676,1697,5.676,1698,4.607,1699,4.607,1700,4.607,1701,4.607,1702,4.607,1703,4.607,1704,4.607,1705,4.607,1706,4.607,1707,4.607,1708,4.607,1709,4.607,1710,4.607,1711,4.607,1712,4.607,1713,4.607,1714,4.607,1715,4.607,1716,4.607,1717,4.607,1718,4.607,1719,4.607,1720,4.607,1721,4.607,1722,4.607,1723,4.607,1724,4.607,1725,4.607]],["title/modules.html",[1726,5.488]],["body/modules.html",[2,0.014,79,0.012,80,0.012]],["title/overview.html",[1727,5.488]],["body/overview.html",[2,0.015,79,0.011,80,0.011,428,4.973,1498,5.526,1728,6.367]],["title/miscellaneous/typealiases.html",[1553,2.655,1729,4.859]],["body/miscellaneous/typealiases.html",[2,0.015,36,1.478,79,0.01,80,0.01,112,0.592,120,1.594,135,1.601,237,3.22,248,3.91,449,3.948,457,6.256,458,5.228,492,5.809,516,2.612,684,5.228,685,5.228,776,3.415,810,4.305,812,3.22,813,5.809,865,2.741,866,3.948,872,4.793,873,5.228,959,3.424,970,4.793,972,4.793,1099,3.948,1103,5.228,1129,4.305,1131,5.228,1133,4.305,1135,4.305,1515,4.305,1730,7.207,1731,5.809,1732,6.256,1733,6.692,1734,5.809,1735,5.512,1736,4.785]],["title/miscellaneous/variables.html",[1553,2.655,1737,4.859]],["body/miscellaneous/variables.html",[2,0.015,5,2.179,6,1.5,10,1.233,22,0.784,36,0.889,42,2.299,46,0.976,53,0.582,58,0.891,63,0.539,70,1.076,79,0.006,80,0.004,82,1.609,83,0.817,95,0.806,96,2.591,112,0.513,132,2.219,138,1.938,140,1.938,144,1.767,145,1.28,146,1.801,152,1.815,172,2.739,173,1.91,174,2.299,175,2.889,176,1.913,177,1.831,178,2.419,182,0.784,183,2.091,186,1.65,187,1.316,188,1.638,190,1.65,191,1.831,192,1.938,193,1.938,194,1.549,195,1.5,196,2.16,197,2.16,198,2.368,199,1.024,200,1.078,225,1.977,227,1.078,237,1.203,248,1.938,249,2.334,250,1.368,251,1.65,252,1.368,254,1.831,264,1.381,291,2.376,312,2.433,337,1.831,346,1.203,362,1.368,363,1.28,366,1.736,399,0.695,406,2.635,411,2.061,415,1.977,433,1.078,449,1.475,450,2.787,455,2.204,458,1.609,462,1.788,463,2.376,464,2.204,465,2.376,466,2.376,467,2.767,468,1.203,469,2.204,470,2.061,471,2.433,472,2.204,473,2.983,474,2.376,475,2.376,477,2.376,480,1.203,481,2.587,482,2.376,485,2.767,486,2.376,488,2.767,494,1.65,513,1.788,516,2.993,559,1.788,566,1.788,569,1.788,603,2.983,604,1.609,606,1.475,609,4.382,653,1.609,684,3.73,685,1.609,686,1.788,687,1.788,688,1.788,689,1.788,690,1.788,691,1.788,692,1.788,693,1.788,694,2.591,710,1.609,711,3.615,712,2.591,714,4.195,715,2.591,716,2.376,717,2.591,718,1.788,719,3.615,720,1.788,721,1.788,722,2.591,723,1.788,724,5.855,725,2.591,726,4.68,727,1.788,728,1.788,729,1.609,732,1.609,735,1.788,737,1.475,738,2.299,739,3.172,741,2.204,748,3.253,749,1.137,750,1.28,751,1.475,754,1.609,756,2.071,758,2.376,759,1.475,761,1.475,762,2.983,763,2.767,764,1.475,765,1.475,766,1.609,769,1.609,770,1.475,771,1.609,772,2.879,776,1.572,777,1.609,778,1.475,779,1.609,780,1.609,781,1.788,782,1.609,783,1.609,784,2.879,785,2.983,786,2.879,787,1.788,788,1.475,789,1.788,790,2.591,791,2.587,792,1.788,793,1.609,794,1.788,795,1.788,796,1.788,797,1.788,812,1.203,820,1.368,821,1.609,822,1.788,823,1.609,824,1.788,825,1.788,826,1.788,827,1.788,828,1.788,837,2.48,838,2.204,850,1.475,879,1.475,881,1.475,927,1.203,945,1.609,946,1.788,947,1.788,948,1.788,949,1.788,950,1.788,951,1.788,952,1.609,953,1.788,954,1.788,955,1.788,956,1.788,957,1.788,959,1.28,969,2.204,1023,1.475,1024,1.475,1025,1.609,1026,1.788,1028,1.788,1031,1.28,1048,1.609,1053,1.609,1054,1.788,1061,1.475,1063,1.609,1064,1.475,1065,1.609,1067,1.609,1074,2.376,1077,1.368,1078,1.609,1080,1.609,1081,1.609,1082,1.609,1096,2.591,1097,1.609,1298,1.609,1304,3.253,1367,1.475,1368,1.609,1375,1.609,1446,1.788,1452,1.788,1453,1.788,1454,2.879,1477,1.788,1481,2.591,1485,1.788,1486,2.879,1496,1.788,1515,1.609,1523,2.879,1731,3.615,1732,2.879,1734,1.788,1736,2.879,1738,3.317,1739,2.06,1740,3.317,1741,3.317,1742,3.317,1743,3.317,1744,5.594,1745,3.317,1746,3.317,1747,2.06,1748,2.06,1749,2.06,1750,3.317,1751,2.06,1752,4.165,1753,2.06,1754,2.06,1755,2.06,1756,2.06,1757,2.06,1758,2.06,1759,2.06,1760,2.06,1761,2.06,1762,2.06,1763,2.06,1764,2.06,1765,2.06,1766,2.06,1767,2.06,1768,2.06,1769,3.317,1770,2.06,1771,2.06,1772,2.06,1773,2.06,1774,2.06,1775,2.06,1776,2.06,1777,2.06,1778,2.06]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":151,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/IRouter.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.37",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1591,"title":{},"body":{"index.html":{}}}],["0.1.18",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["0.cli",{"_index":1598,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":233,"title":{"interfaces/Config-1.html":{},"interfaces/Contract-1.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/RouterConfig-1.html":{}},"body":{"interfaces/IRouter.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.1",{"_index":1428,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.0.11",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["1.0.5",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["1.0.7",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["1.0.8",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["1.0.9",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["1.02",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["1.18.8",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1389,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.9.3",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":160,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["10.12.10",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["10ms",{"_index":164,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["12",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["12345",{"_index":1647,"title":{},"body":{"index.html":{}}}],["16",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":346,"title":{"interfaces/Contract-2.html":{},"interfaces/RouterConfig-2.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0.47",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["2.0的routers，默认：`false",{"_index":847,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{}}}],["2.0的routers，默认：false",{"_index":831,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/RouterOptions.html":{}}}],["2.19.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1664,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["26/55",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":352,"title":{"interfaces/Contract-3.html":{}},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["3.1.6",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":392,"title":{"interfaces/Contract-4.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["4.1.0",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":428,"title":{"interfaces/Contract-5.html":{}},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["50",{"_index":1498,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["500",{"_index":1288,"title":{},"body":{"classes/RenderResult.html":{}}}],["6/6",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["7.0.35",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1728,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["8201",{"_index":719,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["98765",{"_index":1634,"title":{},"body":{"index.html":{}}}],["_",{"_index":763,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/JsonResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["__base_route_deco_factory",{"_index":1426,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["__base_route_deco_factory(configs",{"_index":1009,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["__route_custom",{"_index":1010,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["__transpile",{"_index":204,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["__tsconfig",{"_index":203,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["_ctx",{"_index":351,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["_init",{"_index":435,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["_innerbundle",{"_index":694,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_innerbundle[\"@options\"].foreach(args",{"_index":617,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_innerbundle[\"@scopeds\"].foreach(args",{"_index":613,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_innerbundle[\"@singletons\"].foreach(args",{"_index":611,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_innerbundle[\"@uniques\"].foreach(args",{"_index":615,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_path",{"_index":921,"title":{},"body":{"interfaces/IRouter.html":{}}}],["_views",{"_index":417,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["above",{"_index":1695,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":265,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"classes/RealConfigCollection.html":{}}}],["abstracttype",{"_index":460,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["action",{"_index":190,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":713,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{}}}],["add",{"_index":1576,"title":{},"body":{"index.html":{}}}],["add(v",{"_index":1635,"title":{},"body":{"index.html":{}}}],["addmagicforroute",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["addmagicforroute(\"delete",{"_index":1022,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"get",{"_index":1013,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"post",{"_index":1019,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"put",{"_index":1016,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(method",{"_index":1001,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["always",{"_index":196,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1687,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":3,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{}}}],["api/post/:type?id=xxxx&name=xxxx",{"_index":1617,"title":{},"body":{"index.html":{}}}],["api/test/testget/:type?id=xxxx&name=xxxx",{"_index":1609,"title":{},"body":{"index.html":{}}}],["apifactory",{"_index":962,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["apifactory(method",{"_index":1005,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["app",{"_index":8,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"changelog.html":{},"index.html":{}}}],["app.configs",{"_index":594,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["app.env",{"_index":602,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["app.ts",{"_index":1577,"title":{},"body":{"index.html":{}}}],["app/app.ts",{"_index":1628,"title":{},"body":{"index.html":{}}}],["app/controllers",{"_index":1063,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["app/controllers/test.ts",{"_index":1604,"title":{},"body":{"index.html":{}}}],["app/middleware/server",{"_index":1586,"title":{},"body":{"index.html":{}}}],["app/middlewares/demo.ts",{"_index":1652,"title":{},"body":{"index.html":{}}}],["app/routers",{"_index":1064,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app/routers/test.ts",{"_index":1621,"title":{},"body":{"index.html":{}}}],["app/services/test.ts",{"_index":1632,"title":{},"body":{"index.html":{}}}],["app/tsconfig.json",{"_index":729,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app/views",{"_index":828,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["appbuilder",{"_index":498,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["appconfigs",{"_index":499,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["application/json",{"_index":1614,"title":{},"body":{"index.html":{}}}],["approot",{"_index":197,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["args",{"_index":22,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/InnerCmdConfig.html":{},"injectables/Render.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["args.path",{"_index":784,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["args.tplstr",{"_index":786,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["args[0",{"_index":658,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["args[1",{"_index":657,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["arising",{"_index":1722,"title":{},"body":{"index.html":{},"license.html":{}}}],["array",{"_index":189,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["array.from(this.map.entries()).map(([sb",{"_index":262,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["associated",{"_index":1676,"title":{},"body":{"index.html":{},"license.html":{}}}],["astconf",{"_index":751,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["astconf.configs",{"_index":1279,"title":{},"body":{"classes/RenderResult.html":{}}}],["astconf.state",{"_index":1278,"title":{},"body":{"classes/RenderResult.html":{}}}],["astconf.use",{"_index":1276,"title":{},"body":{"classes/RenderResult.html":{}}}],["astroboy",{"_index":83,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Contract-2.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["astroboy)(this.appconfigs",{"_index":640,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["astroboy.ts",{"_index":5,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["astroboy.tsyarn",{"_index":1575,"title":{},"body":{"index.html":{}}}],["astroboycontext",{"_index":1,"title":{"injectables/AstroboyContext.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["astroboycontext.contract",{"_index":61,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["astroboy渲染时的`config`字段，默认：`undefined",{"_index":752,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["astroboy渲染时的`state`字段，默认：`undefined",{"_index":753,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["astroboy的配置的view",{"_index":1049,"title":{},"body":{"interfaces/IView.html":{}}}],["astrpboy.ts",{"_index":1596,"title":{},"body":{"index.html":{}}}],["astt",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":776,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["atc",{"_index":726,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atc.config.js",{"_index":716,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atccli",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["atcconfig",{"_index":715,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":54,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["authors",{"_index":1713,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":947,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["autoescape",{"_index":822,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":791,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1079,"title":{},"body":{"classes/JsonResult.html":{}}}],["base",{"_index":235,"title":{},"body":{"interfaces/Config-1.html":{},"interfaces/Env-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/RouterConfig-2.html":{},"index.html":{}}}],["baseclass",{"_index":81,"title":{"classes/BaseClass.html":{}},"body":{"classes/BaseClass.html":{},"coverage.html":{}}}],["baseclass.app",{"_index":39,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["baseclass.config",{"_index":41,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["baseclass.ctx",{"_index":35,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["based",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baserouter",{"_index":898,"title":{},"body":{"interfaces/IRouter.html":{}}}],["bc",{"_index":96,"title":{},"body":{"classes/BaseClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":442,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["big",{"_index":55,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["bigmogician@outlook.com",{"_index":1666,"title":{},"body":{"index.html":{}}}],["blue",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":871,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["bonbons/di",{"_index":244,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["bonbonsserver",{"_index":511,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["bonbonsserver.use",{"_index":520,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["boolean",{"_index":113,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-4.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{}}}],["break",{"_index":659,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["breaking",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":948,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["builders",{"_index":491,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["building",{"_index":955,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["buildrouter",{"_index":842,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{},"index.html":{}}}],["buildrouter(test",{"_index":1625,"title":{},"body":{"index.html":{}}}],["bunddle",{"_index":814,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["bundles",{"_index":609,"title":{},"body":{"interfaces/FactoryContext.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@options\"].push(args",{"_index":690,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@scopeds\"].push(args",{"_index":691,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@singletons\"].push(args",{"_index":692,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@uniques\"].push(args",{"_index":693,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":42,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":823,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"interfaces/IView.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":519,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["callservice",{"_index":11,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["callservice(...args",{"_index":20,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{}}}],["callservice(service",{"_index":696,"title":{},"body":{"interfaces/IContext.html":{}}}],["camel",{"_index":1073,"title":{},"body":{"classes/JsonResult.html":{}}}],["camel(key",{"_index":1093,"title":{},"body":{"classes/JsonResult.html":{}}}],["camelcase",{"_index":1074,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["camelcase(key",{"_index":1092,"title":{},"body":{"classes/JsonResult.html":{}}}],["cancellationfilename",{"_index":100,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["cancellationtoken",{"_index":97,"title":{"classes/CancellationToken.html":{}},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["cancellationtokendata",{"_index":123,"title":{"interfaces/CancellationTokenData.html":{}},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["careful",{"_index":554,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["case",{"_index":655,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{}}}],["catch",{"_index":140,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["cater",{"_index":1199,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["ccccc",{"_index":1642,"title":{},"body":{"index.html":{}}}],["cerialize",{"_index":1375,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cfg",{"_index":1229,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["chalk",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["change",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":552,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["changelog",{"_index":1385,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changereturn",{"_index":458,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1100,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["charge",{"_index":1671,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":161,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{}}}],["checkcustomerror",{"_index":764,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkcustomerror(error",{"_index":767,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["checkifonlydeclares",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["checkifonlydeclares(p",{"_index":912,"title":{},"body":{"interfaces/IRouter.html":{}}}],["checkifonlydeclares(path",{"_index":909,"title":{},"body":{"interfaces/IRouter.html":{}}}],["checkrouterfolders",{"_index":896,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["claim",{"_index":1716,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":57,"title":{"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"classes/TypedSerializerCreator.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["cleanupcancellation",{"_index":103,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["cli",{"_index":1416,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cli监控的文件修改列表，自动重启node",{"_index":1601,"title":{},"body":{"index.html":{}}}],["cmd",{"_index":227,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cmd.ts",{"_index":221,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{}}}],["cmdconfig",{"_index":170,"title":{"interfaces/CmdConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["code",{"_index":1101,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["colors",{"_index":1523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commander",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["commandplugin",{"_index":186,"title":{"interfaces/CommandPlugin.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonname",{"_index":915,"title":{},"body":{"interfaces/IRouter.html":{}}}],["compare",{"_index":1108,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compare(messagea",{"_index":1137,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparenumbers",{"_index":1109,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparenumbers(numbera",{"_index":1141,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compareoptionalstrings",{"_index":1110,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["compareoptionalstrings(stringa",{"_index":1145,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compareseverities",{"_index":1111,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["compareseverities(severitya",{"_index":1149,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["comparetypes",{"_index":1112,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparetypes(typea",{"_index":1153,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compileroptions",{"_index":278,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["conditions",{"_index":1694,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":10,"title":{"interfaces/Config.html":{},"interfaces/Config-1.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.debug",{"_index":217,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.ignore",{"_index":215,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.inspect",{"_index":213,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.mock",{"_index":218,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.transpile",{"_index":220,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.tsconfig",{"_index":212,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.typecheck",{"_index":219,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.verbose",{"_index":216,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.watch",{"_index":214,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config/config.default.js",{"_index":1593,"title":{},"body":{"index.html":{}}}],["config/middleware.default.js",{"_index":1588,"title":{},"body":{"index.html":{}}}],["config/options/demo.ts",{"_index":1640,"title":{},"body":{"index.html":{}}}],["config_view",{"_index":464,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IView.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configentry",{"_index":236,"title":{"interfaces/ConfigEntry.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["configfile",{"_index":277,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configs",{"_index":264,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IViewEngine.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configs.contract",{"_index":266,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["configs.get(env",{"_index":779,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["configs.get(json_result_options",{"_index":1084,"title":{},"body":{"classes/JsonResult.html":{}}}],["configs.get(render_result_options",{"_index":780,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["configs/env.config",{"_index":775,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{}}}],["configs/options",{"_index":1570,"title":{},"body":{"index.html":{}}}],["configs[regexp.$1",{"_index":600,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["configscollection",{"_index":242,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RealConfigCollection.html":{}}}],["configs字段下传，默认：`undefined",{"_index":757,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["configs字段下传，默认：undefined",{"_index":1296,"title":{},"body":{"interfaces/RenderResultOptions.html":{}}}],["configtoken",{"_index":240,"title":{"interfaces/ConfigToken.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["configurable",{"_index":1315,"title":{},"body":{"interfaces/Request.html":{}}}],["configuration",{"_index":274,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configuration.iconfigurationfile",{"_index":287,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configurationfile",{"_index":270,"title":{"interfaces/ConfigurationFile.html":{}},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["confs",{"_index":1275,"title":{},"body":{"classes/RenderResult.html":{}}}],["connection",{"_index":1724,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.log",{"_index":724,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["console.log(\"fuck",{"_index":1660,"title":{},"body":{"index.html":{}}}],["console.log(\"hello",{"_index":1581,"title":{},"body":{"index.html":{}}}],["console.log(`oh",{"_index":1583,"title":{},"body":{"index.html":{}}}],["console.log(configs.get(env).showtrace",{"_index":1656,"title":{},"body":{"index.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/JsonResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["constructor(...args",{"_index":502,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["constructor(appbuilder",{"_index":500,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["constructor(appconfigs",{"_index":501,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["constructor(cfg",{"_index":1226,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["constructor(context",{"_index":17,"title":{},"body":{"injectables/AstroboyContext.html":{},"injectables/Render.html":{}}}],["constructor(ctx",{"_index":84,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Request.html":{}}}],["constructor(data",{"_index":1120,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["constructor(private",{"_index":350,"title":{},"body":{"interfaces/Contract-2.html":{},"injectables/NunjunksEngine.html":{}}}],["constructor(protected",{"_index":69,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["constructor(typescript",{"_index":111,"title":{},"body":{"classes/CancellationToken.html":{}}}],["constructor(value",{"_index":1068,"title":{},"body":{"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["content",{"_index":738,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["content(e",{"_index":1295,"title":{},"body":{"classes/RenderResult.html":{}}}],["content[1",{"_index":931,"title":{},"body":{"interfaces/IRouter.html":{}}}],["content[3",{"_index":933,"title":{},"body":{"interfaces/IRouter.html":{}}}],["context",{"_index":18,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"index.html":{}}}],["context(ctx",{"_index":676,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["context.contract",{"_index":348,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["contract",{"_index":51,"title":{"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["controller",{"_index":914,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/Request.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["controller(\"test",{"_index":1607,"title":{},"body":{"index.html":{}}}],["controller(prefix",{"_index":1307,"title":{},"body":{"interfaces/Request.html":{}}}],["controller.prototype[\"@router",{"_index":918,"title":{},"body":{"interfaces/IRouter.html":{}}}],["controller[internal_injector",{"_index":1312,"title":{},"body":{"interfaces/Request.html":{}}}],["controllerconstructor",{"_index":834,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["controllername",{"_index":940,"title":{},"body":{"interfaces/IRouter.html":{}}}],["controllers/test",{"_index":1623,"title":{},"body":{"index.html":{}}}],["convert",{"_index":1033,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["copies",{"_index":1689,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":1674,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyprototype",{"_index":839,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["copyprototype(ctor",{"_index":846,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["copyprototype(di_controller",{"_index":1328,"title":{},"body":{"interfaces/Request.html":{}}}],["copyright",{"_index":1663,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":1569,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1434,"title":{"coverage.html":{}},"body":{}}],["create",{"_index":231,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/FactoryContext.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{}}}],["create(config",{"_index":228,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["create(configs",{"_index":509,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["create(ctor",{"_index":508,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["createcmdconfig",{"_index":222,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["createcmdconfig(config",{"_index":206,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}}}],["createconfig",{"_index":251,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IView.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createconfig(\"@astroboy.ts",{"_index":735,"title":{},"body":{"interfaces/IENV-1.html":{},"miscellaneous/variables.html":{}}}],["createconfig(\"demo",{"_index":1646,"title":{},"body":{"index.html":{}}}],["createconfig(\"view",{"_index":1054,"title":{},"body":{"interfaces/IView.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":528,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["createenv",{"_index":1225,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["createenv(configs",{"_index":1230,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["createfile",{"_index":920,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["createfromjson",{"_index":105,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"classes/NormalizedMessage.html":{}}}],["createfromjson(json",{"_index":1157,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["createfromjson(typescript",{"_index":121,"title":{},"body":{"classes/CancellationToken.html":{}}}],["createinjectmixin",{"_index":370,"title":{},"body":{"interfaces/Contract-3.html":{},"coverage.html":{}}}],["createinjectmixin(...args",{"_index":375,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createinstance",{"_index":1299,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["createinstance(target",{"_index":1311,"title":{},"body":{"interfaces/Request.html":{}}}],["createjsfile",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["createmiddleware",{"_index":816,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["createoptions",{"_index":249,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createoptions(\"global_error",{"_index":797,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["createoptions(\"router_options",{"_index":1065,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["createprogram",{"_index":297,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["createproxybydepts",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["createproxybydepts(target",{"_index":380,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createproxybykeys",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["createproxybykeys(target",{"_index":379,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createrouter",{"_index":836,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["createrouter(sourcector",{"_index":845,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["createstamp",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["createtsfile",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["createtsrouterfile",{"_index":910,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["createtype",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["ctor",{"_index":503,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["ctor(value",{"_index":1351,"title":{},"body":{"interfaces/Request.html":{}}}],["ctor.prototype",{"_index":505,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["ctorfolder",{"_index":879,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["ctorpath",{"_index":889,"title":{},"body":{"interfaces/IRouter.html":{}}}],["ctorpath}/${path",{"_index":905,"title":{},"body":{"interfaces/IRouter.html":{}}}],["ctx",{"_index":6,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ctx.body",{"_index":790,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["ctx.params",{"_index":1346,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.query",{"_index":1345,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.render(xpath",{"_index":1277,"title":{},"body":{"classes/RenderResult.html":{}}}],["ctx.request.body",{"_index":1342,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.status",{"_index":1287,"title":{},"body":{"classes/RenderResult.html":{}}}],["ctx.type",{"_index":1613,"title":{},"body":{"index.html":{}}}],["ctx.url",{"_index":1616,"title":{},"body":{"index.html":{}}}],["customroutefactory",{"_index":963,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["customroutefactory(configs)(prototype",{"_index":1011,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["cyan",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":717,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1717,"title":{},"body":{"index.html":{},"license.html":{}}}],["data",{"_index":330,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"index.html":{}}}],["data.character",{"_index":1183,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.code",{"_index":1173,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.content",{"_index":1177,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.file",{"_index":1179,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.line",{"_index":1181,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.setstamp(new",{"_index":1658,"title":{},"body":{"index.html":{}}}],["data.severity",{"_index":1175,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.source",{"_index":331,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["data.type",{"_index":1171,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["dataservice",{"_index":1653,"title":{},"body":{"index.html":{}}}],["date",{"_index":437,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["date().gettime",{"_index":1659,"title":{},"body":{"index.html":{}}}],["date.now",{"_index":157,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["deal",{"_index":1678,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":1725,"title":{},"body":{"index.html":{},"license.html":{}}}],["debug",{"_index":172,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debugname",{"_index":718,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["decamel",{"_index":1075,"title":{},"body":{"classes/JsonResult.html":{}}}],["decamel(key",{"_index":1095,"title":{},"body":{"classes/JsonResult.html":{}}}],["decamelize",{"_index":1076,"title":{},"body":{"classes/JsonResult.html":{},"dependencies.html":{}}}],["decidewhitespace",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["decidewhitespace(format",{"_index":1091,"title":{},"body":{"classes/JsonResult.html":{}}}],["declare",{"_index":94,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Request.html":{}}}],["decorated",{"_index":526,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["decorators",{"_index":408,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/Render.html":{},"index.html":{}}}],["decorators/controller",{"_index":840,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["decorators/injectable",{"_index":45,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-5.html":{},"injectables/NunjunksEngine.html":{},"injectables/Scope.html":{}}}],["deduplicate",{"_index":1113,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["deduplicate(messages",{"_index":1159,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["default",{"_index":230,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig.html":{}}}],["defaultenv",{"_index":463,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultenv.routeralwaysbuild",{"_index":853,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultenv.routerautobuild",{"_index":851,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultenv.routerroot",{"_index":855,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultextension",{"_index":1050,"title":{},"body":{"interfaces/IView.html":{}}}],["defaultglobalerror",{"_index":474,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultjsonresultoptions",{"_index":466,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultnunjunksoptions",{"_index":482,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/INunjunksRenderOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultrender",{"_index":781,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["defaultrender(error",{"_index":796,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["defaultrenderresultoptions",{"_index":472,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteroptions",{"_index":470,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultsimpleloggeroptions",{"_index":486,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultview",{"_index":465,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultviewengine",{"_index":1051,"title":{},"body":{"interfaces/IView.html":{}}}],["defineunit",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["delete",{"_index":1020,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["delete(path",{"_index":1021,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["deleteproperty`,`defineproperty",{"_index":364,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["demo",{"_index":1565,"title":{},"body":{"index.html":{}}}],["demo1",{"_index":1566,"title":{},"body":{"index.html":{}}}],["demo2",{"_index":1567,"title":{},"body":{"index.html":{}}}],["demo3",{"_index":1568,"title":{},"body":{"index.html":{}}}],["demo_options",{"_index":1645,"title":{},"body":{"index.html":{}}}],["demooptions",{"_index":1641,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":294,"title":{"dependencies.html":{}},"body":{"interfaces/ConfigurationFile.html":{}}}],["depts",{"_index":369,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["depts.map(i",{"_index":390,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["description",{"_index":53,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1003,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["descriptor.value",{"_index":1321,"title":{},"body":{"interfaces/Request.html":{}}}],["deserialize",{"_index":864,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["deserialize(json",{"_index":1381,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["deserialize(json.parse(json",{"_index":1379,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["deserializedefine",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["details",{"_index":200,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":714,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":603,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"miscellaneous/variables.html":{}}}],["df",{"_index":878,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.always",{"_index":885,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.approot",{"_index":886,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.ctorfolder",{"_index":880,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.enabled",{"_index":884,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.filetype",{"_index":887,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.routerfolder",{"_index":883,"title":{},"body":{"interfaces/IRouter.html":{}}}],["di",{"_index":362,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["di_controller",{"_index":1309,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.__proto__",{"_index":1336,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.prototype",{"_index":1332,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.prototype.__proto__",{"_index":1334,"title":{},"body":{"interfaces/Request.html":{}}}],["diagnostic",{"_index":1133,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["dicontainer",{"_index":462,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["dicontainer.isfactory(inject",{"_index":667,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["different",{"_index":530,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["dipair",{"_index":492,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{}}}],["diration",{"_index":431,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["directinject",{"_index":663,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["directinject(type",{"_index":662,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["disposerequestscope",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["disposerequestscope(scope",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1685,"title":{},"body":{"index.html":{},"license.html":{}}}],["ditype",{"_index":606,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["di列表，可以动态merge",{"_index":760,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["di容器的注册api",{"_index":689,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["di解析的模式，默认：'native",{"_index":733,"title":{},"body":{"interfaces/IENV-1.html":{}}}],["di解析的模式，默认：`'native",{"_index":734,"title":{},"body":{"interfaces/IENV-1.html":{}}}],["documentation",{"_index":1677,"title":{},"body":{"index.html":{},"license.html":{}}}],["duration",{"_index":158,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["dynamic_params",{"_index":990,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["e",{"_index":225,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"miscellaneous/variables.html":{}}}],["e.name",{"_index":765,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["e.stack",{"_index":766,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["e1",{"_index":514,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["e2",{"_index":515,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["effects",{"_index":548,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["empty",{"_index":517,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["enable",{"_index":1592,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":195,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":444,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["endregion",{"_index":628,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["engine",{"_index":759,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["engine.render(errorpath",{"_index":1293,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.render(path",{"_index":1282,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.renderstring(errortpl",{"_index":1294,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.renderstring(tplstr",{"_index":1283,"title":{},"body":{"classes/RenderResult.html":{}}}],["engines",{"_index":761,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["enoent",{"_index":143,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["entry",{"_index":256,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"classes/RealConfigCollection.html":{}}}],["entry.value",{"_index":260,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["enumerable",{"_index":1316,"title":{},"body":{"interfaces/Request.html":{}}}],["enumerations",{"_index":1554,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["env",{"_index":173,"title":{"interfaces/Env.html":{},"interfaces/Env-1.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/InnerCmdConfig.html":{},"classes/RenderResult.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":1243,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["equals",{"_index":1114,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["equals(messagea",{"_index":1162,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["equalto",{"_index":1206,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["err",{"_index":141,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"index.html":{}}}],["err.code",{"_index":142,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["error",{"_index":516,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error(\"no",{"_index":787,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["error.name",{"_index":768,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["errorpath",{"_index":1289,"title":{},"body":{"classes/RenderResult.html":{}}}],["errortpl",{"_index":1290,"title":{},"body":{"classes/RenderResult.html":{}}}],["errortype",{"_index":1131,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["errrotitle",{"_index":1285,"title":{},"body":{"classes/RenderResult.html":{}}}],["event",{"_index":1712,"title":{},"body":{"index.html":{},"license.html":{}}}],["events",{"_index":571,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["examples",{"_index":725,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["exclude",{"_index":288,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["exec",{"_index":205,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["exists",{"_index":323,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["existssync",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["existssync(filepath",{"_index":136,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["existssync(this.getcancellationfilepath",{"_index":165,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["export",{"_index":48,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["express",{"_index":1703,"title":{},"body":{"index.html":{},"license.html":{}}}],["extends",{"_index":202,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IENV.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{}}}],["f",{"_index":951,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":545,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["factorycontext",{"_index":448,"title":{"interfaces/FactoryContext.html":{}},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{}}}],["failed",{"_index":795,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":1197,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["false",{"_index":144,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fatal",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":315,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["file.join(\"\\n",{"_index":936,"title":{},"body":{"interfaces/IRouter.html":{}}}],["file[1",{"_index":932,"title":{},"body":{"interfaces/IRouter.html":{}}}],["file[3",{"_index":934,"title":{},"body":{"interfaces/IRouter.html":{}}}],["filepath",{"_index":310,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files",{"_index":300,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"index.html":{},"license.html":{}}}],["files.getdata(filepath).source",{"_index":328,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.has(filepath",{"_index":327,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.mutatedata(filepath",{"_index":329,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.remove(filepath",{"_index":324,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.setmtime(filepath",{"_index":320,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["filesregister",{"_index":301,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["fileswatcher",{"_index":303,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["filesystemloader",{"_index":1237,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["filesystemloader(this.configs.root",{"_index":1248,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["filetype",{"_index":198,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["final",{"_index":1340,"title":{},"body":{"interfaces/Request.html":{}}}],["finalinjectionsinit",{"_index":634,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["finally",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":313,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["fitness",{"_index":1708,"title":{},"body":{"index.html":{},"license.html":{}}}],["flag",{"_index":926,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fn",{"_index":712,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["folders",{"_index":899,"title":{},"body":{"interfaces/IRouter.html":{}}}],["folders.foreach(path",{"_index":901,"title":{},"body":{"interfaces/IRouter.html":{}}}],["following",{"_index":1198,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"index.html":{},"license.html":{}}}],["format",{"_index":1031,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":983,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["free",{"_index":1670,"title":{},"body":{"index.html":{},"license.html":{}}}],["frombody",{"_index":994,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["frombody(options",{"_index":995,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["fromjson",{"_index":1039,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromjson(json",{"_index":1036,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromobject",{"_index":1040,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromobject(json",{"_index":1038,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromparams",{"_index":988,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["fromparams(options",{"_index":989,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["fs",{"_index":130,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IRouter.html":{}}}],["fs.appendfilesync(_path",{"_index":935,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(_path",{"_index":923,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(routerfolder",{"_index":906,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(routerpath",{"_index":895,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.mkdirsync(routerfolder",{"_index":907,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.mkdirsync(routerpath",{"_index":894,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.pathlike",{"_index":137,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fs.readdirsync(ctorfolder",{"_index":908,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.readdirsync(ctorpath",{"_index":900,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.readfilesync(_path",{"_index":925,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.statsync(filepath",{"_index":139,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{}}}],["fs.unlinksync(this.getcancellationfilepath",{"_index":169,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fs.writefilesync(this.getcancellationfilepath",{"_index":168,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["function",{"_index":135,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-3.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function(target",{"_index":802,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["functions",{"_index":1571,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1692,"title":{},"body":{"index.html":{},"license.html":{}}}],["genericdeserialize",{"_index":1374,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["genericdeserialize(json",{"_index":1382,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["genericdeserialize(json.parse(json",{"_index":1380,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["get(\"testget/:type",{"_index":1610,"title":{},"body":{"index.html":{}}}],["get(config",{"_index":211,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["get(merge",{"_index":208,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["get(path",{"_index":1012,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["get(target",{"_index":382,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["get(token",{"_index":258,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"classes/RealConfigCollection.html":{}}}],["getapp",{"_index":37,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["getcancellationfilepath",{"_index":106,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["getconfig",{"_index":12,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getconfig(...args",{"_index":23,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getconfigs",{"_index":1239,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["getctx",{"_index":33,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["getformattedcode",{"_index":1115,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["getid",{"_index":1365,"title":{},"body":{"injectables/Scope.html":{}}}],["getinjector",{"_index":1300,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["getinjector(ctx",{"_index":1310,"title":{},"body":{"interfaces/Request.html":{}}}],["getlib",{"_index":13,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getlib(...args",{"_index":25,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getloader",{"_index":1241,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["getmethodparamstype",{"_index":968,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["getmethodparamstype(prototype",{"_index":997,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["getpropertytype",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["getprototypeconstructor",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["getquery",{"_index":1605,"title":{},"body":{"index.html":{}}}],["getscopeid",{"_index":811,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["getscopeid(ctx",{"_index":817,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["getservice",{"_index":14,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getservice(...args",{"_index":27,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getserviceclass",{"_index":15,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getserviceclass(...args",{"_index":29,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["getshortscopeid",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1383,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getviews",{"_index":1267,"title":{},"body":{"injectables/Render.html":{}}}],["global",{"_index":789,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["global_error",{"_index":475,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globaldi",{"_index":455,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globaldi.get(configs",{"_index":818,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["globaldi.get(injectservice",{"_index":819,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["globaldi.register(token",{"_index":808,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["globalimplements",{"_index":838,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalimplements.get(controller",{"_index":919,"title":{},"body":{"interfaces/IRouter.html":{}}}],["globalimplements.get(ctor",{"_index":844,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["globalimplements.set(di_controller",{"_index":1329,"title":{},"body":{"interfaces/Request.html":{}}}],["granted",{"_index":1669,"title":{},"body":{"index.html":{},"license.html":{}}}],["green",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":772,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["has(target",{"_index":391,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["help",{"_index":191,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":558,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["hereby",{"_index":1668,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":1714,"title":{},"body":{"index.html":{},"license.html":{}}}],["host",{"_index":306,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["host.getsourcefile",{"_index":309,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["http://127.0.0.1:8001",{"_index":722,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ibaseinjectable",{"_index":800,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["ibodyresult",{"_index":873,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"miscellaneous/typealiases.html":{}}}],["icommonresulttype",{"_index":872,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{},"miscellaneous/typealiases.html":{}}}],["iconfigcollection",{"_index":241,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["icontext",{"_index":46,"title":{"interfaces/IContext.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":430,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"index.html":{}}}],["id2",{"_index":1620,"title":{},"body":{"index.html":{}}}],["idevcmdoptions",{"_index":709,"title":{"interfaces/IDevCmdOptions.html":{}},"body":{"interfaces/IDevCmdOptions.html":{},"coverage.html":{}}}],["ienv",{"_index":182,"title":{"interfaces/IENV.html":{},"interfaces/IENV-1.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ierrorhandler",{"_index":736,"title":{"interfaces/IErrorHandler.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{}}}],["iglobalerrorhandler",{"_index":770,"title":{"interfaces/IGlobalErrorHandler.html":{}},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iglobalsetoptions",{"_index":413,"title":{"interfaces/IGlobalSetOptions.html":{}},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["ignore",{"_index":71,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["iinjectableconfigs",{"_index":798,"title":{"interfaces/IInjectableConfigs.html":{}},"body":{"interfaces/IInjectableConfigs.html":{},"coverage.html":{}}}],["imiddlewaresscope",{"_index":809,"title":{"interfaces/IMiddlewaresScope.html":{}},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["implement",{"_index":540,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["implements",{"_index":60,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{}}}],["implementtoken",{"_index":544,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["implementtype",{"_index":461,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["implicit",{"_index":293,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["implied",{"_index":1704,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["included",{"_index":1698,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":1680,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":384,"title":{"index.html":{}},"body":{"interfaces/Contract-3.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["indexable",{"_index":730,"title":{},"body":{"interfaces/IENV.html":{},"interfaces/IRouter.html":{}}}],["indexof(type",{"_index":1215,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["inend",{"_index":857,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["info",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["init",{"_index":420,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"index.html":{}}}],["init(id",{"_index":440,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["init.ts",{"_index":1587,"title":{},"body":{"index.html":{}}}],["initcommand",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["initconfigcollection",{"_index":681,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initcontextprovider",{"_index":673,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initinjections",{"_index":589,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initinjectservice",{"_index":677,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initoptions",{"_index":578,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initrequestscope",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["initrequestscope(ctx",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initrouters",{"_index":490,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"coverage.html":{}}}],["initrouters(configs",{"_index":858,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["initrouters(this.configs.get(router_options",{"_index":633,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["inject",{"_index":665,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AstroboyContext.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["injectable(config",{"_index":801,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["injectabletoken",{"_index":543,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["injectditoken",{"_index":355,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["injecting",{"_index":550,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["injector",{"_index":450,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injector.get(configs",{"_index":1356,"title":{},"body":{"interfaces/Request.html":{}}}],["injector.get(configs).get(static_resolver",{"_index":1324,"title":{},"body":{"interfaces/Request.html":{}}}],["injector.get(context",{"_index":778,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["injector.get(dataservice",{"_index":1657,"title":{},"body":{"index.html":{}}}],["injector.get(engines[key",{"_index":1280,"title":{},"body":{"classes/RenderResult.html":{}}}],["injector.get(render",{"_index":777,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["injector.get(simplelogger",{"_index":793,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["injector.get>(context",{"_index":1284,"title":{},"body":{"classes/RenderResult.html":{}}}],["injectscope",{"_index":245,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"index.html":{}}}],["injectscope(async",{"_index":1655,"title":{},"body":{"index.html":{}}}],["injectscope.new",{"_index":626,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["injectscope.scope",{"_index":624,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["injectscope.singleton",{"_index":622,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"index.html":{}}}],["injectservice",{"_index":357,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{}}}],["injectservice.contract",{"_index":358,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["injecttoken",{"_index":459,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["innerbundle",{"_index":685,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["innercmdconfig",{"_index":201,"title":{"interfaces/InnerCmdConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["innerrouteroptions",{"_index":468,"title":{"interfaces/InnerRouterOptions.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inspect",{"_index":174,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inspector",{"_index":723,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":1574,"title":{},"body":{"index.html":{}}}],["instance",{"_index":529,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["instanceof",{"_index":378,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["interface",{"_index":50,"title":{"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":1572,"title":{},"body":{"index.html":{}}}],["internal",{"_index":741,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["internal_dispose",{"_index":361,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{}}}],["internal_injector",{"_index":1304,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inunjunksrenderoptions",{"_index":820,"title":{"interfaces/INunjunksRenderOptions.html":{}},"body":{"interfaces/INunjunksRenderOptions.html":{},"injectables/NunjunksEngine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":675,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["invokeservicemethod",{"_index":16,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/IContext.html":{}}}],["invokeservicemethod(...args",{"_index":31,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{}}}],["invokeservicemethod(pkgname",{"_index":703,"title":{},"body":{"interfaces/IContext.html":{}}}],["ioc",{"_index":1631,"title":{},"body":{"index.html":{}}}],["ipreprocess",{"_index":829,"title":{"interfaces/IPreProcess.html":{}},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["iresult",{"_index":865,"title":{"interfaces/IResult.html":{}},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IViewEngine.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["iresultscope",{"_index":869,"title":{"interfaces/IResultScope.html":{}},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"coverage.html":{}}}],["iroutefactory",{"_index":965,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["irouter",{"_index":874,"title":{"interfaces/IRouter.html":{}},"body":{"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["iroutercmdoptions",{"_index":944,"title":{"interfaces/IRouterCmdOptions.html":{}},"body":{"interfaces/IRouterCmdOptions.html":{},"coverage.html":{}}}],["iroutermagic",{"_index":958,"title":{"interfaces/IRouterMagic.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["isalways",{"_index":949,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["iscancellationrequested",{"_index":107,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["iscancelled",{"_index":101,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["iscustomclassinstance",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["isdiagnostictype",{"_index":1116,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isenabled",{"_index":946,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["iserrorseverity",{"_index":1117,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isimpleloggeroptions",{"_index":1023,"title":{"interfaces/ISimpleLoggerOptions.html":{}},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindex",{"_index":1008,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["islinttype",{"_index":1118,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isobj",{"_index":422,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["isplainobject",{"_index":404,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["isplainobject(p1",{"_index":425,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["istaticserializeoptions",{"_index":1029,"title":{"interfaces/IStaticSerializeOptions.html":{}},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["istatictypedresolver",{"_index":1032,"title":{"interfaces/IStaticTypedResolver.html":{}},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["iswarningseverity",{"_index":1119,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["it's",{"_index":316,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["iview",{"_index":1047,"title":{"interfaces/IView.html":{}},"body":{"interfaces/IView.html":{},"coverage.html":{}}}],["iviewengine",{"_index":744,"title":{"interfaces/IViewEngine.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{}}}],["javascript",{"_index":538,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["js",{"_index":199,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":122,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"classes/TypedSerializerCreator.html":{}}}],["json.cancellationfilename",{"_index":153,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["json.iscancelled",{"_index":154,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["json.stringify",{"_index":1089,"title":{},"body":{"classes/JsonResult.html":{},"classes/TypedSerializerCreator.html":{}}}],["json_result_options",{"_index":467,"title":{},"body":{"interfaces/FactoryContext.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresolvers",{"_index":411,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresult",{"_index":1066,"title":{"classes/JsonResult.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["jsonresultoptions",{"_index":1077,"title":{"interfaces/JsonResultOptions.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresult实现了iresult接口，提供将json内容编程化写入body的能力，同时提供了configs",{"_index":1615,"title":{},"body":{"index.html":{}}}],["jsontemplate",{"_index":1081,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["jsontplkey",{"_index":1082,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["json对象序列化写入body",{"_index":1072,"title":{},"body":{"classes/JsonResult.html":{}}}],["key",{"_index":194,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["key01",{"_index":1643,"title":{},"body":{"index.html":{}}}],["key02",{"_index":1644,"title":{},"body":{"index.html":{}}}],["keyresolver",{"_index":1080,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["keystr",{"_index":423,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["kind",{"_index":1702,"title":{},"body":{"index.html":{},"license.html":{}}}],["koa",{"_index":44,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/Request.html":{}}}],["koa.application",{"_index":9,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["koa.context",{"_index":7,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{}}}],["koa:application",{"_index":727,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["languageversion",{"_index":311,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["lastcancellationchecktime",{"_index":102,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["level",{"_index":1026,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1718,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":1715,"title":{},"body":{"index.html":{},"license.html":{}}}],["license",{"_index":1662,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":1681,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":1705,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":1102,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["line:no",{"_index":292,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["lint",{"_index":1135,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["linteroptions",{"_index":272,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["literal",{"_index":273,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/Contract-4.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{}}}],["loadconfig",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["loader",{"_index":1224,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["loadlinterconfig",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["loadlinterconfig(configfile",{"_index":289,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["loadprogramconfig",{"_index":276,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["lodash",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["lodash/get",{"_index":185,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["lodash/isplainobject",{"_index":405,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["lodash/merge",{"_index":1272,"title":{},"body":{"classes/RenderResult.html":{}}}],["lodash/set",{"_index":407,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{}}}],["logger",{"_index":488,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["logger.debug(errrotitle",{"_index":1286,"title":{},"body":{"classes/RenderResult.html":{}}}],["logger.trace(\"global_error",{"_index":794,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["logger/base.ts",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger/logger.ts",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["logger/options.ts",{"_index":1025,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lstripblocks",{"_index":824,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":720,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["magenta",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["magic_content",{"_index":969,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["magic_content.get(prototype",{"_index":984,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["magic_content.set",{"_index":985,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["map",{"_index":254,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":1052,"title":{},"body":{"interfaces/IView.html":{}}}],["matching",{"_index":80,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(time",{"_index":159,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["means",{"_index":551,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["memberof",{"_index":269,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{}}}],["merchantability",{"_index":1707,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":232,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"classes/RenderResult.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["merge(merge",{"_index":229,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["mergecmdconfig",{"_index":223,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["mergecmdconfig(merge",{"_index":207,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}}}],["messagea",{"_index":1140,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.character",{"_index":1195,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.code",{"_index":1202,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.content",{"_index":1204,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.severity",{"_index":1190,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb",{"_index":1138,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.character",{"_index":1196,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.code",{"_index":1203,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.content",{"_index":1205,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.file",{"_index":1188,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.line",{"_index":1193,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.severity",{"_index":1191,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.type",{"_index":1186,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messages",{"_index":1161,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["messages.sort(normalizedmessage.compare).filter((message",{"_index":1208,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messages[index",{"_index":1210,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["metadata",{"_index":670,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["method",{"_index":697,"title":{},"body":{"interfaces/IContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["methodget(@fromparams",{"_index":1611,"title":{},"body":{"index.html":{}}}],["methodname",{"_index":708,"title":{},"body":{"interfaces/IContext.html":{}}}],["methodpost",{"_index":1619,"title":{},"body":{"index.html":{}}}],["middleware",{"_index":815,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["middlewares",{"_index":859,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["miscellaneous",{"_index":1553,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":1661,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":175,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1683,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":493,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/Request.html":{}}}],["module.exports",{"_index":1589,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1726,"title":{"modules.html":{}},"body":{}}],["mogician",{"_index":56,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["more",{"_index":162,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["ms",{"_index":388,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["mtime",{"_index":317,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["n",{"_index":1087,"title":{},"body":{"classes/JsonResult.html":{}}}],["name",{"_index":187,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":49,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"injectables/Scope.html":{},"changelog.html":{}}}],["native",{"_index":604,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":152,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouteArgument.html":{},"injectables/Scope.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newenvs",{"_index":210,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["next",{"_index":291,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IMiddlewaresScope.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nocache",{"_index":1249,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["node",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.mogician",{"_index":1665,"title":{},"body":{"index.html":{},"license.html":{}}}],["node_env",{"_index":192,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["node_modules/.bin/atc",{"_index":1597,"title":{},"body":{"index.html":{}}}],["node_port",{"_index":193,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["nodemon",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["noninfringement",{"_index":1711,"title":{},"body":{"index.html":{},"license.html":{}}}],["normalizedmessage",{"_index":1098,"title":{"classes/NormalizedMessage.html":{}},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{}}}],["normalizedmessage(json",{"_index":1184,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparenumbers",{"_index":1194,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparenumbers(messagea.line",{"_index":1192,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareoptionalstrings",{"_index":1201,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareoptionalstrings(messagea.file",{"_index":1187,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareseverities",{"_index":1189,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparetypes(messagea.type",{"_index":1185,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.equals(message",{"_index":1209,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.severity_error",{"_index":1220,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.severity_warning",{"_index":1219,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.type_diagnostic",{"_index":1214,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.type_lint",{"_index":1213,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessagejson",{"_index":1121,"title":{"interfaces/NormalizedMessageJson.html":{}},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{}}}],["notice",{"_index":1696,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":1573,"title":{},"body":{"index.html":{}}}],["null",{"_index":359,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/TypedSerializerCreator.html":{}}}],["number",{"_index":118,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-5.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/InnerCmdConfig.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/Scope.html":{},"index.html":{}}}],["numbera",{"_index":1144,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["numberb",{"_index":1142,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["nunjucks",{"_index":1244,"title":{},"body":{"injectables/NunjunksEngine.html":{},"dependencies.html":{}}}],["nunjunks",{"_index":758,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["nunjunks_options",{"_index":481,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nunjunksengine",{"_index":480,"title":{"injectables/NunjunksEngine.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":398,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"injectables/Render.html":{},"classes/TypedSerializerCreator.html":{}}}],["object",{"_index":366,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":389,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["object.defineproperty",{"_index":1331,"title":{},"body":{"interfaces/Request.html":{}}}],["object.defineproperty(prototype",{"_index":1313,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertydescriptor(prototype",{"_index":1319,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertydescriptor(target.prototype",{"_index":1333,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertynames(prototype).foreach(name",{"_index":1318,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertynames(target.prototype).foreach(name",{"_index":1330,"title":{},"body":{"interfaces/Request.html":{}}}],["object.keys(ms",{"_index":386,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["obtaining",{"_index":1673,"title":{},"body":{"index.html":{},"license.html":{}}}],["old",{"_index":338,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["oldenvs",{"_index":209,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["oldfile",{"_index":924,"title":{},"body":{"interfaces/IRouter.html":{}}}],["oldfile.tostring",{"_index":928,"title":{},"body":{"interfaces/IRouter.html":{}}}],["oldprogram",{"_index":304,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["on(\"error",{"_index":648,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["on(\"start",{"_index":641,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["once",{"_index":163,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["ondeverror",{"_index":762,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["onend",{"_index":888,"title":{},"body":{"interfaces/IRouter.html":{}}}],["onerror",{"_index":312,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onerror(error",{"_index":649,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["onstart",{"_index":639,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{}}}],["onstart(app",{"_index":647,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["open",{"_index":850,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["option(...args",{"_index":513,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["option(router_options",{"_index":1630,"title":{},"body":{"index.html":{}}}],["option(token",{"_index":512,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["optionassign",{"_index":456,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{}}}],["optionassign(this.configs",{"_index":523,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["options",{"_index":188,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.format",{"_index":1378,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["options.type",{"_index":1377,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["options/typed",{"_index":1302,"title":{},"body":{"interfaces/Request.html":{}}}],["opts",{"_index":1273,"title":{},"body":{"classes/RenderResult.html":{},"index.html":{}}}],["opts.ondeverror",{"_index":1292,"title":{},"body":{"classes/RenderResult.html":{}}}],["opts.onerror",{"_index":1291,"title":{},"body":{"classes/RenderResult.html":{}}}],["os",{"_index":131,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["others",{"_index":376,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["others[0",{"_index":377,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["otherwise",{"_index":1721,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":1723,"title":{},"body":{"index.html":{},"license.html":{}}}],["override",{"_index":72,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["overview",{"_index":1727,"title":{"overview.html":{}},"body":{}}],["ownkeys(target",{"_index":387,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["p",{"_index":653,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["p.endswith(\".d.ts",{"_index":913,"title":{},"body":{"interfaces/IRouter.html":{}}}],["p1",{"_index":371,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p2",{"_index":372,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p3",{"_index":373,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p4",{"_index":374,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["package",{"_index":1399,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["packagename",{"_index":706,"title":{},"body":{"interfaces/IContext.html":{}}}],["param",{"_index":267,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["params",{"_index":977,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["params[index",{"_index":1347,"title":{},"body":{"interfaces/Request.html":{}}}],["paramsfactory",{"_index":970,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/typealiases.html":{}}}],["paramsoptions",{"_index":973,"title":{"interfaces/ParamsOptions.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["paramsresolver",{"_index":972,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/typealiases.html":{}}}],["parsed",{"_index":283,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["partial",{"_index":399,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1709,"title":{},"body":{"index.html":{},"license.html":{}}}],["partreset",{"_index":457,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{}}}],["path",{"_index":132,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IViewEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["path)(prototype",{"_index":1006,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["path.dirname(configfile",{"_index":286,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["path.indexof",{"_index":902,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.join(__dirname",{"_index":1602,"title":{},"body":{"index.html":{}}}],["path.join(os.tmpdir",{"_index":155,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["path.resolve(__dirname",{"_index":1580,"title":{},"body":{"index.html":{}}}],["path.resolve(base",{"_index":890,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.resolve(process.cwd",{"_index":827,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["path.resolve(routerbase",{"_index":892,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.split(\".\")[0",{"_index":916,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path`或`tplstr",{"_index":747,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["paths",{"_index":1398,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined",{"_index":755,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["path将会拼装成绝对路径下到对应的渲染引擎。默认：undefined",{"_index":1297,"title":{},"body":{"interfaces/RenderResultOptions.html":{}}}],["path或tplstr",{"_index":742,"title":{},"body":{"interfaces/IErrorHandler.html":{}}}],["path，默认：`undefined",{"_index":746,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["path，默认：undefined",{"_index":743,"title":{},"body":{"interfaces/IErrorHandler.html":{}}}],["permission",{"_index":1667,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":1690,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":1672,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":1691,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":532,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["pipes",{"_index":564,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["pkgname",{"_index":705,"title":{},"body":{"interfaces/IContext.html":{}}}],["please",{"_index":553,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["plugins",{"_index":1603,"title":{},"body":{"index.html":{}}}],["plugins/nunjunks",{"_index":483,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"interfaces/RenderResultOptions.html":{}}}],["plugins/simple",{"_index":487,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{}}}],["plugins/typed",{"_index":478,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["port",{"_index":711,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1700,"title":{},"body":{"index.html":{},"license.html":{}}}],["post",{"_index":1017,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["post(\"post/:type",{"_index":1618,"title":{},"body":{"index.html":{}}}],["post(path",{"_index":1018,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["postdata",{"_index":1606,"title":{},"body":{"index.html":{}}}],["pre",{"_index":728,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":1306,"title":{},"body":{"interfaces/Request.html":{}}}],["preinit",{"_index":629,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["preinitfn",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["preinitfn(configs",{"_index":856,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["preinject",{"_index":651,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["preinject(type",{"_index":650,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["prescopeds",{"_index":496,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["presingletons",{"_index":495,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["preuniques",{"_index":497,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["prevent",{"_index":556,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["priorities",{"_index":1211,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priorities[0",{"_index":1216,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priorities[1",{"_index":1217,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priority",{"_index":1590,"title":{},"body":{"index.html":{}}}],["private",{"_index":99,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"injectables/Scope.html":{},"index.html":{}}}],["probably",{"_index":322,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["process.env",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.__transpile",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.__tsconfig",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":740,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["production",{"_index":782,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":339,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig",{"_index":298,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig.filenames",{"_index":334,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig.options",{"_index":335,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["promise",{"_index":812,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":365,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propertydescriptor",{"_index":1004,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propertykey",{"_index":971,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propkey",{"_index":991,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propkey).params.push",{"_index":998,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["protected",{"_index":360,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["prototype",{"_index":805,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["prototype.__valid",{"_index":807,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["prototype[\"@router",{"_index":1317,"title":{},"body":{"interfaces/Request.html":{}}}],["provided",{"_index":788,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideinvoker",{"_index":813,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"miscellaneous/typealiases.html":{}}}],["proxy",{"_index":363,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["proxy(target",{"_index":381,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["proxyurl",{"_index":721,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":62,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["publish",{"_index":1684,"title":{},"body":{"index.html":{},"license.html":{}}}],["pure",{"_index":546,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["purpose",{"_index":1710,"title":{},"body":{"index.html":{},"license.html":{}}}],["put",{"_index":1014,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["put(path",{"_index":1015,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["r",{"_index":927,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["rc",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1392,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["rc.12",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["rc.18",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["rc.20",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["rc.21",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["rc.22",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["rc.23",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["rc.24",{"_index":1422,"title":{},"body":{"changelog.html":{}}}],["rc.27",{"_index":1626,"title":{},"body":{"index.html":{}}}],["rc.28",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["rc.29",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["rc.30",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["rc.31",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["rc.35",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["rc.37",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["rc.39",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["rconfig",{"_index":224,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["re",{"_index":336,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["readconfigs(configs",{"_index":595,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["readonlyconfigs",{"_index":243,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RealConfigCollection.html":{}}}],["readruntimeenv(app",{"_index":601,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["realconfigcollection",{"_index":253,"title":{"classes/RealConfigCollection.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["realgetsourcefile",{"_index":308,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["realgetsourcefile(filepath",{"_index":332,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["rebuild",{"_index":950,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["region",{"_index":575,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["register",{"_index":326,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["rename",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":415,"title":{"injectables/Render.html":{}},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render(name",{"_index":1232,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["render(path",{"_index":1057,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["render.contract",{"_index":416,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["render.options",{"_index":774,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{}}}],["render.setview(\"__viewerror",{"_index":783,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["render_result_options",{"_index":471,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresult",{"_index":749,"title":{"classes/RenderResult.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresultoptions",{"_index":750,"title":{"interfaces/RenderResultOptions.html":{}},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresult配置token",{"_index":769,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["renderstring",{"_index":1056,"title":{},"body":{"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{}}}],["renderstring(path",{"_index":1059,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["renderstring(tpl",{"_index":1234,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["replace(/\\//g",{"_index":942,"title":{},"body":{"interfaces/IRouter.html":{}}}],["replace(`${baserouter",{"_index":941,"title":{},"body":{"interfaces/IRouter.html":{}}}],["request",{"_index":531,"title":{"interfaces/Request.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["requestcancellation",{"_index":108,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["request中获取body",{"_index":993,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["request中获取params和query",{"_index":987,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["require(\"path",{"_index":1594,"title":{},"body":{"index.html":{}}}],["require(\"ts",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require(\"tslint",{"_index":295,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["require(\"uuid/v4",{"_index":134,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["require(`${ctorpath}/${commonname",{"_index":917,"title":{},"body":{"interfaces/IRouter.html":{}}}],["reset",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resetdiresolver",{"_index":605,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["resolvebundles",{"_index":610,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["resolvedepts",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["resolveinjections",{"_index":619,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["resolvekeys",{"_index":409,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["resolvekeys(jsonresolvers.snakecase",{"_index":427,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["resolvekeys(r",{"_index":1090,"title":{},"body":{"classes/JsonResult.html":{}}}],["resolvemethodresult",{"_index":1354,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvemethodresult(result",{"_index":1327,"title":{},"body":{"interfaces/Request.html":{}}}],["resolveparamtype",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["resolveparamtype(type",{"_index":1000,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["resolveparamtype(types[index",{"_index":999,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["resolver",{"_index":978,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["resolver(ctx.request.body",{"_index":1343,"title":{},"body":{"interfaces/Request.html":{}}}],["resolveroutemethodparams",{"_index":1325,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvestatictype",{"_index":1348,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvestatictype(stac",{"_index":1344,"title":{},"body":{"interfaces/Request.html":{}}}],["restriction",{"_index":1679,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":79,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result).toresult",{"_index":1355,"title":{},"body":{"interfaces/Request.html":{}}}],["result.toresult",{"_index":792,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":956,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["results/json",{"_index":412,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/Render.html":{}}}],["results/render",{"_index":773,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":268,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["rights",{"_index":1682,"title":{},"body":{"index.html":{},"license.html":{}}}],["rimraf",{"_index":877,"title":{},"body":{"interfaces/IRouter.html":{},"dependencies.html":{}}}],["rimraf.sync(routerpath",{"_index":893,"title":{},"body":{"interfaces/IRouter.html":{}}}],["root",{"_index":756,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IView.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root_path",{"_index":1579,"title":{},"body":{"index.html":{}}}],["root}/${xpath",{"_index":1281,"title":{},"body":{"classes/RenderResult.html":{}}}],["route",{"_index":981,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"index.html":{}}}],["route_magic",{"_index":1002,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["route_query",{"_index":992,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["routeargument",{"_index":976,"title":{"interfaces/RouteArgument.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["routeparams",{"_index":1320,"title":{},"body":{"interfaces/Request.html":{}}}],["routeparams.foreach(i",{"_index":1338,"title":{},"body":{"interfaces/Request.html":{}}}],["router",{"_index":837,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router(prefix)(target",{"_index":1308,"title":{},"body":{"interfaces/Request.html":{}}}],["router.js",{"_index":930,"title":{},"body":{"interfaces/IRouter.html":{}}}],["router.routes[key",{"_index":982,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router.ts",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["router/dist/decorators/route.factory",{"_index":964,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router/dist/decorators/utils",{"_index":967,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router/dist/metadata",{"_index":835,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router_options",{"_index":469,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeralwaysbuild",{"_index":852,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routerautobuild",{"_index":849,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routerbase",{"_index":882,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerconfig",{"_index":184,"title":{"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["routerfolder",{"_index":881,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["routermeta",{"_index":960,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["routeroptions",{"_index":1062,"title":{"interfaces/RouterOptions.html":{}},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{}}}],["routerpath",{"_index":891,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerpath}/${commonname}.${filetype",{"_index":922,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerpath}/${path",{"_index":904,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerroot",{"_index":854,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routers",{"_index":176,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routers[`${commonname}.${filetype",{"_index":938,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routers[path",{"_index":903,"title":{},"body":{"interfaces/IRouter.html":{}}}],["router文件的文件类型，默认：'js",{"_index":833,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/RouterOptions.html":{}}}],["router文件的文件类型，默认：`'js",{"_index":848,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{}}}],["router的createrouter",{"_index":841,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routes",{"_index":961,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["routes部分由astroboy",{"_index":1305,"title":{},"body":{"interfaces/Request.html":{}}}],["rs",{"_index":1227,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["run",{"_index":572,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{},"index.html":{}}}],["runtime",{"_index":539,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["sb",{"_index":263,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["scope",{"_index":433,"title":{"injectables/Scope.html":{}},"body":{"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"injectables/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope.contract",{"_index":434,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["scoped",{"_index":524,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["scoped(...args",{"_index":559,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["scoped(srv",{"_index":535,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["scopeds",{"_index":687,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["scoped），简单的描述来说，一个服务在同一个请求流程中总是保持单例状态，并在请求结束后释放。scoped",{"_index":1638,"title":{},"body":{"index.html":{}}}],["scopeid",{"_index":354,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IMiddlewaresScope.html":{},"injectables/Scope.html":{}}}],["sell",{"_index":1688,"title":{},"body":{"index.html":{},"license.html":{}}}],["sendinjection(token",{"_index":666,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["serialize",{"_index":863,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/TypedSerializerCreator.html":{}}}],["serialize(obj",{"_index":1376,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serialize.options",{"_index":1303,"title":{},"body":{"interfaces/Request.html":{}}}],["serialize.options.ts",{"_index":1486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializedefine",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["serializer",{"_index":479,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["serializer/core.ts",{"_index":1369,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["serializer/core.ts:17",{"_index":1372,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:29",{"_index":1370,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:35",{"_index":1373,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:43",{"_index":1371,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/defines.ts",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["serializer/index.ts",{"_index":1496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":494,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server(ctor",{"_index":510,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["server.create",{"_index":1629,"title":{},"body":{"index.html":{}}}],["server.create(astroboy",{"_index":1578,"title":{},"body":{"index.html":{}}}],["server.prototype.initinjections",{"_index":577,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["server.prototype.initoptions",{"_index":588,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["serverbundle",{"_index":684,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["serverinit",{"_index":1481,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":525,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{}}}],["servicename",{"_index":707,"title":{},"body":{"interfaces/IContext.html":{}}}],["services",{"_index":527,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{}}}],["services/astroboycontext",{"_index":453,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["services/baseclass",{"_index":860,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["services/configs",{"_index":476,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouterOptions.html":{}}}],["services/context",{"_index":451,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["services/data",{"_index":1654,"title":{},"body":{"index.html":{}}}],["services/injector",{"_index":452,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{}}}],["services/render",{"_index":489,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{}}}],["services/scope",{"_index":454,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["set",{"_index":406,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"miscellaneous/variables.html":{}}}],["set(n",{"_index":1088,"title":{},"body":{"classes/JsonResult.html":{}}}],["set(token",{"_index":255,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["setcolor",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["setscopeid",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["setview",{"_index":395,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(...args",{"_index":421,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(key",{"_index":401,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(obj",{"_index":396,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["severity",{"_index":1103,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["severity_error",{"_index":1104,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severity_warning",{"_index":1105,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severitya",{"_index":1152,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severityb",{"_index":1150,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severityb].map(type",{"_index":1218,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["shall",{"_index":1697,"title":{},"body":{"index.html":{},"license.html":{}}}],["shit",{"_index":1584,"title":{},"body":{"index.html":{}}}],["shouldn't",{"_index":518,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["show",{"_index":954,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["showrouters",{"_index":953,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["showroutes",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["showtrace",{"_index":1595,"title":{},"body":{"index.html":{}}}],["showvalue",{"_index":1636,"title":{},"body":{"index.html":{}}}],["side",{"_index":547,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["simple_logger_options",{"_index":485,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["simplelogger",{"_index":484,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"coverage.html":{}}}],["simpleloglevel",{"_index":1027,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["simpleloglevel.warn",{"_index":1028,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":561,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{}}}],["singleton(...args",{"_index":566,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["singleton(srv",{"_index":565,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["singletons",{"_index":686,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["situation",{"_index":557,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["snakecase",{"_index":1096,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snakecase(key",{"_index":1094,"title":{},"body":{"classes/JsonResult.html":{}}}],["software",{"_index":1675,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":325,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["sourcector",{"_index":843,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{}}}],["split(\"\\n",{"_index":929,"title":{},"body":{"interfaces/IRouter.html":{}}}],["src/.../base.ts",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../baseclass.ts",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../check.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configs.ts",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../controller.ts",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.ts",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../env.config.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.options.ts",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../init.ts",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iresult.ts",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../json.options.ts",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json.ts",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../normalizedmessage.ts",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../options.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.ts",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../render.options.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route.ts",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../router.options.ts",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../typed",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../view.config.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/builders.ts",{"_index":875,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["src/builders.ts:7",{"_index":876,"title":{},"body":{"interfaces/IRouter.html":{}}}],["src/cmd/base",{"_index":226,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{}}}],["src/cmd/base.ts",{"_index":171,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["src/cmd/base.ts:13",{"_index":731,"title":{},"body":{"interfaces/IENV.html":{}}}],["src/cmd/cmd.ts",{"_index":234,"title":{},"body":{"interfaces/Config-1.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["src/cmd/dev/actions.ts",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["src/cmd/dev/check.ts",{"_index":1446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/dev/options.ts",{"_index":710,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/index.ts",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["src/cmd/init.ts",{"_index":1452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/register.ts",{"_index":1453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/router/actions.ts",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["src/cmd/router/options.ts",{"_index":945,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/utils/cancellationtoken.ts",{"_index":98,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["src/cmd/utils/cancellationtoken.ts:26",{"_index":117,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:27",{"_index":116,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:28",{"_index":114,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:39",{"_index":124,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:50",{"_index":129,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:57",{"_index":125,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:61",{"_index":126,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:78",{"_index":128,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:84",{"_index":127,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:89",{"_index":119,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/loadconfig.ts",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["src/cmd/utils/normalizedmessage.ts",{"_index":1099,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cmd/utils/normalizedmessage.ts:106",{"_index":1151,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:117",{"_index":1147,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:131",{"_index":1143,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:144",{"_index":1169,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:15",{"_index":1134,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:156",{"_index":1165,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:16",{"_index":1136,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:160",{"_index":1167,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:164",{"_index":1164,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:168",{"_index":1166,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:172",{"_index":1168,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:19",{"_index":1128,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:20",{"_index":1130,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:22",{"_index":1132,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:23",{"_index":1123,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:24",{"_index":1127,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:25",{"_index":1124,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:26",{"_index":1125,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:27",{"_index":1126,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:28",{"_index":1122,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:40",{"_index":1158,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:44",{"_index":1139,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:80",{"_index":1163,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:87",{"_index":1160,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:95",{"_index":1155,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/typecheck.ts",{"_index":271,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["src/configs/env.config.ts",{"_index":732,"title":{},"body":{"interfaces/IENV-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configs/view.config.ts",{"_index":1048,"title":{},"body":{"interfaces/IView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/controller.ts",{"_index":1298,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/injectable.ts",{"_index":799,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"coverage.html":{}}}],["src/decorators/route.ts",{"_index":959,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/index.ts",{"_index":830,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["src/middlewares/core.ts",{"_index":810,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/middlewares/index.ts",{"_index":1477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/errors.options.ts",{"_index":771,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/json.options.ts",{"_index":1097,"title":{},"body":{"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/render.options.ts",{"_index":737,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/router.options.ts",{"_index":1061,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/typed",{"_index":1485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/nunjunks/core.ts",{"_index":1223,"title":{},"body":{"injectables/NunjunksEngine.html":{},"coverage.html":{}}}],["src/plugins/nunjunks/core.ts:10",{"_index":1236,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:11",{"_index":1238,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:13",{"_index":1240,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:19",{"_index":1242,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:28",{"_index":1231,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:33",{"_index":1228,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:37",{"_index":1233,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:41",{"_index":1235,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/options.ts",{"_index":821,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/simple",{"_index":1024,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/typed",{"_index":1368,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/results/json.ts",{"_index":1067,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/results/json.ts:17",{"_index":1069,"title":{},"body":{"classes/JsonResult.html":{}}}],["src/results/json.ts:32",{"_index":1071,"title":{},"body":{"classes/JsonResult.html":{}}}],["src/results/render.ts",{"_index":1269,"title":{},"body":{"classes/RenderResult.html":{},"coverage.html":{}}}],["src/results/render.ts:20",{"_index":1270,"title":{},"body":{"classes/RenderResult.html":{}}}],["src/results/render.ts:27",{"_index":1271,"title":{},"body":{"classes/RenderResult.html":{}}}],["src/server.ts",{"_index":449,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/astroboycontext.ts",{"_index":4,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"coverage.html":{}}}],["src/services/astroboycontext.ts:11",{"_index":341,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:12",{"_index":344,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:13",{"_index":343,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:14",{"_index":340,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:15",{"_index":345,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:16",{"_index":342,"title":{},"body":{"interfaces/Contract.html":{}}}],["src/services/astroboycontext.ts:37",{"_index":34,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:41",{"_index":38,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:45",{"_index":40,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:47",{"_index":19,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:51",{"_index":24,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:56",{"_index":30,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:61",{"_index":28,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:66",{"_index":21,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:71",{"_index":32,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:76",{"_index":26,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/baseclass.ts",{"_index":82,"title":{},"body":{"classes/BaseClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/baseclass.ts:14",{"_index":87,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:15",{"_index":86,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:16",{"_index":85,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:18",{"_index":89,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:19",{"_index":92,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:20",{"_index":91,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:21",{"_index":88,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:22",{"_index":93,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:23",{"_index":90,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/configs.ts",{"_index":237,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/configs.ts:27",{"_index":1255,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:29",{"_index":1257,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:33",{"_index":1256,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:38",{"_index":1258,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/context.ts",{"_index":347,"title":{},"body":{"interfaces/Contract-2.html":{},"coverage.html":{}}}],["src/services/injector.ts",{"_index":353,"title":{},"body":{"interfaces/Contract-3.html":{},"coverage.html":{}}}],["src/services/injector.ts:6",{"_index":356,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["src/services/render.ts",{"_index":393,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["src/services/render.ts:15",{"_index":397,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:16",{"_index":400,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:20",{"_index":402,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:21",{"_index":403,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:34",{"_index":1266,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:36",{"_index":1268,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:38",{"_index":1259,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:52",{"_index":1260,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:54",{"_index":1261,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:55",{"_index":1262,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:59",{"_index":1263,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:60",{"_index":1264,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:65",{"_index":1265,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/scope.ts",{"_index":429,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"coverage.html":{}}}],["src/services/scope.ts:13",{"_index":1361,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:14",{"_index":1362,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:15",{"_index":1363,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:16",{"_index":1364,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:18",{"_index":1366,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:22",{"_index":1360,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:29",{"_index":1357,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:35",{"_index":1359,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:41",{"_index":1358,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:7",{"_index":432,"title":{},"body":{"interfaces/Contract-5.html":{}}}],["src/typings/icontext.ts",{"_index":695,"title":{},"body":{"interfaces/IContext.html":{},"coverage.html":{}}}],["src/typings/icontext.ts:12",{"_index":701,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:19",{"_index":698,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:27",{"_index":704,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:33",{"_index":700,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:5",{"_index":699,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:6",{"_index":702,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/iresult.ts",{"_index":866,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/typings/iresult.ts:29",{"_index":870,"title":{},"body":{"interfaces/IResult.html":{}}}],["src/typings/istatictyperesolver.ts",{"_index":1030,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"coverage.html":{}}}],["src/typings/istatictyperesolver.ts:10",{"_index":1044,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:15",{"_index":1041,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:17",{"_index":1046,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:22",{"_index":1042,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/iviewengine.ts",{"_index":1055,"title":{},"body":{"interfaces/IViewEngine.html":{},"coverage.html":{}}}],["src/typings/iviewengine.ts:4",{"_index":1058,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["src/typings/iviewengine.ts:5",{"_index":1060,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["src/utils.ts",{"_index":1515,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["srv",{"_index":534,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["stac",{"_index":1339,"title":{},"body":{"interfaces/Request.html":{}}}],["start",{"_index":436,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["startapp",{"_index":638,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["started",{"_index":1384,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttypecheck",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["state",{"_index":754,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":104,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/FactoryContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["static_resolver",{"_index":473,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["staticresolver",{"_index":1323,"title":{},"body":{"interfaces/Request.html":{}}}],["staticresolver.fromobject(value",{"_index":1353,"title":{},"body":{"interfaces/Request.html":{}}}],["stats",{"_index":319,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["stats.mtime.valueof",{"_index":321,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["stop",{"_index":438,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["string",{"_index":112,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(err",{"_index":1585,"title":{},"body":{"index.html":{}}}],["string(value",{"_index":1352,"title":{},"body":{"interfaces/Request.html":{}}}],["stringa",{"_index":1148,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stringa.tostring().localecompare(stringb.tostring",{"_index":1221,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stringb",{"_index":1146,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stropt",{"_index":1649,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1693,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicense",{"_index":1686,"title":{},"body":{"index.html":{},"license.html":{}}}],["substantial",{"_index":1699,"title":{},"body":{"index.html":{},"license.html":{}}}],["success",{"_index":939,"title":{},"body":{"interfaces/IRouter.html":{}}}],["such",{"_index":536,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["switch",{"_index":654,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{}}}],["symbol",{"_index":246,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["symbol(`config::${key",{"_index":252,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["symbol(key",{"_index":250,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["symbol\\(config::(.+)\\)$/.test(key",{"_index":598,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":368,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["target.__proto__",{"_index":1337,"title":{},"body":{"interfaces/Request.html":{}}}],["target.prototype",{"_index":806,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["target.prototype.__proto__",{"_index":1335,"title":{},"body":{"interfaces/Request.html":{}}}],["target[i",{"_index":385,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["target[key",{"_index":383,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["template",{"_index":58,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":1622,"title":{},"body":{"index.html":{}}}],["test/unit.ts",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["test02service",{"_index":1639,"title":{},"body":{"index.html":{}}}],["test_string_config",{"_index":1650,"title":{},"body":{"index.html":{}}}],["testcontroller",{"_index":1608,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":1633,"title":{},"body":{"index.html":{}}}],["testservice;astroboy.ts",{"_index":1637,"title":{},"body":{"index.html":{}}}],["test”代表controllers",{"_index":1624,"title":{},"body":{"index.html":{}}}],["text",{"_index":1035,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["there's",{"_index":537,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this._ctx",{"_index":349,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["this._init",{"_index":441,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this._views",{"_index":418,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["this.app",{"_index":67,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.app[\"config",{"_index":68,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.appbuilder",{"_index":504,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.appconfigs",{"_index":506,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.base",{"_index":1612,"title":{},"body":{"index.html":{}}}],["this.cancellationfilename",{"_index":149,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.cfg.get(nunjunks_options",{"_index":1246,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.character",{"_index":1182,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.code",{"_index":1172,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.compare(messagea",{"_index":1207,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.configs",{"_index":1085,"title":{},"body":{"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{}}}],["this.configs.cache",{"_index":1250,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.configs.get(demo_options);4",{"_index":1651,"title":{},"body":{"index.html":{}}}],["this.configs.get(env",{"_index":607,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.configs.get.bind(this.configs",{"_index":683,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.configs.set(e1",{"_index":522,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.configs.toarray().foreach",{"_index":596,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.content",{"_index":1176,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.context.ctx",{"_index":64,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.createenv(configs).render(name",{"_index":1252,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.createenv(configs).renderstring(tpl",{"_index":1254,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.ctx",{"_index":65,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx).app",{"_index":66,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.callservice(...args",{"_index":76,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getconfig(...args",{"_index":73,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getlib(...args",{"_index":78,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getservice(...args",{"_index":75,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.getserviceclass(...args",{"_index":74,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.ctx.invokeservicemethod(...args",{"_index":77,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{}}}],["this.di.complete",{"_index":627,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.dispose(scopeid",{"_index":680,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.get(configs",{"_index":672,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.get(injectservice",{"_index":671,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.get(token",{"_index":679,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.register",{"_index":669,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.register(token",{"_index":668,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.resetconfigs",{"_index":608,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.directinject(injectscope.scope",{"_index":593,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.file",{"_index":1178,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.finalinjectionsinit",{"_index":573,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.init",{"_index":419,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["this.initconfigcollection",{"_index":635,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initcontextprovider",{"_index":637,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initinjections",{"_index":631,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initinjectservice",{"_index":636,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initoptions",{"_index":630,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initrouters",{"_index":632,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.iscancellationrequested",{"_index":166,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.iscancelled",{"_index":148,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.isdiagnostictype",{"_index":1222,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.lastcancellationchecktime",{"_index":150,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.line",{"_index":1180,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.loader",{"_index":1251,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.map.get(token.key",{"_index":259,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["this.map.set(token.key",{"_index":257,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["this.option(...args",{"_index":618,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(config_view",{"_index":580,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(env",{"_index":579,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(global_error",{"_index":587,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(json_result_options",{"_index":581,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(nunjunks_options",{"_index":585,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(render_result_options",{"_index":582,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(router_options",{"_index":584,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(simple_logger_options",{"_index":586,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(static_resolver",{"_index":583,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(token",{"_index":599,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinit",{"_index":507,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinject(injectscope.new",{"_index":570,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinject(injectscope.scope",{"_index":560,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinject(injectscope.singleton",{"_index":567,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.prescopeds.foreach(([token",{"_index":623,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.prescopeds.push([args[0",{"_index":656,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.presingletons.foreach(([token",{"_index":620,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.presingletons.push([args[0",{"_index":660,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preuniques.foreach(([token",{"_index":625,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preuniques.push([args[0",{"_index":661,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.readconfigs(app[\"config",{"_index":642,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.readruntimeenv(app",{"_index":643,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.resetdiresolver",{"_index":644,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.resolvebundles",{"_index":645,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.resolveinjections",{"_index":646,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.rs.views",{"_index":1253,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.scoped(...args",{"_index":614,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(astroboycontext",{"_index":590,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(context",{"_index":674,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(injectservice",{"_index":678,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(scope",{"_index":591,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scopeid",{"_index":439,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.sendinjection(args[0",{"_index":664,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.sendinjection(token",{"_index":621,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.severity",{"_index":1174,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.singleton(...args",{"_index":612,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.singleton(configs",{"_index":682,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.singleton(simplelogger",{"_index":592,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.start",{"_index":443,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.start.gettime",{"_index":447,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.startapp(events",{"_index":574,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.stop",{"_index":445,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.stop.gettime",{"_index":446,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.type",{"_index":1170,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.typescript.operationcanceledexception",{"_index":167,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.unique(...args",{"_index":616,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.value",{"_index":1086,"title":{},"body":{"classes/JsonResult.html":{},"index.html":{}}}],["this[\"@configs",{"_index":1245,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this[\"@loader",{"_index":1247,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this[$$injector",{"_index":1322,"title":{},"body":{"interfaces/Request.html":{}}}],["this[internal_injector",{"_index":1314,"title":{},"body":{"interfaces/Request.html":{}}}],["throught",{"_index":563,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["throw",{"_index":145,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"miscellaneous/variables.html":{}}}],["throwifcancellationrequested",{"_index":109,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["throwonundefined",{"_index":825,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":156,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["timplement",{"_index":542,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["tinject",{"_index":533,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["title",{"_index":748,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["tk",{"_index":803,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["toarray",{"_index":261,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"classes/RealConfigCollection.html":{}}}],["tojson",{"_index":110,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/TypedSerializerCreator.html":{}}}],["tojson(obj",{"_index":1043,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["token",{"_index":238,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/RealConfigCollection.html":{}}}],["token.key.tostring",{"_index":597,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["token_implement",{"_index":652,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["tokengenerator",{"_index":248,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toobject",{"_index":1037,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["toobject(obj",{"_index":1045,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["toresult",{"_index":867,"title":{},"body":{"interfaces/IResult.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["toresult(scope",{"_index":868,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{}}}],["toresult(undefined",{"_index":1070,"title":{},"body":{"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["tort",{"_index":1720,"title":{},"body":{"index.html":{},"license.html":{}}}],["tos",{"_index":426,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tosave",{"_index":424,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tosnake",{"_index":414,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tostring",{"_index":367,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["tp",{"_index":804,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["tpl",{"_index":785,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"miscellaneous/variables.html":{}}}],["tplkey",{"_index":1083,"title":{},"body":{"classes/JsonResult.html":{}}}],["tpls",{"_index":1007,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["tplstr",{"_index":739,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["trace",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":974,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["transpile",{"_index":177,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trimblocks",{"_index":826,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":146,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/INunjunksRenderOptions.html":{},"injectables/Render.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":138,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["trycatchglobalerror",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["trycatchglobalerror(injector",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trygetroutemagic",{"_index":1301,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["trygetroutemagic(prototype",{"_index":979,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["trygetrouter",{"_index":966,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["trygetrouter(prototype",{"_index":986,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["trygetroutermagic",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["trygetroutermagic(prototype",{"_index":980,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["ts",{"_index":70,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts2",{"_index":1627,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":178,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.compileroptions",{"_index":282,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tsconfig.json",{"_index":952,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":275,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tslint.configuration.loadconfigurationfrompath",{"_index":296,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tslint:disable",{"_index":290,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tsnode",{"_index":1454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ttoken",{"_index":541,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["turn",{"_index":897,"title":{},"body":{"interfaces/IRouter.html":{}}}],["turnlod",{"_index":943,"title":{},"body":{"interfaces/IRouter.html":{}}}],["type",{"_index":247,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["type_diagnostic",{"_index":1106,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["type_lint",{"_index":1107,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typea",{"_index":1156,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typealiases",{"_index":1729,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeb",{"_index":1154,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typeb].map(type",{"_index":1212,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typecheck",{"_index":179,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["typed",{"_index":1034,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["typedserializer",{"_index":477,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedserializercreator",{"_index":1367,"title":{"classes/TypedSerializerCreator.html":{}},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":59,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["types",{"_index":996,"title":{},"body":{"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["types/koa",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":115,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/FactoryContext.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typescript.compileroptions",{"_index":279,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.createcompilerhost(programconfig.options",{"_index":307,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.createprogram",{"_index":333,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.parsedcommandline",{"_index":299,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.parsejsonconfigfilecontent",{"_index":284,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.program",{"_index":305,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.readconfigfile",{"_index":280,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.sys",{"_index":285,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.sys.readfile",{"_index":281,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript3.2",{"_index":1562,"title":{},"body":{"index.html":{}}}],["typetransform",{"_index":1350,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["typetransform(staticresolver",{"_index":1349,"title":{},"body":{"interfaces/Request.html":{}}}],["typings/icontext",{"_index":47,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["typings/iresult",{"_index":861,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["typings/istatictyperesolver",{"_index":862,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{}}}],["typings/iviewengine",{"_index":745,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{}}}],["undefined",{"_index":183,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":562,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["unique(...args",{"_index":569,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["unique(srv",{"_index":568,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["uniques",{"_index":688,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":832,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"index.html":{}}}],["urlroot",{"_index":911,"title":{},"body":{"interfaces/IRouter.html":{}}}],["use",{"_index":337,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/RenderResultOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usestatic",{"_index":975,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["ut",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["utils",{"_index":410,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["uuid",{"_index":133,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"dependencies.html":{}}}],["v",{"_index":1341,"title":{},"body":{"interfaces/Request.html":{},"index.html":{}}}],["v1",{"_index":1600,"title":{},"body":{"index.html":{}}}],["v1/prj",{"_index":957,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["value",{"_index":239,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{}}}],["value.bind(this)(...params",{"_index":1326,"title":{},"body":{"interfaces/Request.html":{}}}],["variable",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1737,"title":{"miscellaneous/variables.html":{}},"body":{}}],["verbose",{"_index":180,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["view",{"_index":1053,"title":{},"body":{"interfaces/IView.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":394,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["void",{"_index":120,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["w",{"_index":937,"title":{},"body":{"interfaces/IRouter.html":{}}}],["want",{"_index":555,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["warn",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warning",{"_index":1129,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["warranties",{"_index":1706,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":1701,"title":{},"body":{"index.html":{},"license.html":{}}}],["watch",{"_index":181,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["watcher",{"_index":302,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["watcher.iswatchingfile(filepath",{"_index":318,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["watching",{"_index":314,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["way",{"_index":1200,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["webpack",{"_index":1599,"title":{},"body":{"index.html":{}}}],["well",{"_index":549,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["whether",{"_index":1719,"title":{},"body":{"index.html":{},"license.html":{}}}],["white",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whitespace",{"_index":1078,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":1564,"title":{},"body":{"index.html":{}}}],["without",{"_index":521,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":1582,"title":{},"body":{"index.html":{}}}],["woshinidie",{"_index":1648,"title":{},"body":{"index.html":{}}}],["x1b[0m",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[31m\\x1b[1m",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[32m",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[33m",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[34m",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[35m",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[36m",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[37m",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f31f",{"_index":576,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["x1f31f;astroboy.ts",{"_index":1561,"title":{},"body":{"index.html":{}}}],["x1f628",{"_index":1563,"title":{},"body":{"index.html":{}}}],["xpath",{"_index":1274,"title":{},"body":{"classes/RenderResult.html":{}}}],["yellow",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AstroboyContext.html":{"url":"injectables/AstroboyContext.html","title":"injectable - AstroboyContext","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  AstroboyContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/AstroboyContext.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy.ts基础上下文服务\n\nctx 承载Koa.Context，可定制类型\napp 承载Koa.Application，可定制类型\nconfig 承载业务config，可定制类型\n\n\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                callService\n                            \n                            \n                                getConfig\n                            \n                            \n                                getLib\n                            \n                            \n                                getService\n                            \n                            \n                                getServiceClass\n                            \n                            \n                                invokeServiceMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ctx\n                                \n                                \n                                    app\n                                \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                被定义在 src/services/AstroboyContext.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    Context\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        ctx\n                    \n                \n\n                \n                    \n                        getctx()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:37\n                                \n                            \n                    \n                        \n                                BaseClass.ctx \n\n\n                                \n                                    返回 :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        app\n                    \n                \n\n                \n                    \n                        getapp()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:41\n                                \n                            \n                    \n                        \n                                BaseClass.app \n\n\n                                \n                                    返回 :     A\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:45\n                                \n                            \n                    \n                        \n                                BaseClass.config \n\n\n                                \n                                    返回 :     C\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import Koa from \"koa\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { IContext } from \"../typings/IContext\";\nimport { Context } from \"./Context\";\n\nexport namespace AstroboyContext {\n  export interface Contract {\n    readonly ctx: T;\n    readonly app: A;\n    readonly config: C;\n    getConfig(...args: any[]): any;\n    getServiceClass(...args: any[]): any;\n    getService(...args: any[]): any;\n    callService(...args: any[]): any;\n    invokeServiceMethod(...args: any[]): any;\n    getLib(...args: any[]): any;\n  }\n}\n\n/**\n * ## Astroboy.ts基础上下文服务\n * * `ctx` 承载Koa.Context，可定制类型\n * * `app` 承载Koa.Application，可定制类型\n * * `config` 承载业务config，可定制类型\n * @description\n * @author Big Mogician\n * @export\n * @class AstroboyContext\n * @template T typeof `ctx` 类型\n * @template A typeof `app` 类型\n * @template C typeof `config` 类型\n */\n@Injectable()\nexport class AstroboyContext\n  implements AstroboyContext.Contract {\n  /** BaseClass.ctx */\n  public get ctx(): T {\n    return this.context.ctx || {};\n  }\n  /** BaseClass.app */\n  public get app(): A {\n    return (this.ctx && (this.ctx).app) || {};\n  }\n  /** BaseClass.config */\n  public get config(): C {\n    return (this.app && this.app[\"config\"]) || {};\n  }\n\n  constructor(protected context: Context) {}\n\n  getConfig(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getConfig(...args);\n  }\n\n  getServiceClass(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getServiceClass(...args);\n  }\n\n  getService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getService(...args);\n  }\n\n  callService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.callService(...args);\n  }\n\n  invokeServiceMethod(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.invokeServiceMethod(...args);\n  }\n\n  getLib(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getLib(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseClass.html":{"url":"classes/BaseClass.html","title":"class - BaseClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseClass\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/BaseClass.ts\n        \n\n            \n                描述\n            \n            \n                基础astroboy类\n\n不建议在astroboy.ts的体系中使用\n完整功能替代：AstroboyContext服务\n\n\n            \n\n\n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                ctx\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                callService\n                            \n                            \n                                getConfig\n                            \n                            \n                                getLib\n                            \n                            \n                                getService\n                            \n                            \n                                getServiceClass\n                            \n                            \n                                invokeServiceMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(ctx: Koa.Context)\n                    \n                \n                        \n                            \n                                被定义在 src/services/BaseClass.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                    Koa.Context\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Koa\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     any\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Koa.Context\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import Koa from \"koa\";\nimport { BaseClass as C } from \"astroboy\";\n\n/**\n * ## 基础astroboy类\n * * 不建议在astroboy.ts的体系中使用\n * * 完整功能替代：AstroboyContext服务\n * @description\n * @author Big Mogician\n * @export\n * @class BaseClass\n */\ndeclare class BaseClass {\n  public ctx: Koa.Context;\n  public app: Koa;\n  public config: any;\n  constructor(ctx: Koa.Context);\n  getConfig(...args): any;\n  getServiceClass(...args): any;\n  getService(...args): any;\n  callService(...args): any;\n  invokeServiceMethod(...args): any;\n  getLib(...args): any;\n}\n\nconst BC: typeof BaseClass = C;\n\nexport { BC as BaseClass };\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CancellationToken.html":{"url":"classes/CancellationToken.html","title":"class - CancellationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CancellationToken\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/CancellationToken.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancellationFileName\n                            \n                            \n                                    Private\n                                isCancelled\n                            \n                            \n                                    Private\n                                lastCancellationCheckTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cleanupCancellation\n                            \n                            \n                                    Static\n                                createFromJSON\n                            \n                            \n                                    Public\n                                getCancellationFilePath\n                            \n                            \n                                    Public\n                                isCancellationRequested\n                            \n                            \n                                    Public\n                                requestCancellation\n                            \n                            \n                                    Public\n                                throwIfCancellationRequested\n                            \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(typescript, cancellationFileName?: string, isCancelled?: boolean)\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/utils/CancellationToken.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typescript\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancellationFileName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        isCancelled\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cancellationFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isCancelled\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     boolean\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastCancellationCheckTime\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cleanupCancellation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanupCancellation()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createFromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFromJSON(typescript, json: CancellationTokenData)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typescript\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        json\n                                                        \n                                                                    CancellationTokenData\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     CancellationToken\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCancellationFilePath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCancellationFilePath()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isCancellationRequested\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isCancellationRequested()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestCancellation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        requestCancellation()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            throwIfCancellationRequested\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        throwIfCancellationRequested()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toJSON()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     { cancellationFileName: string; isCancelled: boolean; }\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as ts from \"typescript\";\nimport uuid = require(\"uuid/v4\");\n\nfunction existsSync(filePath: fs.PathLike) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === \"ENOENT\") {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return true;\n}\n\ninterface CancellationTokenData {\n  isCancelled: boolean;\n  cancellationFileName: string;\n}\n\nexport class CancellationToken {\n  private isCancelled: boolean;\n  private cancellationFileName: string;\n  private lastCancellationCheckTime: number;\n  constructor(\n    private typescript: typeof ts,\n    cancellationFileName?: string,\n    isCancelled?: boolean\n  ) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || uuid();\n    this.lastCancellationCheckTime = 0;\n  }\n\n  public static createFromJSON(\n    typescript: typeof ts,\n    json: CancellationTokenData\n  ) {\n    return new CancellationToken(\n      typescript,\n      json.cancellationFileName,\n      json.isCancelled\n    );\n  }\n\n  public toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  public getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  public isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  public throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  public requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), \"\");\n    this.isCancelled = true;\n  }\n\n  public cleanupCancellation() {\n    if (this.isCancelled && existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CancellationTokenData.html":{"url":"interfaces/CancellationTokenData.html","title":"interface - CancellationTokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CancellationTokenData\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/CancellationToken.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cancellationFileName\n                                \n                                \n                                        isCancelled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        cancellationFileName\n                                    \n                                \n                                \n                                    \n                                        cancellationFileName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCancelled\n                                    \n                                \n                                \n                                    \n                                        isCancelled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as ts from \"typescript\";\nimport uuid = require(\"uuid/v4\");\n\nfunction existsSync(filePath: fs.PathLike) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === \"ENOENT\") {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return true;\n}\n\ninterface CancellationTokenData {\n  isCancelled: boolean;\n  cancellationFileName: string;\n}\n\nexport class CancellationToken {\n  private isCancelled: boolean;\n  private cancellationFileName: string;\n  private lastCancellationCheckTime: number;\n  constructor(\n    private typescript: typeof ts,\n    cancellationFileName?: string,\n    isCancelled?: boolean\n  ) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || uuid();\n    this.lastCancellationCheckTime = 0;\n  }\n\n  public static createFromJSON(\n    typescript: typeof ts,\n    json: CancellationTokenData\n  ) {\n    return new CancellationToken(\n      typescript,\n      json.cancellationFileName,\n      json.isCancelled\n    );\n  }\n\n  public toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  public getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  public isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  public throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  public requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), \"\");\n    this.isCancelled = true;\n  }\n\n  public cleanupCancellation() {\n    if (this.isCancelled && existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CmdConfig.html":{"url":"interfaces/CmdConfig.html","title":"interface - CmdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CmdConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        debug\n                                \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        ignore\n                                \n                                \n                                            可选的\n                                        inspect\n                                \n                                \n                                            可选的\n                                        mock\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                                \n                                            可选的\n                                        transpile\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                                \n                                            可选的\n                                        typeCheck\n                                \n                                \n                                            可选的\n                                        verbose\n                                \n                                \n                                            可选的\n                                        watch\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     IENV\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     IENV\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignore\n                                    \n                                \n                                \n                                    \n                                        ignore:     string[] | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[] | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inspect\n                                    \n                                \n                                \n                                    \n                                        inspect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     boolean | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transpile\n                                    \n                                \n                                \n                                    \n                                        transpile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeCheck\n                                    \n                                \n                                \n                                    \n                                        typeCheck:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        verbose:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                    \n                                \n                                \n                                    \n                                        watch:     string[] | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[] | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CommandPlugin.html":{"url":"interfaces/CommandPlugin.html","title":"interface - CommandPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CommandPlugin\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        description\n                                \n                                \n                                        help\n                                \n                                \n                                        name\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        help\n                                    \n                                \n                                \n                                    \n                                        help:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Array<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Array<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Config\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     Env\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Env\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Config-1.html":{"url":"interfaces/Config-1.html","title":"interface - Config-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Config\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     Env\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Env\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigEntry.html":{"url":"interfaces/ConfigEntry.html","title":"interface - ConfigEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigEntry\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     ConfigToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ConfigToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigToken.html":{"url":"interfaces/ConfigToken.html","title":"interface - ConfigToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigToken\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     symbol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     symbol\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigurationFile.html":{"url":"interfaces/ConfigurationFile.html","title":"interface - ConfigurationFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigurationFile\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/typeCheck.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        linterOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        linterOptions\n                                    \n                                \n                                \n                                    \n                                        linterOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as typescript from \"typescript\";\nimport { Configuration } from \"tslint\";\nimport path from \"path\";\n\nexport function loadProgramConfig(\n  configFile: string,\n  compilerOptions: typescript.CompilerOptions\n) {\n  const tsconfig = typescript.readConfigFile(\n    configFile,\n    typescript.sys.readFile\n  ).config;\n\n  tsconfig.compilerOptions = tsconfig.compilerOptions || {};\n  tsconfig.compilerOptions = {\n    ...tsconfig.compilerOptions,\n    ...compilerOptions\n  };\n\n  const parsed = typescript.parseJsonConfigFileContent(\n    tsconfig,\n    typescript.sys,\n    path.dirname(configFile)\n  );\n\n  return parsed;\n}\n\ninterface ConfigurationFile extends Configuration.IConfigurationFile {\n  linterOptions?: {\n    typeCheck?: boolean;\n    exclude?: string[];\n  };\n}\n\nexport function loadLinterConfig(configFile: string): ConfigurationFile {\n  // tslint:disable-next-line:no-implicit-dependencies\n  const tslint = require(\"tslint\");\n\n  return tslint.Configuration.loadConfigurationFromPath(\n    configFile\n  ) as ConfigurationFile;\n}\n\nexport function createProgram(\n  programConfig: typescript.ParsedCommandLine,\n  //   files: FilesRegister,\n  //   watcher: FilesWatcher,\n  oldProgram?: typescript.Program\n) {\n  const host = typescript.createCompilerHost(programConfig.options);\n  //   const realGetSourceFile = host.getSourceFile;\n\n  //   host.getSourceFile = (filePath, languageVersion, onError) => {\n  // first check if watcher is watching file - if not - check it's mtime\n  // if (!watcher.isWatchingFile(filePath)) {\n  //   try {\n  //     const stats = fs.statSync(filePath);\n\n  //     files.setMtime(filePath, stats.mtime.valueOf());\n  //   } catch (e) {\n  //     // probably file does not exists\n  //     files.remove(filePath);\n  //   }\n  // }\n\n  // // get source file only if there is no source in files register\n  // if (!files.has(filePath) || !files.getData(filePath).source) {\n  //   files.mutateData(filePath, data => {\n  //     data.source = realGetSourceFile(filePath, languageVersion, onError);\n  //   });\n  // }\n\n  // return files.getData(filePath).source;\n  //   };\n\n  return typescript.createProgram(\n    programConfig.fileNames,\n    programConfig.options,\n    host,\n    oldProgram // re-use old program\n  );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract.html":{"url":"interfaces/Contract.html","title":"interface - Contract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/AstroboyContext.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app\n                                \n                                \n                                        config\n                                \n                                \n                                        ctx\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    callService\n                                \n                                \n                                    getConfig\n                                \n                                \n                                    getLib\n                                \n                                \n                                    getService\n                                \n                                \n                                    getServiceClass\n                                \n                                \n                                    invokeServiceMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:     A\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     A\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     C\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { IContext } from \"../typings/IContext\";\nimport { Context } from \"./Context\";\n\nexport namespace AstroboyContext {\n  export interface Contract {\n    readonly ctx: T;\n    readonly app: A;\n    readonly config: C;\n    getConfig(...args: any[]): any;\n    getServiceClass(...args: any[]): any;\n    getService(...args: any[]): any;\n    callService(...args: any[]): any;\n    invokeServiceMethod(...args: any[]): any;\n    getLib(...args: any[]): any;\n  }\n}\n\n/**\n * ## Astroboy.ts基础上下文服务\n * * `ctx` 承载Koa.Context，可定制类型\n * * `app` 承载Koa.Application，可定制类型\n * * `config` 承载业务config，可定制类型\n * @description\n * @author Big Mogician\n * @export\n * @class AstroboyContext\n * @template T typeof `ctx` 类型\n * @template A typeof `app` 类型\n * @template C typeof `config` 类型\n */\n@Injectable()\nexport class AstroboyContext\n  implements AstroboyContext.Contract {\n  /** BaseClass.ctx */\n  public get ctx(): T {\n    return this.context.ctx || {};\n  }\n  /** BaseClass.app */\n  public get app(): A {\n    return (this.ctx && (this.ctx).app) || {};\n  }\n  /** BaseClass.config */\n  public get config(): C {\n    return (this.app && this.app[\"config\"]) || {};\n  }\n\n  constructor(protected context: Context) {}\n\n  getConfig(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getConfig(...args);\n  }\n\n  getServiceClass(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getServiceClass(...args);\n  }\n\n  getService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getService(...args);\n  }\n\n  callService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.callService(...args);\n  }\n\n  invokeServiceMethod(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.invokeServiceMethod(...args);\n  }\n\n  getLib(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getLib(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-1.html":{"url":"interfaces/Contract-1.html","title":"interface - Contract-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n            \n                继承\n            \n            \n                    ReadonlyConfigs\n            \n\n\n\n\n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-2.html":{"url":"interfaces/Contract-2.html","title":"interface - Contract-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Context.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctx\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport { IContext } from \"../typings/IContext\";\n\nexport namespace Context {\n  export interface Contract {\n    ctx: T;\n  }\n}\n\n/**\n * ## 基础上下文服务\n * @description\n * @author Big Mogician\n * @export\n * @class Context\n * @template T typeof `ctx` 类型\n */\nexport class Context implements Context.Contract {\n  /**\n   * ### Koa上下文对象\n   * * 有可能被astroboy和后续框架扩展\n   * @description\n   * @readonly\n   * @type {T} 聚合类型\n   * @memberof Context\n   */\n  public get ctx(): T {\n    return this._ctx;\n  }\n  constructor(private _ctx: Koa.Context) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-3.html":{"url":"interfaces/Contract-3.html","title":"interface - Contract-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Injector.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scopeId\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(token: InjectDIToken)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Injector.ts:6\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    InjectDIToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        scopeId\n                                    \n                                \n                                \n                                    \n                                        scopeId:     ScopeID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ScopeID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectDIToken, ScopeID } from \"@bonbons/di\";\n\nexport namespace InjectService {\n  export interface Contract {\n    readonly scopeId: ScopeID;\n    get(token: InjectDIToken): T;\n  }\n}\n\n/**\n * ## 依赖注入服务\n * * 手动注入器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class InjectService\n */\nexport abstract class InjectService implements InjectService.Contract {\n  abstract readonly scopeId: ScopeID;\n  /**\n   * ### 解析并获得类型实例\n   * * 有可能为null\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {InjectDIToken} token\n   * @returns {T}\n   * @memberof InjectService\n   */\n  abstract get(token: InjectDIToken): T;\n  protected abstract INTERNAL_dispose(): void;\n}\n\n/**\n * ## 创建DI多重继承\n * * Proxy实现，只适合作为顶层服务存在\n * * 自定义多重先祖的优先级顺序\n * * 手动实现重载逻辑(如有必要)\n * * 不支持`deleteProperty`,`defineProperty`\n * * 不要使用`prop in object`来检查属性\n * * 不支持`toString`\n * * 不支持序列化\n * @description\n * @author Big Mogician\n * @export\n * @template T 对象DI类型\n * @param {T} target 当前对象\n * @param {string[]} depts 所有祖先实例在内部的字段名\n */\nexport function createInjectMixin(\n  target: T,\n  depts: string[]\n): T;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1]\n): T & P1;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2]\n): T & P1 & P2;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2, P3]\n): T & P1 & P2 & P3;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2, P3, P4]\n): T & P1 & P2 & P3 & P4;\nexport function createInjectMixin(\n  target: T,\n  ...depts: any[]\n): T;\nexport function createInjectMixin(...args: any[]) {\n  const [target, ...others] = args;\n  if (others[0] instanceof Array) {\n    return createProxyByKeys(target, others[0]);\n  } else {\n    return createProxyByDepts(target, others);\n  }\n}\n\nfunction createProxyByDepts(target: T, depts: any[]) {\n  return new Proxy(target, {\n    get(target, key) {\n      if (target[key]) return target[key];\n      for (let index = 0; index (target: T, depts: string[]) {\n  return new Proxy(target, {\n    get(target, key) {\n      if (target[key]) return target[key];\n      for (let index = 0; index  target[i]));\n      return Object.keys(ms);\n    },\n    ownKeys(target) {\n      const ms = Object.assign({}, target, ...depts.map(i => target[i]));\n      return Object.keys(ms);\n    },\n    has(target, key) {\n      let has = key in target;\n      if (has) return true;\n      for (let index = 0; index \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-4.html":{"url":"interfaces/Contract-4.html","title":"interface - Contract-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        views\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(obj: literal type, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(key: string, obj: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(key: string, obj: any, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-5.html":{"url":"interfaces/Contract-5.html","title":"interface - Contract-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Scope.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    diration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diration\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiration()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ScopeID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ScopeID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"../decorators/injectable\";\nimport { ScopeID } from \"@bonbons/di\";\n\nexport namespace Scope {\n  export interface Contract {\n    readonly id: ScopeID;\n    diration(): number;\n  }\n}\n\n@Injectable()\nexport class Scope implements Scope.Contract {\n  private _init = false;\n  private scopeId!: ScopeID;\n  private start!: Date;\n  private stop!: Date;\n\n  public get id() {\n    return this.scopeId;\n  }\n\n  protected init(id: ScopeID) {\n    if (this._init) return this;\n    this._init = true;\n    this.scopeId = id;\n    return this;\n  }\n\n  protected begin() {\n    if (!this.start) {\n      this.start = new Date();\n    }\n  }\n\n  protected end() {\n    if (!this.stop) {\n      this.stop = new Date();\n    }\n  }\n\n  public diration() {\n    if (this.start && this.stop) {\n      return this.stop.getTime() - this.start.getTime();\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Env\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    E\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Env-1.html":{"url":"interfaces/Env-1.html","title":"interface - Env-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Env\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    E\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/FactoryContext.html":{"url":"interfaces/FactoryContext.html","title":"interface - FactoryContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  FactoryContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/server.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        injector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Configs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Configs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport Astroboy from \"astroboy\";\nimport { Context } from \"./services/Context\";\nimport { InjectService } from \"./services/Injector\";\nimport { AstroboyContext } from \"./services/AstroboyContext\";\nimport { Scope } from \"./services/Scope\";\nimport { GlobalDI, optionAssign, PartReset, ChangeReturn } from \"./utils\";\nimport {\n  Constructor,\n  InjectScope,\n  ScopeID,\n  InjectToken,\n  AbstractType,\n  ImplementType,\n  DIContainer\n} from \"@bonbons/di\";\nimport { ENV, defaultEnv, CONFIG_VIEW, defaultView } from \"./configs\";\nimport {\n  defaultJsonResultOptions,\n  JSON_RESULT_OPTIONS,\n  InnerRouterOptions,\n  ROUTER_OPTIONS,\n  defaultRouterOptions,\n  RENDER_RESULT_OPTIONS,\n  defaultRenderResultOptions,\n  STATIC_RESOLVER,\n  defaultGlobalError,\n  GLOBAL_ERROR\n} from \"./options\";\nimport { RealConfigCollection, ConfigToken, Configs } from \"./services/Configs\";\nimport { TypedSerializer } from \"./plugins/typed-serializer\";\nimport {\n  NunjunksEngine,\n  NUNJUNKS_OPTIONS,\n  defaultNunjunksOptions\n} from \"./plugins/nunjunks\";\nimport {\n  SimpleLogger,\n  SIMPLE_LOGGER_OPTIONS,\n  defaultSimpleLoggerOptions\n} from \"./plugins/simple-logger\";\nimport { Render } from \"./services/Render\";\nimport { initRouters } from \"./builders\";\n\ntype DIPair = [any, any];\n\nexport interface FactoryContext {\n  injector: InjectService;\n  configs: Configs;\n}\n\n/**\n * ## astroboy.ts服务\n * @description\n * @module Server\n * @author Big Mogician\n * @export\n * @class Server\n */\nexport class Server {\n  private di = GlobalDI;\n  private configs = new RealConfigCollection();\n\n  private preSingletons: DIPair[] = [];\n  private preScopeds: DIPair[] = [];\n  private preUniques: DIPair[] = [];\n\n  private appBuilder!: Constructor;\n  private appConfigs!: any;\n\n  constructor();\n  constructor(appBuilder: Constructor);\n  constructor(appConfigs: any);\n  constructor(appBuilder: Constructor, appConfigs: any);\n  constructor(...args: any[]) {\n    const [ctor, configs] = args;\n    if (!ctor) {\n      this.appBuilder = Astroboy;\n    } else if (ctor.prototype === undefined) {\n      this.appBuilder = Astroboy;\n      this.appConfigs = ctor;\n    } else {\n      this.appBuilder = ctor;\n      this.appConfigs = configs;\n    }\n    this.preInit();\n  }\n\n  /**\n   * ### 创建一个新的应用\n   * @description\n   * @author Big Mogician\n   * @static\n   * @param {Constructor?} ctor astroboy或者其继承\n   * @param {*?} [configs] astroboy启动配置\n   * @returns\n   * @memberof Server\n   */\n  public static Create(): Server;\n  public static Create(ctor: Constructor): Server;\n  public static Create(configs: any): Server;\n  public static Create(ctor: Constructor, configs: any): Server;\n  public static Create(ctor?: Constructor, configs?: any) {\n    return new Server(ctor, configs);\n  }\n\n  /**\n   * ### 声明一个配置项\n   * * 仅声明，不设置默认值\n   * @description\n   * @author Big Mogician\n   * @template T\n   * @param {token: ConfigToken} token\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public option(token: ConfigToken): this;\n  /**\n   * ### 注入一个配置项\n   * * 需要设置默认值\n   * @description\n   * @author Big Mogician\n   * @template T\n   * @param {ConfigToken} token\n   * @param {Partial} value\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public option(token: ConfigToken, value: Partial): this;\n  public option(...args: any[]): this {\n    const [e1, e2] = args;\n    if (!e1) {\n      throw new Error(\n        \"DI token or entry is empty, you shouldn't call BonbonsServer.use(...) without any param.\"\n      );\n    }\n    this.configs.set(e1, optionAssign(this.configs, e1, e2 || {}));\n    return this;\n  }\n\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with constructor.\n   * All scoped services will be created new instance in different request pipe\n   *\n   * @description\n   * @author Big Mogician\n   * @template TInject\n   * @param {Constructor} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(srv: Constructor): this;\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service constructor. All\n   * scoped services will be created new instance in different request pipe.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {ImplementToken} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(\n    token: AbstractType,\n    srv: ImplementType\n  ): this;\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service instance factory\n   * ( pure function with no side effects).\n   * All scoped services will be created new instance in different request pipe.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {(context: FactoryContext) => TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(\n    token: AbstractType,\n    srv: (context: FactoryContext) => TImplement\n  ): this;\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and a well-created implement service instance.\n   * All scoped services will be created new\n   * instance in different request pipe (but injecting by instance means\n   * the instance may be changed in runtime, so please be careful. If you\n   * want to prevent this situation, use a service factory here).\n   *\n   * @description\n   * @author Big Mogician\n   * @template TInject\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(\n    token: AbstractType,\n    srv: TImplement\n  ): this;\n  public scoped(...args: any[]): this {\n    return this.preInject(InjectScope.Scope, args);\n  }\n\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with constructor.\n   * All singleton services will use unique instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TInject\n   * @param {Constructor} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(srv: Constructor): this;\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service constructor.\n   * All singleton services will use unique\n   * instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {ImplementToken} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(\n    token: AbstractType,\n    srv: ImplementType\n  ): this;\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service factory ( pure function with no side effects).\n   * All singleton services will use unique\n   * instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {(context: FactoryContext) => TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(\n    token: AbstractType,\n    srv: (context: FactoryContext) => TImplement\n  ): this;\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and a well-created implement service instance.\n   * All singleton services will use unique\n   * instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(\n    token: AbstractType,\n    srv: TImplement\n  ): this;\n  public singleton(...args: any[]): this {\n    return this.preInject(InjectScope.Singleton, args);\n  }\n\n  public unique(srv: Constructor): this;\n  public unique(\n    token: AbstractType,\n    srv: ImplementType\n  ): this;\n  public unique(\n    token: AbstractType,\n    srv: (context: FactoryContext) => TImplement\n  ): this;\n  public unique(\n    token: AbstractType,\n    srv: TImplement\n  ): this;\n  public unique(...args: any[]): this {\n    return this.preInject(InjectScope.New, args);\n  }\n\n  /**\n   * ### 启动app\n   * @description\n   * @author Big Mogician\n   * @param {Partial void;\n   *     onError: (error, ctx) => void;\n   *   }>} [events]\n   * @memberof Server\n   */\n  public run(\n    events?: Partial void;\n      onError: (error, ctx) => void;\n    }>\n  ) {\n    this.init();\n    this.finalInjectionsInit();\n    this.startApp(events);\n  }\n\n  //#region 支持继承树覆写和扩展\n\n  /**\n   * ## 初始化Configs配置\n   * * &#x1F31F; 在继承树中重载此方法以进行框架扩展\n   * * 在 `Server.prototype.initInjections` 函数之前执行\n   *\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected initOptions() {\n    this.option(ENV, defaultEnv);\n    this.option(CONFIG_VIEW, defaultView);\n    this.option(JSON_RESULT_OPTIONS, defaultJsonResultOptions);\n    this.option(RENDER_RESULT_OPTIONS, defaultRenderResultOptions);\n    this.option(STATIC_RESOLVER, TypedSerializer);\n    this.option(ROUTER_OPTIONS, defaultRouterOptions);\n    this.option(NUNJUNKS_OPTIONS, defaultNunjunksOptions);\n    this.option(SIMPLE_LOGGER_OPTIONS, defaultSimpleLoggerOptions);\n    this.option(GLOBAL_ERROR, defaultGlobalError);\n  }\n\n  /**\n   * ## 初始化DI注入关系配置\n   * * &#x1F31F; 在继承树中重载此方法以进行框架扩展\n   * * 在 `Server.prototype.initOptions` 函数之后执行\n   *\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected initInjections() {\n    // 不允许装饰器复写\n    this.scoped(AstroboyContext);\n    this.scoped(Scope);\n    this.singleton(SimpleLogger);\n    // 允许被装饰器复写\n    this.directInject(InjectScope.Scope, [NunjunksEngine]);\n    this.directInject(InjectScope.Scope, [Render]);\n  }\n\n  /**\n   * ## 处理合并与接受configs配置\n   *\n   * @author Big Mogician\n   * @protected\n   * @param {any} [configs={}] app.configs\n   * @memberof Server\n   */\n  protected readConfigs(configs: any = {}) {\n    this.configs.toArray().forEach(({ token }) => {\n      const key = token.key.toString();\n      if (/Symbol\\(config::(.+)\\)$/.test(key)) {\n        this.option(token, configs[RegExp.$1] || {});\n      }\n    });\n  }\n\n  /**\n   * ## 处理运行时参数\n   *\n   * @author Big Mogician\n   * @protected\n   * @template A extends Koa\n   * @param {Koa} app\n   * @memberof Server\n   */\n  protected readRuntimeEnv(app: A) {\n    this.option(ENV, { env: app.env || \"development\" });\n  }\n\n  /**\n   * ## 按照配置设置DI的解析方式\n   * - `native` : 原生模式，最高的还原度，没有黑盒\n   * - `proxy` : Proxy代理模式，追求更高性能的惰性解析\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected resetDIResolver() {\n    const { diType } = this.configs.get(ENV);\n    this.di.resetConfigs({ type: diType });\n  }\n\n  /**\n   * ## 解析Bundles\n   *\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected resolveBundles() {\n    _innerBundle[\"@singletons\"].forEach(args => this.singleton(...args));\n    _innerBundle[\"@scopeds\"].forEach(args => this.scoped(...args));\n    _innerBundle[\"@uniques\"].forEach(args => this.unique(...args));\n    _innerBundle[\"@options\"].forEach(args => this.option(...args));\n  }\n\n  /**\n   * ## 完成DI容器初始化并锁定\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected resolveInjections() {\n    this.preSingletons.forEach(([token, srv]) =>\n      this.sendInjection(token, srv, InjectScope.Singleton)\n    );\n    this.preScopeds.forEach(([token, srv]) =>\n      this.sendInjection(token, srv, InjectScope.Scope)\n    );\n    this.preUniques.forEach(([token, srv]) =>\n      this.sendInjection(token, srv, InjectScope.New)\n    );\n    this.di.complete();\n  }\n\n  //#endregion\n\n  private preInit() {\n    this.initOptions();\n    this.initInjections();\n  }\n\n  private init() {\n    this.initRouters();\n  }\n\n  private initRouters() {\n    initRouters(this.configs.get(ROUTER_OPTIONS));\n    return this;\n  }\n\n  private finalInjectionsInit() {\n    this.initConfigCollection();\n    this.initInjectService();\n    this.initContextProvider();\n  }\n\n  private startApp(\n    events?: Partial void;\n      onError: (error, ctx) => void;\n    }>\n  ) {\n    const { onStart = undefined, onError = undefined } = events || {};\n    new (this.appBuilder || Astroboy)(this.appConfigs || {})\n      .on(\"start\", (app: Koa) => {\n        this.readConfigs(app[\"config\"]);\n        this.readRuntimeEnv(app);\n        this.resetDIResolver();\n        this.resolveBundles();\n        this.resolveInjections();\n        onStart && onStart(app);\n      })\n      .on(\"error\", (error, ctx) => {\n        onError && onError(error, ctx);\n      });\n  }\n\n  /** 预注册，会覆盖装饰器的定义注册 */\n  private preInject(type: InjectScope, service: Constructor): this;\n  private preInject(\n    type: InjectScope,\n    token_implement: [Constructor, any]\n  ): this;\n  private preInject(type: InjectScope, p: any | [any, any]) {\n    const args = p instanceof Array ? p : [p, p];\n    switch (type) {\n      case InjectScope.Scope:\n        this.preScopeds.push([args[0], args[1] || args[0]]);\n        break;\n      case InjectScope.Singleton:\n        this.preSingletons.push([args[0], args[1] || args[0]]);\n        break;\n      default:\n        this.preUniques.push([args[0], args[1] || args[0]]);\n        break;\n    }\n    return this;\n  }\n\n  /** 直接注册，允许`@Injectable()`装饰器之后进行定义复写 */\n  private directInject(type: InjectScope, service: [Constructor]): this;\n  private directInject(\n    type: InjectScope,\n    token_implement: [Constructor, any]\n  ): this;\n  private directInject(type: InjectScope, args: [any] | [any, any]) {\n    switch (type) {\n      case InjectScope.Scope:\n        this.sendInjection(args[0], args[1] || args[0], InjectScope.Scope);\n        break;\n      case InjectScope.Singleton:\n        this.sendInjection(args[0], args[1] || args[0], InjectScope.Singleton);\n        break;\n      default:\n        this.sendInjection(args[0], args[1] || args[0], InjectScope.New);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * DI项最终注册登记\n   *\n   * @author Big Mogician\n   * @private\n   * @param {any} token\n   * @param {any} inject\n   * @param {InjectScope} scope\n   * @returns\n   * @memberof Server\n   */\n  private sendInjection(token: any, inject: any, scope: InjectScope) {\n    if (!DIContainer.isFactory(inject)) {\n      return this.di.register(token, inject, scope);\n    }\n    // 底层服务，直接使用底层工厂函数\n    if (token === InjectService || token === Configs || token === Context) {\n      return this.di.register(token, inject, scope);\n    }\n    return this.di.register(\n      token,\n      (scopeId, metadata) => {\n        const injector = this.di.get(InjectService, scopeId);\n        const configs = this.di.get(Configs, scopeId);\n        return inject({ injector, configs });\n      },\n      scope\n    );\n  }\n\n  /**\n   * ## 初始化上下文服务\n   * @description\n   * @author Big Mogician\n   * @private\n   * @memberof Server\n   */\n  private initContextProvider() {\n    this.scoped(Context, (scopeId?: ScopeID, { ctx = null } = {}) => {\n      if (ctx === null) {\n        throw new Error(\n          \"invalid call, you can only call a context in request pipe scope.\"\n        );\n      }\n      return new Context(ctx);\n    });\n  }\n\n  /**\n   * ## 初始化手工注入服务\n   * * 可以自举\n   * @description\n   * @author Big Mogician\n   * @private\n   * @memberof Server\n   */\n  private initInjectService() {\n    this.scoped(InjectService, (scopeId?: ScopeID) => ({\n      get: (token: InjectToken) => this.di.get(token, scopeId),\n      INTERNAL_dispose: () => this.di.dispose(scopeId),\n      scopeId\n    }));\n  }\n\n  /**\n   * ## 注入全局配置容器服务\n   * @description\n   * @author Big Mogician\n   * @private\n   * @memberof Server\n   */\n  private initConfigCollection() {\n    this.singleton(Configs, () => ({\n      get: this.configs.get.bind(this.configs)\n    }));\n  }\n}\n\ntype ServerBundle = PartReset;\ntype InnerBundle = ServerBundle & {\n  \"@options\": [any, any?][];\n  \"@singletons\": [Constructor, any?][];\n  \"@scopeds\": [Constructor, any?][];\n  \"@uniques\": [Constructor, any?][];\n};\n/**\n * ## DI Bundles\n * * 导入并移动使用DI容器的注册api\n * * 和普通注入项解析方式相同\n */\nexport const Bundles: ChangeReturn = {\n  option(...args: any[]): ServerBundle {\n    Bundles[\"@options\"].push(args);\n    return Bundles as any;\n  },\n  scoped(...args: any[]): ServerBundle {\n    Bundles[\"@scopeds\"].push(args);\n    return Bundles as any;\n  },\n  singleton(...args: any[]): ServerBundle {\n    Bundles[\"@singletons\"].push(args);\n    return Bundles as any;\n  },\n  unique(...args: any[]): ServerBundle {\n    Bundles[\"@uniques\"].push(args);\n    return Bundles as any;\n  },\n  \"@options\": [],\n  \"@singletons\": [],\n  \"@scopeds\": [],\n  \"@uniques\": []\n} as any;\nconst _innerBundle: InnerBundle = Bundles as any;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IContext.html":{"url":"interfaces/IContext.html","title":"interface - IContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IContext.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    callService\n                                \n                                \n                                    getConfig\n                                \n                                \n                                    getLib\n                                \n                                \n                                    getService\n                                \n                                \n                                    getServiceClass\n                                \n                                \n                                    invokeServiceMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(service: string, method: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:19\n                            \n                        \n\n\n                \n                    \n                            调用服务\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                                    描述\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                服务名\n\n                                                        \n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                方法名\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                参数\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:12\n                            \n                        \n\n\n                \n                    \n                            获取一个 Service 类实例\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(pkgName: string, service: string, method: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:27\n                            \n                        \n\n\n                \n                    \n                            调用服务\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                                    描述\n                                            \n                                        \n                                        \n                                                \n                                                        pkgName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                包名\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                参数\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\n\nexport interface IContext extends Koa.Context {\n  config: any;\n  getConfig(...args: any[]): any;\n  getServiceClass(...args: any[]): any;\n  /**\n   * 获取一个 Service 类实例\n   * @param {String} packageName 包名\n   * @param {String} serviceName 服务名\n   */\n  getService(...args: any[]): any;\n  /**\n   * 调用服务\n   * @param {String} service 服务名\n   * @param {String} method 方法名\n   * @param {Object} args 参数\n   */\n  callService(service: string, method: string, ...args: any[]): any;\n  /**\n   * 调用服务\n   * @param {String} pkgName 包名\n   * @param {String} serviceName 服务名\n   * @param {String} methodName 方法名\n   * @param {Object} args 参数\n   */\n  invokeServiceMethod(\n    pkgName: string,\n    service: string,\n    method: string,\n    ...args: any[]\n  ): any;\n  getLib(...args: any[]): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IDevCmdOptions.html":{"url":"interfaces/IDevCmdOptions.html","title":"interface - IDevCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IDevCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/dev/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        debug\n                                \n                                \n                                        env\n                                \n                                \n                                        inspect\n                                \n                                \n                                        mock\n                                \n                                \n                                        port\n                                \n                                \n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inspect\n                                    \n                                \n                                \n                                    \n                                        inspect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IDevCmdOptions {\n  config: string;\n  debug: string | boolean;\n  env: string;\n  port: number | string;\n  mock: string | boolean;\n  tsconfig: string;\n  inspect: boolean;\n}\n\nexport const options: CommandPlugin = {\n  name: \"dev\",\n  description: \"本地开发，开启后端服务\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"使用自定义的atc.config.js配置文件\"],\n    [\"-D, --debug [debugName]\", \"开启 debug 模式\"],\n    [\"-E, --env [NODE_ENV]\", \"设置 NODE_ENV 环境变量，默认 development\"],\n    [\"-P, --port [NODE_PORT]\", \"设置 NODE_PORT 环境变量，默认 8201\"],\n    [\n      \"-M, --mock [proxyUrl]\",\n      \"开启 mock 模式，默认 proxy 地址为 http://127.0.0.1:8001\"\n    ],\n    [\"-T, --tsconfig [config]\", \"使用自定义的ts编译配置文件\"],\n    [\"-I, --inspect [inspect]\", \"启用inspector，开启编辑器断点调试\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc dev\");\n    console.log(\"    $ atc dev --debug\");\n    console.log(\"    $ atc dev --debug koa:application\");\n    console.log(\"    $ atc dev --debug --mock\");\n    console.log(\"    $ atc dev --mock http://127.0.0.1:8001\");\n    console.log(\"    $ atc dev --mock\");\n    console.log(\"    $ atc dev --env pre\");\n    console.log(\"    $ atc dev --port 8201\");\n    console.log(\"    $ atc dev --env development --port 8201\");\n    console.log(\"    $ atc dev --tsconfig app/tsconfig.json\");\n    console.log(\"    $ atc dev --inspect\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IENV.html":{"url":"interfaces/IENV.html","title":"interface - IENV","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IENV\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        NODE_ENV\n                                \n                                \n                                            可选的\n                                        NODE_PORT\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/base.ts:13\n                            \n                        \n            \n        \n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_ENV\n                                    \n                                \n                                \n                                    \n                                        NODE_ENV:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_PORT\n                                    \n                                \n                                \n                                    \n                                        NODE_PORT:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IENV-1.html":{"url":"interfaces/IENV-1.html","title":"interface - IENV-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IENV\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/configs/env.config.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        diType\n                                \n                                \n                                        env\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        diType\n                                    \n                                \n                                \n                                    \n                                        diType:     \"native\" | \"proxy\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"native\" | \"proxy\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    设置DI解析的模式，默认：'native' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    运行环境，默认：'development' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createConfig } from \"../services/Configs\";\n\ninterface IENV {\n  /** 设置DI解析的模式，默认：`'native'` */\n  diType: \"native\" | \"proxy\";\n  /** 运行环境，默认：`'development'` */\n  env: string;\n}\n\nexport const defaultEnv: IENV = {\n  diType: \"native\",\n  env: \"development\"\n};\n\n/** astroboy.ts环境变量 */\nexport const ENV = createConfig(\"@astroboy.ts\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IErrorHandler.html":{"url":"interfaces/IErrorHandler.html","title":"interface - IErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IErrorHandler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/render.options.ts\n        \n\n            \n                描述\n            \n            \n                模板渲染错误处理接口\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        path\n                                \n                                \n                                        tplStr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面渲染函数，作为兜底的渲染能力提供，\n\n默认(dev)：() => \"${错误的堆栈信息}\"\"\n默认(prod)：() => \"Internal Server Error\"\n通常不要复写此字段，除非path或tplStr能够提供可用的内容\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面模板的path，默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tplStr\n                                    \n                                \n                                \n                                    \n                                        tplStr:     string | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面字符串模板，默认：undefined \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\nimport { createOptions } from \"../services/Configs\";\nimport { NunjunksEngine } from \"../plugins/nunjunks\";\nimport { IViewEngine } from \"../typings/IViewEngine\";\n\n/**\n * ## 模板渲染错误处理接口\n * @description\n * @author Big Mogician\n * @interface IErrorHandler\n */\ninterface IErrorHandler {\n  /** 错误页面模板的path，默认：`undefined` */\n  path: string | false;\n  /** 错误页面字符串模板，默认：`undefined` */\n  tplStr: string | false;\n  /**\n   * 错误页面渲染函数，作为兜底的渲染能力提供，\n   * * 默认(dev)：`() => \"${错误的堆栈信息}\"\"`\n   * * 默认(prod)：`() => \"Internal Server Error\"`\n   * * 通常不要复写此字段，除非`path`或`tplStr`能够提供可用的内容\n   */\n  content: (error: Error, title?: string) => string;\n}\n\n/**\n * ## 配置RenderResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface RenderResultOptions\n */\nexport interface RenderResultOptions {\n  /** astroboy原生渲染的参数配置 */\n  astConf: {\n    /** 使用原生的渲染逻辑，默认：`false` */\n    use: boolean;\n    /** 原生astroboy渲染时的`config`字段，默认：`undefined` */\n    configs: any;\n    /** 原生astroboy渲染时的`state`字段，默认：`undefined` */\n    state: any;\n  };\n  /** 模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined` */\n  root: string;\n  /** 模板文件相对路径，默认：`\"\"` */\n  path: string;\n  /** 模板字符串，如果提供将优先使用此渲染，默认：`undefined` */\n  tplStr: string;\n  /** 配置信息，将作为渲染引擎需要接受的configs字段下传，默认：`undefined` */\n  configs: any;\n  /** 默认的模板引擎，默认：`\"nunjunks\"` */\n  engine: T;\n  /** 模板引擎DI列表，可以动态merge合并配置，默认：`{ nunjunks: NunjunksEngine }` */\n  engines: {\n    [prop: string]: Constructor;\n  };\n  /** 当渲染错误(生产模式)需要走的执行逻辑 */\n  onError: Partial;\n  /** 当渲染错误(开发模式)需要走的执行逻辑 */\n  onDevError: Partial;\n}\n\nexport const defaultRenderResultOptions: RenderResultOptions = {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n};\n\nfunction checkCustomError(error: Error) {\n  return error && error.name && error.name !== \"Error\";\n}\n\n/** RenderResult配置token */\nexport const RENDER_RESULT_OPTIONS = createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IGlobalErrorHandler.html":{"url":"interfaces/IGlobalErrorHandler.html","title":"interface - IGlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IGlobalErrorHandler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/errors.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        handler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions, Configs } from \"../services/Configs\";\nimport { InjectService } from \"../services/Injector\";\nimport { RenderResult } from \"../results/render\";\nimport { RENDER_RESULT_OPTIONS } from \"./render.options\";\nimport { ENV } from \"../configs/env.config\";\nimport { Context } from \"../services/Context\";\nimport { Render } from \"../services/Render\";\nimport { SimpleLogger } from \"../plugins/simple-logger\";\n\ninterface IGlobalErrorHandler {\n  handler?: (error: any, injector: InjectService, configs: Configs) => void;\n}\n\nexport const defaultGlobalError: IGlobalErrorHandler = {\n  handler: async (error, injector, configs) => {\n    const render = injector.get(Render);\n    const { ctx } = injector.get(Context);\n    const { env } = configs.get(ENV);\n    const { onError, onDevError } = configs.get(RENDER_RESULT_OPTIONS);\n    const { content: defaultRender, ...args } =\n      env === \"production\" ? onError : onDevError;\n    render.setView(\"__viewError\", error);\n    try {\n      const path = !args.path ? undefined : args.path;\n      const tpl = !args.tplStr ? undefined : args.tplStr;\n      if (!path && !tpl) {\n        throw new Error(\"No template provided for global error handler.\");\n      }\n      const result = new RenderResult({ path, tplStr: tpl });\n      ctx.body = await result.toResult({ injector, configs });\n    } catch (_) {\n      const logger = injector.get(SimpleLogger);\n      logger.trace(\"GLOBAL_ERROR render failed\", _);\n      ctx.body = defaultRender(error, \"Internal Server Error\");\n    }\n  }\n};\n\nexport const GLOBAL_ERROR = createOptions(\"GLOBAL_ERROR\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IGlobalSetOptions.html":{"url":"interfaces/IGlobalSetOptions.html","title":"interface - IGlobalSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IGlobalSetOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        toSnake\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        toSnake\n                                    \n                                \n                                \n                                    \n                                        toSnake:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IInjectableConfigs.html":{"url":"interfaces/IInjectableConfigs.html","title":"interface - IInjectableConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IInjectableConfigs\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/injectable.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     InjectToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     InjectScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectScope\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Constructor,\n  IBaseInjectable,\n  InjectScope,\n  InjectToken\n} from \"@bonbons/di\";\nimport { GlobalDI } from \"../utils\";\n\ninterface IInjectableConfigs {\n  type: InjectScope;\n  token: InjectToken;\n}\n\n/**\n * ## 定义服务\n * @description\n * @author Big Mogician\n * @export\n * @param {Partial} [config]\n * @returns\n */\nexport function Injectable(): (target: Constructor) => Constructor;\nexport function Injectable(\n  scope: InjectScope\n): (target: Constructor) => Constructor;\nexport function Injectable(\n  config: Partial\n): (target: Constructor) => Constructor;\nexport function Injectable(config?: InjectScope | Partial) {\n  return function(target: Constructor) {\n    let token: InjectToken = undefined;\n    let scope: InjectScope = InjectScope.Scope;\n    switch (config) {\n      case InjectScope.Scope:\n      case InjectScope.Singleton:\n      case InjectScope.New:\n        scope = config;\n        break;\n      default:\n        const { token: tk = undefined, type: tp = InjectScope.Scope } =\n          config || {};\n        scope = tp || InjectScope.Scope;\n        token = tk;\n    }\n    const prototype: IBaseInjectable = target.prototype;\n    prototype.__valid = true;\n    GlobalDI.register(token || target, target, scope);\n    return >target;\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IMiddlewaresScope.html":{"url":"interfaces/IMiddlewaresScope.html","title":"interface - IMiddlewaresScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IMiddlewaresScope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/middlewares/core.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        ctx\n                                \n                                \n                                        injector\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Configs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Configs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IContext } from \"../typings/IContext\";\nimport { InjectService } from \"../services/Injector\";\nimport { Configs } from \"../services/Configs\";\nimport { getScopeId, GlobalDI } from \"../utils\";\n\nexport interface IMiddlewaresScope {\n  injector: InjectService;\n  configs: Configs;\n  ctx: T;\n  next: () => Promise;\n}\n\ntype ProvideInvoker = (\n  bunddle: IMiddlewaresScope\n) => void | Promise;\n\n/**\n * 创建具有依赖注入能力的中间件\n *\n * @author Big Mogician\n * @export\n * @template T extends IContext\n * @param {((bunddle: IMiddlewaresScope, ctx: T, next: () => Promise) => void | Promise)} middleware\n * @returns\n */\nexport function createMiddleware(\n  middleware: ProvideInvoker\n) {\n  return async (ctx: T, next: () => Promise) => {\n    const scopeId = getScopeId(ctx);\n    const configs = GlobalDI.get(Configs, scopeId);\n    const injector = GlobalDI.get(InjectService, scopeId);\n    await middleware({ injector, configs, ctx, next });\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/INunjunksRenderOptions.html":{"url":"interfaces/INunjunksRenderOptions.html","title":"interface - INunjunksRenderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  INunjunksRenderOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/nunjunks/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoescape\n                                \n                                \n                                        cache\n                                \n                                \n                                        lstripBlocks\n                                \n                                \n                                        root\n                                \n                                \n                                        throwOnUndefined\n                                \n                                \n                                        trimBlocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        autoescape\n                                    \n                                \n                                \n                                    \n                                        autoescape:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lstripBlocks\n                                    \n                                \n                                \n                                    \n                                        lstripBlocks:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnUndefined\n                                    \n                                \n                                \n                                    \n                                        throwOnUndefined:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trimBlocks\n                                    \n                                \n                                \n                                    \n                                        trimBlocks:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import path from \"path\";\nimport { createOptions } from \"../../services/Configs\";\n\nexport interface INunjunksRenderOptions {\n  root: string;\n  autoescape: true;\n  throwOnUndefined: false;\n  trimBlocks: false;\n  lstripBlocks: false;\n  cache: true;\n}\n\nexport const defaultNunjunksOptions: INunjunksRenderOptions = {\n  root: path.resolve(process.cwd(), \"app/views\"),\n  cache: true,\n  autoescape: true,\n  throwOnUndefined: false,\n  trimBlocks: false,\n  lstripBlocks: false\n};\n\nexport const NUNJUNKS_OPTIONS = createOptions(\n  \"NUNJUNKS_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IPreProcess.html":{"url":"interfaces/IPreProcess.html","title":"interface - IPreProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IPreProcess\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/index.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        always\n                                \n                                \n                                        appRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        fileType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制刷新2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRoot\n                                    \n                                \n                                \n                                    \n                                        appRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    整个项目的url前缀，默认：'/' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动生成2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    生成router文件的文件类型，默认：'js' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import Astroboy from \"astroboy\";\nimport { ControllerConstructor } from \"astroboy-router/dist/metadata\";\nimport { createRouter } from \"astroboy-router\";\nimport { GlobalImplements } from \"./utils\";\nimport { copyPrototype } from \"./decorators/controller\";\nimport { initRouters } from \"./builders\";\n\n/**\n * ## 构建路由\n * * 等效astroboy-router的createRouter方法\n * @description\n * @author Big Mogician\n * @export\n * @template T\n * @param {ControllerConstructor} ctor\n * @param {string} name\n * @param {string} root\n * @returns\n */\nexport function buildRouter(\n  ctor: ControllerConstructor,\n  name: string,\n  root: string\n) {\n  const sourceCtor = GlobalImplements.get(ctor);\n  const result = createRouter(sourceCtor, name, root);\n  copyPrototype(ctor, sourceCtor);\n  return result;\n}\n\ninterface IPreProcess {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\n/**\n * ## astroboy.ts 预处理函数\n * * 硬核初始化routers\n * @description\n * @author Big Mogician\n * @export\n * @param {Partial} {\n *   routerAutoBuild: open = defaultEnv.routerAutoBuild,\n *   routerAlwaysBuild: always = defaultEnv.routerAlwaysBuild,\n *   routerRoot: root = defaultEnv.routerRoot\n * }\n */\nexport function preInitFn(configs: Partial): void;\nexport function preInitFn(configs: Partial, inEnd?) {\n  return initRouters(configs, inEnd);\n}\n\nexport * from \"astroboy-router\";\nexport * from \"./decorators\";\nexport * from \"./middlewares\";\nexport * from \"./services/Injector\";\nexport * from \"./services/Context\";\nexport * from \"./services/BaseClass\";\nexport * from \"./services/AstroboyContext\";\nexport * from \"./services/Render\";\nexport * from \"./server\";\nexport * from \"./configs\";\nexport * from \"./options\";\nexport * from \"./typings/IContext\";\nexport * from \"./typings/IResult\";\nexport * from \"./typings/IViewEngine\";\nexport * from \"./typings/IStaticTypeResolver\";\nexport * from \"./results/json\";\nexport * from \"./results/render\";\n\nexport {\n  TypedSerializer,\n  Serialize,\n  Deserialize,\n  Extends\n} from \"./plugins/typed-serializer\";\nexport { NUNJUNKS_OPTIONS } from \"./plugins/nunjunks\";\nexport { SIMPLE_LOGGER_OPTIONS } from \"./plugins/simple-logger\";\n\nexport {\n  Configs,\n  ConfigToken,\n  ConfigEntry,\n  createOptions,\n  createConfig,\n  TokenGenerator,\n  InjectScope\n} from \"./services/Configs\";\n\nexport { Astroboy };\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IResult.html":{"url":"interfaces/IResult.html","title":"interface - IResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IResult.ts\n        \n\n            \n                描述\n            \n            \n                路由方法返回接口定义\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    toResult\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoResult(scope: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IResult.ts:29\n                            \n                        \n\n\n                \n                    \n                            需要实现的解析函数\n\n将目标处理成body内容\n\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ConfigsCollection as ReadonlyConfigs } from \"@bonbons/di\";\nimport { InjectService } from \"../services/Injector\";\n\nexport interface IResultScope {\n  configs: ReadonlyConfigs;\n  injector: InjectService;\n}\n\n/** 表示一个异步过程 */\nexport type Async = T | Promise;\n\n/**\n * ## 路由方法返回接口定义\n * @description\n * @author Big Mogician\n * @export\n * @interface IResult\n */\nexport interface IResult {\n  /**\n   * ### 需要实现的解析函数\n   * * 将目标处理成body内容\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} scope\n   * @returns {(string | Promise)}\n   * @memberof IResult\n   */\n  toResult(scope: IResultScope): string | Promise;\n}\n\nexport type ICommonResultType = string | void | IResult;\n\nexport type IBodyResult = Async;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IResultScope.html":{"url":"interfaces/IResultScope.html","title":"interface - IResultScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IResultScope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IResult.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        injector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     ReadonlyConfigs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ReadonlyConfigs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConfigsCollection as ReadonlyConfigs } from \"@bonbons/di\";\nimport { InjectService } from \"../services/Injector\";\n\nexport interface IResultScope {\n  configs: ReadonlyConfigs;\n  injector: InjectService;\n}\n\n/** 表示一个异步过程 */\nexport type Async = T | Promise;\n\n/**\n * ## 路由方法返回接口定义\n * @description\n * @author Big Mogician\n * @export\n * @interface IResult\n */\nexport interface IResult {\n  /**\n   * ### 需要实现的解析函数\n   * * 将目标处理成body内容\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} scope\n   * @returns {(string | Promise)}\n   * @memberof IResult\n   */\n  toResult(scope: IResultScope): string | Promise;\n}\n\nexport type ICommonResultType = string | void | IResult;\n\nexport type IBodyResult = Async;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouter.html":{"url":"interfaces/IRouter.html","title":"interface - IRouter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouter\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/builders.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:    string | IRouter\n\n                    \n                \n                        \n                            \n                                被定义在 src/builders.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\nimport rimraf from \"rimraf\";\nimport { GlobalImplements } from \"./utils\";\nimport { InnerRouterOptions, defaultRouterOptions as df } from \"./options\";\n\ninterface IRouter {\n  [prop: string]: string | IRouter;\n}\n\nexport function initRouters(\n  {\n    ctorFolder: base = df.ctorFolder,\n    routerFolder: routerBase = df.routerFolder,\n    enabled: open = df.enabled,\n    always = df.always,\n    appRoot: root = df.appRoot,\n    fileType = df.fileType\n  }: Partial,\n  onEnd?: (data: { routers?: IRouter; error?: Error }) => void\n) {\n  if (open) {\n    try {\n      const routers: IRouter = {};\n      const ctorPath = path.resolve(base);\n      const routerPath = path.resolve(routerBase);\n      if (always) {\n        // 硬核开关，强撸routers文件夹\n        rimraf.sync(routerPath);\n        fs.mkdirSync(routerPath);\n      } else if (!fs.existsSync(routerPath)) {\n        fs.mkdirSync(routerPath);\n      }\n      checkRouterFolders({\n        turn: 0,\n        baseRouter: routerPath,\n        folders: fs.readdirSync(ctorPath),\n        ctorPath,\n        routerPath,\n        fileType,\n        routers,\n        root\n      });\n      onEnd && onEnd({ routers });\n    } catch (e) {\n      onEnd && onEnd({ error: e });\n    }\n  }\n}\n\nfunction checkRouterFolders({\n  turn,\n  baseRouter,\n  folders,\n  ctorPath,\n  routerPath,\n  fileType,\n  root,\n  routers\n}: {\n  turn: number;\n  baseRouter: string;\n  folders: string[];\n  ctorPath: string;\n  routerPath: string;\n  fileType: string;\n  root: string;\n  routers: IRouter;\n}) {\n  folders.forEach(path => {\n    if (path.indexOf(\".\") === -1) {\n      routers[path] = {};\n      const routerFolder = `${routerPath}/${path}`;\n      const ctorFolder = `${ctorPath}/${path}`;\n      if (!fs.existsSync(routerFolder)) {\n        fs.mkdirSync(routerFolder);\n      }\n      checkRouterFolders({\n        turn: turn + 1,\n        baseRouter,\n        folders: fs.readdirSync(ctorFolder),\n        ctorPath: ctorFolder,\n        routerPath: routerFolder,\n        fileType,\n        routers: routers[path],\n        root\n      });\n    } else {\n      if (checkIfOnlyDeclares(path)) return;\n      createTsRouterFile({\n        turn,\n        baseRouter,\n        ctorPath,\n        routerPath,\n        path,\n        fileType,\n        urlRoot: root,\n        routers\n      });\n    }\n  });\n}\n\nfunction checkIfOnlyDeclares(p: string): any {\n  return p.endsWith(\".d.ts\");\n}\n\nfunction createTsRouterFile({\n  turn,\n  baseRouter,\n  ctorPath,\n  routerPath,\n  path,\n  fileType,\n  urlRoot,\n  routers\n}: {\n  turn: number;\n  baseRouter: string;\n  ctorPath: string;\n  routerPath: string;\n  path: string;\n  fileType: string;\n  urlRoot: string;\n  routers: IRouter;\n}) {\n  try {\n    // 尝试按照新版逻辑解析Controller\n    const commonName = path.split(\".\")[0];\n    const controller = require(`${ctorPath}/${commonName}`);\n    // 找不到router源定义，静默退出\n    if (!controller.prototype[\"@router\"]) return;\n    const sourceCtor = GlobalImplements.get(controller);\n    // 无法解析控制器数据，则判断是老版本的Router\n    if (!sourceCtor) return;\n    const file = createFile(\n      routerPath,\n      baseRouter,\n      commonName,\n      turn,\n      fileType,\n      urlRoot\n    );\n    const _PATH = `${routerPath}/${commonName}.${fileType}`;\n    if (fs.existsSync(_PATH)) {\n      const oldFile = fs.readFileSync(_PATH, { flag: \"r\" });\n      const content = (oldFile.toString() || \"\").split(\"\\n\");\n      // 存在router.js文件，且内容一致，不做处理直接退出\n      if (content[1] === file[1] && content[3] === file[3]) return;\n    }\n    // 复写router.js文件\n    fs.appendFileSync(_PATH, file.join(\"\\n\"), { flag: \"w\" });\n    routers[`${commonName}.${fileType}`] = \"success\";\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction createFile(\n  routerPath: string,\n  baseRouter: string,\n  commonName: string,\n  turn: number,\n  fileType: string,\n  urlRoot: string\n) {\n  const controllerName =\n    routerPath === baseRouter\n      ? commonName\n      : `${routerPath\n          .replace(`${baseRouter}/`, \"\")\n          .replace(/\\//g, \".\")}.${commonName}`;\n  const turnLod = [\"..\"];\n  for (let index = 0; index \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouterCmdOptions.html":{"url":"interfaces/IRouterCmdOptions.html","title":"interface - IRouterCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouterCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/router/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        always\n                                \n                                \n                                            可选的\n                                        approot\n                                \n                                \n                                            可选的\n                                        config\n                                \n                                \n                                            可选的\n                                        details\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        filetype\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approot\n                                    \n                                \n                                \n                                    \n                                        approot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filetype\n                                    \n                                \n                                \n                                    \n                                        filetype:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IRouterCmdOptions {\n  config?: string;\n  enabled?: boolean;\n  always?: boolean;\n  filetype?: string;\n  approot?: string;\n  details?: string;\n  tsconfig?: string;\n}\n\nexport const options: CommandPlugin = {\n  name: \"router\",\n  description: \"astroboy.ts routers cmd\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"use atc.config.js\"],\n    [\"-E, --enabled [isEnabled]\", \"open routers-auto-build\"],\n    [\"-A, --always [isAlways]\", \"set routers-always-rebuild\"],\n    [\"-F, --filetype [fileType]\", \"set routers fileType\"],\n    [\"-R, --approot [appRoot]\", \"set routers-root\"],\n    [\"-T, --tsconfig [tsconfig]\", \"set tsconfig.json\"],\n    [\"-D, --details [showRouters]\", \"show building results or not\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc router\");\n    console.log(\"    $ atc router --always\");\n    console.log(\"    $ atc router --fileType ts\");\n    console.log(\"    $ atc router --approot /v1/prj\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouterMagic.html":{"url":"interfaces/IRouterMagic.html","title":"interface - IRouterMagic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouterMagic\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prototype\n                                \n                                \n                                        routerMeta\n                                \n                                \n                                        routes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        prototype\n                                    \n                                \n                                \n                                    \n                                        prototype:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerMeta\n                                    \n                                \n                                \n                                    \n                                        routerMeta:     IRouter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     IRouter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ISimpleLoggerOptions.html":{"url":"interfaces/ISimpleLoggerOptions.html","title":"interface - ISimpleLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ISimpleLoggerOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/simple-logger/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     SimpleLogLevel | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     SimpleLogLevel | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../../services/Configs\";\nimport { SimpleLogLevel } from \"./base\";\n\nexport interface ISimpleLoggerOptions {\n  level: SimpleLogLevel | number;\n}\n\nexport const defaultSimpleLoggerOptions: ISimpleLoggerOptions = {\n  level: SimpleLogLevel.WARN\n};\n\nexport const SIMPLE_LOGGER_OPTIONS = createOptions(\n  \"SIMPLE_LOGGER_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStaticSerializeOptions.html":{"url":"interfaces/IStaticSerializeOptions.html","title":"interface - IStaticSerializeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStaticSerializeOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IStaticTypeResolver.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Constructor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Constructor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\n\nexport interface IStaticSerializeOptions {\n  format: boolean;\n  type: Constructor;\n}\n\nexport interface IStaticTypedResolver {\n  /** Convert static typed instance to JSON text */\n  ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string;\n  /** Convert JSON text to static typed instance */\n  FromJSON(json: string, type?: Constructor): T;\n  /** Convert static typed instance to javascript object */\n  ToObject(\n    obj: any,\n    options?: Partial>\n  ): any;\n  /** Convert javascript object to static typed instance */\n  FromObject(json: any, type?: Constructor): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStaticTypedResolver.html":{"url":"interfaces/IStaticTypedResolver.html","title":"interface - IStaticTypedResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStaticTypedResolver\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IStaticTypeResolver.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    FromJSON\n                                \n                                \n                                    FromObject\n                                \n                                \n                                    ToJSON\n                                \n                                \n                                    ToObject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nFromJSON(json: string, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:15\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert JSON text to static typed instance \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nFromObject(json: any, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:22\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert javascript object to static typed instance \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nToJSON(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:10\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert static typed instance to JSON text \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nToObject(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:17\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert static typed instance to javascript object \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\n\nexport interface IStaticSerializeOptions {\n  format: boolean;\n  type: Constructor;\n}\n\nexport interface IStaticTypedResolver {\n  /** Convert static typed instance to JSON text */\n  ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string;\n  /** Convert JSON text to static typed instance */\n  FromJSON(json: string, type?: Constructor): T;\n  /** Convert static typed instance to javascript object */\n  ToObject(\n    obj: any,\n    options?: Partial>\n  ): any;\n  /** Convert javascript object to static typed instance */\n  FromObject(json: any, type?: Constructor): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IView.html":{"url":"interfaces/IView.html","title":"interface - IView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IView\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/configs/view.config.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy的配置的view结构\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cache\n                                \n                                \n                                        defaultExtension\n                                \n                                \n                                        defaultViewEngine\n                                \n                                \n                                        mapping\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultExtension\n                                    \n                                \n                                \n                                    \n                                        defaultExtension:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultViewEngine\n                                    \n                                \n                                \n                                    \n                                        defaultViewEngine:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                    \n                                \n                                \n                                    \n                                        mapping:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createConfig } from \"../services/Configs\";\n\n/**\n * Astroboy的配置的view结构\n * @description\n * @author Big Mogician\n * @interface IView\n */\ninterface IView {\n  cache: boolean;\n  root: string;\n  defaultExtension: string;\n  defaultViewEngine: string;\n  mapping: { [prop: string]: any };\n}\n\nexport const defaultView: Partial = {};\n\n/** astroboy view config */\nexport const CONFIG_VIEW = createConfig(\"view\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IViewEngine.html":{"url":"interfaces/IViewEngine.html","title":"interface - IViewEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IViewEngine\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IViewEngine.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    render\n                                \n                                \n                                    renderString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender(path: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IViewEngine.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Async\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderString\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenderString(path: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IViewEngine.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Async\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Async } from \"./IResult\";\n\nexport interface IViewEngine {\n  render(path: string, configs: any): Async;\n  renderString(path: string, configs: any): Async;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerCmdConfig.html":{"url":"interfaces/InnerCmdConfig.html","title":"interface - InnerCmdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerCmdConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        exec\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerRouterOptions.html":{"url":"interfaces/InnerRouterOptions.html","title":"interface - InnerRouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerRouterOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/router.options.ts\n        \n\n\n            \n                继承\n            \n            \n                    RouterOptions\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctorFolder\n                                \n                                \n                                        routerFolder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctorFolder\n                                    \n                                \n                                \n                                    \n                                        ctorFolder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerFolder\n                                    \n                                \n                                \n                                    \n                                        routerFolder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerRouterOptions extends RouterOptions {\n  ctorFolder: string;\n  routerFolder: string;\n}\n\nexport interface RouterOptions {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\nexport const defaultRouterOptions: InnerRouterOptions = {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n};\n\nexport const ROUTER_OPTIONS = createOptions(\"ROUTER_OPTIONS\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/JsonResult.html":{"url":"classes/JsonResult.html","title":"class - JsonResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  JsonResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/results/json.ts\n        \n\n            \n                描述\n            \n            \n                Body序列化约定实现\n\n按照约定将内容序列化到body响应中\n\n\n            \n\n\n            \n                实现\n            \n            \n                        IResult\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                toResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(value: any, configs?: Partial)\n                    \n                \n                        \n                            \n                                被定义在 src/results/json.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoResult(undefined: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/results/json.ts:32\n                            \n                        \n\n\n                \n                    \n                            将json对象序列化写入body\n\n@框架调用方法，请勿手动调用\n\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import camel from \"camelcase\";\nimport decamel from \"decamelize\";\nimport set from \"lodash/set\";\nimport { IResult, IResultScope } from \"../typings/IResult\";\nimport { JsonResultOptions, JSON_RESULT_OPTIONS } from \"../options\";\nimport { resolveKeys } from \"../utils\";\n\n/**\n * ## Body序列化约定实现\n * * 按照约定将内容序列化到body响应中\n * @description\n * @author Big Mogician\n * @export\n * @class JsonResult\n * @implements {IResult}\n */\nexport class JsonResult implements IResult {\n  constructor(\n    private value: any,\n    private configs?: Partial\n  ) {}\n\n  /**\n   * ### 将json对象序列化写入body\n   * * @框架调用方法，请勿手动调用\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} { configs }\n   * @returns {string}\n   * @memberof JsonResult\n   */\n  toResult({ configs }: IResultScope): string {\n    const {\n      format,\n      whiteSpace: b,\n      keyResolver: r,\n      jsonTemplate: tpl,\n      jsonTplKey: tplKey\n    } = {\n      ...configs.get(JSON_RESULT_OPTIONS),\n      ...this.configs\n    };\n    let value = this.value || {};\n    if (tpl) {\n      const n = { ...tpl };\n      if (tplKey) set(n, tplKey, value);\n      value = n;\n    }\n    return JSON.stringify(\n      !r ? value : resolveKeys(r, value),\n      null,\n      decideWhiteSpace(format, b)\n    );\n  }\n}\n\nfunction decideWhiteSpace(format: boolean, b: 0 | 1 | 2 | 4) {\n  if (!format) return \"\";\n  switch (b) {\n    case 4:\n      return \"    \";\n    case 2:\n      return \"  \";\n    case 1:\n      return \" \";\n    case 0:\n      return \"\";\n    default:\n      return \"\";\n  }\n}\n\nfunction camelCase(key: string) {\n  return camel(key);\n}\n\nfunction snakeCase(key: string) {\n  return decamel(key, \"_\");\n}\n\nexport const JsonResolvers = {\n  camelcase: camelCase,\n  snakecase: snakeCase\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/JsonResultOptions.html":{"url":"interfaces/JsonResultOptions.html","title":"interface - JsonResultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  JsonResultOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/json.options.ts\n        \n\n            \n                描述\n            \n            \n                配置JsonResult的解析方式\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                            可选的\n                                        jsonTemplate\n                                \n                                \n                                            可选的\n                                        jsonTplKey\n                                \n                                \n                                            可选的\n                                        keyResolver\n                                \n                                \n                                        whiteSpace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否进行格式化 - 默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonTemplate\n                                    \n                                \n                                \n                                    \n                                        jsonTemplate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    json模板 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonTplKey\n                                    \n                                \n                                \n                                    \n                                        jsonTplKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    json模板上写入内容的字段位置 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyResolver\n                                    \n                                \n                                \n                                    \n                                        keyResolver:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    对象键值处理函数 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whiteSpace\n                                    \n                                \n                                \n                                    \n                                        whiteSpace:     \"0\" | \"1\" | \"2\" | \"4\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"0\" | \"1\" | \"2\" | \"4\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    格式化空格数量 - 默认：2 \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\n/**\n * ## 配置JsonResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface JsonResultOptions\n */\nexport interface JsonResultOptions {\n  /** 是否进行格式化 - 默认：`false` */\n  format: boolean;\n  /** 格式化空格数量 - 默认：`2` */\n  whiteSpace: 0 | 1 | 2 | 4;\n  /** 对象键值处理函数 - 默认：`undefined` */\n  keyResolver?: (key: string) => string;\n  /** json模板 - 默认：`undefined` */\n  jsonTemplate?: { [prop: string]: any };\n  /** json模板上写入内容的字段位置 - 默认：`undefined` */\n  jsonTplKey?: string;\n}\n\nexport const defaultJsonResultOptions: JsonResultOptions = {\n  format: false,\n  whiteSpace: 2,\n  keyResolver: undefined,\n  jsonTemplate: undefined,\n  jsonTplKey: undefined\n};\n\nexport const JSON_RESULT_OPTIONS = createOptions(\n  \"JSON_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/NormalizedMessage.html":{"url":"classes/NormalizedMessage.html","title":"class - NormalizedMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  NormalizedMessage\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/NormalizedMessage.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                character\n                            \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                content\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                file\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                line\n                            \n                            \n                                    Public\n                                    Readonly\n                                severity\n                            \n                            \n                                    Static\n                                    Readonly\n                                SEVERITY_ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                SEVERITY_WARNING\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                            \n                                    Static\n                                    Readonly\n                                TYPE_DIAGNOSTIC\n                            \n                            \n                                    Static\n                                    Readonly\n                                TYPE_LINT\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compare\n                            \n                            \n                                    Static\n                                compareNumbers\n                            \n                            \n                                    Static\n                                compareOptionalStrings\n                            \n                            \n                                    Static\n                                compareSeverities\n                            \n                            \n                                    Static\n                                compareTypes\n                            \n                            \n                                    Static\n                                createFromJSON\n                            \n                            \n                                    Static\n                                deduplicate\n                            \n                            \n                                    Static\n                                equals\n                            \n                            \n                                    Public\n                                getFormattedCode\n                            \n                            \n                                    Public\n                                isDiagnosticType\n                            \n                            \n                                    Public\n                                isErrorSeverity\n                            \n                            \n                                    Public\n                                isLintType\n                            \n                            \n                                    Public\n                                isWarningSeverity\n                            \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(data: NormalizedMessageJson)\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/utils/NormalizedMessage.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    NormalizedMessageJson\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            character\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string | number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SEVERITY_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"error\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SEVERITY_WARNING\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"warning\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TYPE_DIAGNOSTIC\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"diagnostic\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TYPE_LINT\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"lint\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compare(messageA: NormalizedMessage, messageB: NormalizedMessage)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messageA\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        messageB\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareNumbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareNumbers(numberA?: number, numberB?: number)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        numberA\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numberB\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareOptionalStrings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareOptionalStrings(stringA?: string, stringB?: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        stringA\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        stringB\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareSeverities\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareSeverities(severityA: Severity, severityB: Severity)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        severityA\n                                                        \n                                                                    Severity\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        severityB\n                                                        \n                                                                    Severity\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareTypes(typeA: ErrorType, typeB: ErrorType)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typeA\n                                                        \n                                                                    ErrorType\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        typeB\n                                                        \n                                                                    ErrorType\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createFromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFromJSON(json: NormalizedMessageJson)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    NormalizedMessageJson\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     NormalizedMessage\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            deduplicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deduplicate(messages: NormalizedMessage[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messages\n                                                        \n                                                                    NormalizedMessage[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            equals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        equals(messageA: NormalizedMessage, messageB: NormalizedMessage)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messageA\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        messageB\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormattedCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormattedCode()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     string | number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDiagnosticType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDiagnosticType()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isErrorSeverity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isErrorSeverity()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLintType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isLintType()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isWarningSeverity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isWarningSeverity()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toJSON()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     NormalizedMessageJson\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type ErrorType = \"diagnostic\" | \"lint\";\nexport type Severity = \"error\" | \"warning\";\n\ninterface NormalizedMessageJson {\n  type: ErrorType;\n  code: string | number;\n  severity: Severity;\n  content: string;\n  file?: string;\n  line?: number;\n  character?: number;\n}\n\nexport class NormalizedMessage {\n  public static readonly TYPE_DIAGNOSTIC: ErrorType = \"diagnostic\";\n  public static readonly TYPE_LINT: ErrorType = \"lint\";\n\n  // severity types\n  public static readonly SEVERITY_ERROR: Severity = \"error\";\n  public static readonly SEVERITY_WARNING: Severity = \"warning\";\n\n  public readonly type: ErrorType;\n  public readonly code: string | number;\n  public readonly severity: Severity;\n  public readonly content: string;\n  public readonly file?: string;\n  public readonly line?: number;\n  public readonly character?: number;\n\n  constructor(data: NormalizedMessageJson) {\n    this.type = data.type;\n    this.code = data.code;\n    this.severity = data.severity;\n    this.content = data.content;\n    this.file = data.file;\n    this.line = data.line;\n    this.character = data.character;\n  }\n\n  public static createFromJSON(json: NormalizedMessageJson) {\n    return new NormalizedMessage(json);\n  }\n\n  public static compare(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    if (!(messageA instanceof NormalizedMessage)) {\n      return -1;\n    }\n    if (!(messageB instanceof NormalizedMessage)) {\n      return 1;\n    }\n\n    return (\n      NormalizedMessage.compareTypes(messageA.type, messageB.type) ||\n      NormalizedMessage.compareOptionalStrings(messageA.file, messageB.file) ||\n      NormalizedMessage.compareSeverities(\n        messageA.severity,\n        messageB.severity\n      ) ||\n      NormalizedMessage.compareNumbers(messageA.line, messageB.line) ||\n      NormalizedMessage.compareNumbers(\n        messageA.character,\n        messageB.character\n      ) ||\n      // code can be string (lint failure) or number (typescript error) - should the following line cater for this in some way?\n      NormalizedMessage.compareOptionalStrings(\n        messageA.code as string,\n        messageB.code as string\n      ) ||\n      NormalizedMessage.compareOptionalStrings(\n        messageA.content,\n        messageB.content\n      ) ||\n      0 /* EqualTo */\n    );\n  }\n\n  public static equals(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    return this.compare(messageA, messageB) === 0;\n  }\n\n  public static deduplicate(messages: NormalizedMessage[]) {\n    return messages.sort(NormalizedMessage.compare).filter((message, index) => {\n      return (\n        index === 0 || !NormalizedMessage.equals(message, messages[index - 1])\n      );\n    });\n  }\n\n  public static compareTypes(typeA: ErrorType, typeB: ErrorType) {\n    const priorities = [typeA, typeB].map(type => {\n      return [\n        NormalizedMessage.TYPE_LINT /* 0 */,\n        NormalizedMessage.TYPE_DIAGNOSTIC /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareSeverities(severityA: Severity, severityB: Severity) {\n    const priorities = [severityA, severityB].map(type => {\n      return [\n        NormalizedMessage.SEVERITY_WARNING /* 0 */,\n        NormalizedMessage.SEVERITY_ERROR /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareOptionalStrings(stringA?: string, stringB?: string) {\n    if (stringA === stringB) {\n      return 0;\n    }\n    if (stringA === undefined || stringA === null) {\n      return -1;\n    }\n    if (stringB === undefined || stringB === null) {\n      return 1;\n    }\n\n    return stringA.toString().localeCompare(stringB.toString());\n  }\n\n  public static compareNumbers(numberA?: number, numberB?: number) {\n    if (numberA === numberB) {\n      return 0;\n    }\n    if (numberA === undefined || numberA === null) {\n      return -1;\n    }\n    if (numberB === undefined || numberB === null) {\n      return 1;\n    }\n    return numberA - numberB;\n  }\n\n  public toJSON() {\n    return {\n      type: this.type,\n      code: this.code,\n      severity: this.severity,\n      content: this.content,\n      file: this.file,\n      line: this.line,\n      character: this.character\n    } as NormalizedMessageJson;\n  }\n\n  public isDiagnosticType() {\n    return NormalizedMessage.TYPE_DIAGNOSTIC === this.type;\n  }\n\n  public isLintType() {\n    return NormalizedMessage.TYPE_LINT === this.type;\n  }\n\n  public getFormattedCode() {\n    return this.isDiagnosticType() ? \"TS\" + this.code : this.code;\n  }\n\n  public isErrorSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_ERROR;\n  }\n\n  public isWarningSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_WARNING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/NormalizedMessageJson.html":{"url":"interfaces/NormalizedMessageJson.html","title":"interface - NormalizedMessageJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  NormalizedMessageJson\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/NormalizedMessage.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        character\n                                \n                                \n                                        code\n                                \n                                \n                                        content\n                                \n                                \n                                            可选的\n                                        file\n                                \n                                \n                                            可选的\n                                        line\n                                \n                                \n                                        severity\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        character\n                                    \n                                \n                                \n                                    \n                                        character:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                    \n                                \n                                \n                                    \n                                        line:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        severity\n                                    \n                                \n                                \n                                    \n                                        severity:     Severity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Severity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ErrorType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ErrorType = \"diagnostic\" | \"lint\";\nexport type Severity = \"error\" | \"warning\";\n\ninterface NormalizedMessageJson {\n  type: ErrorType;\n  code: string | number;\n  severity: Severity;\n  content: string;\n  file?: string;\n  line?: number;\n  character?: number;\n}\n\nexport class NormalizedMessage {\n  public static readonly TYPE_DIAGNOSTIC: ErrorType = \"diagnostic\";\n  public static readonly TYPE_LINT: ErrorType = \"lint\";\n\n  // severity types\n  public static readonly SEVERITY_ERROR: Severity = \"error\";\n  public static readonly SEVERITY_WARNING: Severity = \"warning\";\n\n  public readonly type: ErrorType;\n  public readonly code: string | number;\n  public readonly severity: Severity;\n  public readonly content: string;\n  public readonly file?: string;\n  public readonly line?: number;\n  public readonly character?: number;\n\n  constructor(data: NormalizedMessageJson) {\n    this.type = data.type;\n    this.code = data.code;\n    this.severity = data.severity;\n    this.content = data.content;\n    this.file = data.file;\n    this.line = data.line;\n    this.character = data.character;\n  }\n\n  public static createFromJSON(json: NormalizedMessageJson) {\n    return new NormalizedMessage(json);\n  }\n\n  public static compare(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    if (!(messageA instanceof NormalizedMessage)) {\n      return -1;\n    }\n    if (!(messageB instanceof NormalizedMessage)) {\n      return 1;\n    }\n\n    return (\n      NormalizedMessage.compareTypes(messageA.type, messageB.type) ||\n      NormalizedMessage.compareOptionalStrings(messageA.file, messageB.file) ||\n      NormalizedMessage.compareSeverities(\n        messageA.severity,\n        messageB.severity\n      ) ||\n      NormalizedMessage.compareNumbers(messageA.line, messageB.line) ||\n      NormalizedMessage.compareNumbers(\n        messageA.character,\n        messageB.character\n      ) ||\n      // code can be string (lint failure) or number (typescript error) - should the following line cater for this in some way?\n      NormalizedMessage.compareOptionalStrings(\n        messageA.code as string,\n        messageB.code as string\n      ) ||\n      NormalizedMessage.compareOptionalStrings(\n        messageA.content,\n        messageB.content\n      ) ||\n      0 /* EqualTo */\n    );\n  }\n\n  public static equals(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    return this.compare(messageA, messageB) === 0;\n  }\n\n  public static deduplicate(messages: NormalizedMessage[]) {\n    return messages.sort(NormalizedMessage.compare).filter((message, index) => {\n      return (\n        index === 0 || !NormalizedMessage.equals(message, messages[index - 1])\n      );\n    });\n  }\n\n  public static compareTypes(typeA: ErrorType, typeB: ErrorType) {\n    const priorities = [typeA, typeB].map(type => {\n      return [\n        NormalizedMessage.TYPE_LINT /* 0 */,\n        NormalizedMessage.TYPE_DIAGNOSTIC /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareSeverities(severityA: Severity, severityB: Severity) {\n    const priorities = [severityA, severityB].map(type => {\n      return [\n        NormalizedMessage.SEVERITY_WARNING /* 0 */,\n        NormalizedMessage.SEVERITY_ERROR /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareOptionalStrings(stringA?: string, stringB?: string) {\n    if (stringA === stringB) {\n      return 0;\n    }\n    if (stringA === undefined || stringA === null) {\n      return -1;\n    }\n    if (stringB === undefined || stringB === null) {\n      return 1;\n    }\n\n    return stringA.toString().localeCompare(stringB.toString());\n  }\n\n  public static compareNumbers(numberA?: number, numberB?: number) {\n    if (numberA === numberB) {\n      return 0;\n    }\n    if (numberA === undefined || numberA === null) {\n      return -1;\n    }\n    if (numberB === undefined || numberB === null) {\n      return 1;\n    }\n    return numberA - numberB;\n  }\n\n  public toJSON() {\n    return {\n      type: this.type,\n      code: this.code,\n      severity: this.severity,\n      content: this.content,\n      file: this.file,\n      line: this.line,\n      character: this.character\n    } as NormalizedMessageJson;\n  }\n\n  public isDiagnosticType() {\n    return NormalizedMessage.TYPE_DIAGNOSTIC === this.type;\n  }\n\n  public isLintType() {\n    return NormalizedMessage.TYPE_LINT === this.type;\n  }\n\n  public getFormattedCode() {\n    return this.isDiagnosticType() ? \"TS\" + this.code : this.code;\n  }\n\n  public isErrorSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_ERROR;\n  }\n\n  public isWarningSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_WARNING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/NunjunksEngine.html":{"url":"injectables/NunjunksEngine.html","title":"injectable - NunjunksEngine","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  NunjunksEngine\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/nunjunks/core.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                @configs\n                            \n                            \n                                    Private\n                                @loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEnv\n                            \n                            \n                                    Public\n                                    Async\n                                render\n                            \n                            \n                                    Public\n                                    Async\n                                renderString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configs\n                                \n                                \n                                    loader\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(cfg: Configs, rs: Render)\n                    \n                \n                        \n                            \n                                被定义在 src/plugins/nunjunks/core.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        cfg\n                                                  \n                                                        \n                                                                    Configs\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        rs\n                                                  \n                                                        \n                                                                    Render\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createEnv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createEnv(configs?: INunjunksRenderOptions)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                        \n                                                                    INunjunksRenderOptions\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        render(name: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            renderString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        renderString(tpl: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            @configs\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     INunjunksRenderOptions\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            @loader\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     FileSystemLoader\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        configs\n                    \n                \n\n                \n                    \n                        getconfigs()\n                    \n                \n                            \n                                \n                                    被定义在 src/plugins/nunjunks/core.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n\n                \n                    \n                        getloader()\n                    \n                \n                            \n                                \n                                    被定义在 src/plugins/nunjunks/core.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"../../decorators/injectable\";\nimport { Render } from \"../../services/Render\";\nimport { IViewEngine } from \"../../typings/IViewEngine\";\nimport { Configs } from \"../../services/Configs\";\nimport { NUNJUNKS_OPTIONS, INunjunksRenderOptions } from \"./options\";\nimport { FileSystemLoader, Environment } from \"nunjucks\";\n\n@Injectable()\nexport class NunjunksEngine implements IViewEngine {\n  private \"@configs\": INunjunksRenderOptions;\n  private \"@loader\": FileSystemLoader;\n\n  private get configs() {\n    return (\n      this[\"@configs\"] || (this[\"@configs\"] = this.cfg.get(NUNJUNKS_OPTIONS))\n    );\n  }\n\n  private get loader() {\n    return (\n      this[\"@loader\"] ||\n      (this[\"@loader\"] = new FileSystemLoader(this.configs.root, {\n        noCache: !this.configs.cache\n      }))\n    );\n  }\n\n  private createEnv(configs?: INunjunksRenderOptions) {\n    return new Environment(\n      this.loader,\n      !configs ? this.configs : { ...this.configs, ...configs }\n    );\n  }\n\n  constructor(private cfg: Configs, private rs: Render) {}\n\n  public async render(name: string, configs: any): Promise {\n    return this.createEnv(configs).render(name, this.rs.views);\n  }\n\n  public async renderString(tpl: string, configs: any): Promise {\n    return this.createEnv(configs).renderString(tpl, this.rs.views);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ParamsOptions.html":{"url":"interfaces/ParamsOptions.html","title":"interface - ParamsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ParamsOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        transform\n                                \n                                \n                                        useStatic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                    \n                                \n                                \n                                    \n                                        transform:     ParamsResolver\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ParamsResolver\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useStatic\n                                    \n                                \n                                \n                                    \n                                        useStatic:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RealConfigCollection.html":{"url":"classes/RealConfigCollection.html","title":"class - RealConfigCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RealConfigCollection\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n            \n                实现\n            \n            \n                        IConfigCollection\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                toArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map()\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Configs.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(token: ConfigToken)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:33\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    ConfigToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(token: ConfigToken, entry: T)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:29\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    ConfigToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toArray()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     ConfigEntry[]\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Render.html":{"url":"injectables/Render.html","title":"injectable - Render","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Render\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n            \n                描述\n            \n            \n                统一渲染服务\n\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _views\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    views\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: AstroboyContext)\n                    \n                \n                        \n                            \n                                被定义在 src/services/Render.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    AstroboyContext\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:52\n                            \n                        \n\n\n                \n                    \n                            Render init\n\n重载方法已实现新的初始化逻辑\n\n\n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(obj: literal type, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(key: string, obj: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(key: string, obj: any, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     any\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Render.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        views\n                    \n                \n\n                \n                    \n                        getviews()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/Render.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RenderResult.html":{"url":"classes/RenderResult.html","title":"class - RenderResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RenderResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/results/render.ts\n        \n\n            \n                描述\n            \n            \n                Body渲染约定的实现\n\n按照约定将模板渲染到body相应中\n\n\n            \n\n\n            \n                实现\n            \n            \n                        IResult\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configs\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                toResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(value: string | Partial)\n                    \n                \n                        \n                            \n                                被定义在 src/results/render.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string | Partial\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configs\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Partial\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/results/render.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toResult(undefined: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/results/render.ts:27\n                            \n                        \n\n\n                \n                    \n                            框架调用，请勿手动调用 \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import merge from \"lodash/merge\";\nimport { IResult, IResultScope } from \"../typings/IResult\";\nimport { RenderResultOptions, RENDER_RESULT_OPTIONS } from \"../options\";\nimport { Context } from \"../services/Context\";\nimport { SimpleLogger } from \"../plugins/simple-logger\";\nimport { ENV } from \"../configs/env.config\";\nimport { IContext } from \"../typings/IContext\";\nimport { Render } from \"../services/Render\";\n\n/**\n * ## Body渲染约定的实现\n * * 按照约定将模板渲染到body相应中\n * @description\n * @author Big Mogician\n * @export\n * @class RenderResult\n * @implements {IResult}\n */\nexport class RenderResult implements IResult {\n  private configs!: Partial;\n\n  constructor(value: string | Partial) {\n    this.configs = typeof value === \"string\" ? { path: value } : value;\n  }\n\n  /** 框架调用，请勿手动调用 */\n  async toResult({ injector, configs }: IResultScope): Promise {\n    const { ctx } = injector.get(Context);\n    const opts = merge(\n      {},\n      configs.get(RENDER_RESULT_OPTIONS) || {},\n      this.configs || {}\n    );\n    const {\n      root,\n      path: xpath,\n      tplStr,\n      engines,\n      astConf,\n      engine: key,\n      configs: confs\n    } = opts;\n    if (astConf && !!astConf.use) {\n      return await ctx.render(xpath, astConf.state, astConf.configs);\n    }\n    const engine = injector.get(engines[key]);\n    const path = !root ? xpath : `${root}/${xpath}`;\n    try {\n      return !tplStr\n        ? await engine.render(path, confs)\n        : await engine.renderString(tplStr, confs);\n    } catch (e) {\n      const logger = injector.get(SimpleLogger);\n      const render = injector.get(Render);\n      const { ctx } = injector.get>(Context);\n      const { env } = configs.get(ENV);\n      const errroTitle =\n        (e.name && `模板渲染错误: ${e.name}`) || \"模板渲染错误\";\n      render.setView(\"__viewError\", e);\n      logger.debug(errroTitle, e);\n      ctx.status = 500;\n      const { path: errorPath, tplStr: errorTpl, content } =\n        env === \"production\" ? opts.onError : opts.onDevError;\n      if (errorPath) return await engine.render(errorPath, confs);\n      if (errorTpl) return await engine.renderString(errorTpl, confs);\n      return (content && content(e)) || \"Internal Server Error\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RenderResultOptions.html":{"url":"interfaces/RenderResultOptions.html","title":"interface - RenderResultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RenderResultOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/render.options.ts\n        \n\n            \n                描述\n            \n            \n                配置RenderResult的解析方式\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        astConf\n                                \n                                \n                                        configs\n                                \n                                \n                                        engine\n                                \n                                \n                                        engines\n                                \n                                \n                                        onDevError\n                                \n                                \n                                        onError\n                                \n                                \n                                        path\n                                \n                                \n                                        root\n                                \n                                \n                                        tplStr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        astConf\n                                    \n                                \n                                \n                                    \n                                        astConf:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    astroboy原生渲染的参数配置 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    配置信息，将作为渲染引擎需要接受的configs字段下传，默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    默认的模板引擎，默认：\"nunjunks\" \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engines\n                                    \n                                \n                                \n                                    \n                                        engines:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板引擎DI列表，可以动态merge合并配置，默认：{ nunjunks: NunjunksEngine } \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onDevError\n                                    \n                                \n                                \n                                    \n                                        onDevError:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    当渲染错误(开发模式)需要走的执行逻辑 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onError\n                                    \n                                \n                                \n                                    \n                                        onError:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    当渲染错误(生产模式)需要走的执行逻辑 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板文件相对路径，默认：\"\" \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tplStr\n                                    \n                                \n                                \n                                    \n                                        tplStr:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板字符串，如果提供将优先使用此渲染，默认：undefined \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\nimport { createOptions } from \"../services/Configs\";\nimport { NunjunksEngine } from \"../plugins/nunjunks\";\nimport { IViewEngine } from \"../typings/IViewEngine\";\n\n/**\n * ## 模板渲染错误处理接口\n * @description\n * @author Big Mogician\n * @interface IErrorHandler\n */\ninterface IErrorHandler {\n  /** 错误页面模板的path，默认：`undefined` */\n  path: string | false;\n  /** 错误页面字符串模板，默认：`undefined` */\n  tplStr: string | false;\n  /**\n   * 错误页面渲染函数，作为兜底的渲染能力提供，\n   * * 默认(dev)：`() => \"${错误的堆栈信息}\"\"`\n   * * 默认(prod)：`() => \"Internal Server Error\"`\n   * * 通常不要复写此字段，除非`path`或`tplStr`能够提供可用的内容\n   */\n  content: (error: Error, title?: string) => string;\n}\n\n/**\n * ## 配置RenderResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface RenderResultOptions\n */\nexport interface RenderResultOptions {\n  /** astroboy原生渲染的参数配置 */\n  astConf: {\n    /** 使用原生的渲染逻辑，默认：`false` */\n    use: boolean;\n    /** 原生astroboy渲染时的`config`字段，默认：`undefined` */\n    configs: any;\n    /** 原生astroboy渲染时的`state`字段，默认：`undefined` */\n    state: any;\n  };\n  /** 模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined` */\n  root: string;\n  /** 模板文件相对路径，默认：`\"\"` */\n  path: string;\n  /** 模板字符串，如果提供将优先使用此渲染，默认：`undefined` */\n  tplStr: string;\n  /** 配置信息，将作为渲染引擎需要接受的configs字段下传，默认：`undefined` */\n  configs: any;\n  /** 默认的模板引擎，默认：`\"nunjunks\"` */\n  engine: T;\n  /** 模板引擎DI列表，可以动态merge合并配置，默认：`{ nunjunks: NunjunksEngine }` */\n  engines: {\n    [prop: string]: Constructor;\n  };\n  /** 当渲染错误(生产模式)需要走的执行逻辑 */\n  onError: Partial;\n  /** 当渲染错误(开发模式)需要走的执行逻辑 */\n  onDevError: Partial;\n}\n\nexport const defaultRenderResultOptions: RenderResultOptions = {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n};\n\nfunction checkCustomError(error: Error) {\n  return error && error.name && error.name !== \"Error\";\n}\n\n/** RenderResult配置token */\nexport const RENDER_RESULT_OPTIONS = createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Request\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/controller.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Constructor, IBaseInjectable } from \"@bonbons/di\";\nimport { Router } from \"astroboy-router\";\nimport { createInstance, GlobalImplements, getInjector } from \"../utils\";\nimport { InjectService } from \"../services/Injector\";\nimport { Context } from \"../services/Context\";\nimport { ICommonResultType, IResult } from \"../typings/IResult\";\nimport { IContext } from \"../typings/IContext\";\nimport { Configs } from \"../services/Configs\";\nimport { tryGetRouteMagic, RouteArgument } from \"./route\";\nimport { STATIC_RESOLVER } from \"../options/typed-serialize.options\";\nimport { IStaticTypedResolver } from \"../typings/IStaticTypeResolver\";\n\ndeclare module \"koa\" {\n  interface Request {\n    body: any;\n  }\n}\n\nconst INTERNAL_INJECTOR = \"$INTERNAL_INJECTOR\";\nconst $$injector = \"$$injector\";\n\n/**\n * ## 定义控制器\n * * routes部分由astroboy-router实现\n * @description\n * @author Big Mogician\n * @export\n * @param {string} prefix\n * @returns\n */\nexport function Controller(prefix: string) {\n  return function(target: Constructor) {\n    const prototype: IBaseInjectable = target.prototype;\n    prototype.__valid = true;\n    Router(prefix)(target);\n    const DI_CONTROLLER = class {\n      constructor(ctx) {\n        const injector = getInjector(ctx);\n        const controller = createInstance(target, ctx);\n        controller[INTERNAL_INJECTOR] = injector;\n        return controller;\n      }\n    };\n    Object.defineProperty(prototype, $$injector, {\n      get() {\n        return this[INTERNAL_INJECTOR];\n      },\n      configurable: false,\n      enumerable: false\n    });\n    const { routes = {} } = prototype[\"@router\"];\n    Object.getOwnPropertyNames(prototype).forEach(name => {\n      if (name === \"@router\") return;\n      if (name === \"constructor\") return;\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, name);\n      const { value, get } = descriptor;\n      if (get) return;\n      if (name in routes && value && typeof value === \"function\") {\n        const { params: routeParams } = tryGetRouteMagic(prototype, name);\n        descriptor.value = async function() {\n          const injector: InjectService = this[$$injector];\n          const { ctx } = injector.get(Context);\n          const staticResolver = injector.get(Configs).get(STATIC_RESOLVER);\n          const params = resolveRouteMethodParams(\n            routeParams,\n            ctx,\n            staticResolver\n          );\n          const result: ICommonResultType = await value.bind(this)(...params);\n          if (result) resolveMethodResult(result, ctx, injector);\n        };\n        Object.defineProperty(prototype, name, descriptor);\n      }\n    });\n    copyPrototype(DI_CONTROLLER, target);\n    GlobalImplements.set(DI_CONTROLLER, target);\n    return >DI_CONTROLLER;\n  };\n}\n\nexport function copyPrototype(\n  DI_CONTROLLER: Constructor,\n  target: Constructor\n) {\n  Object.getOwnPropertyNames(target.prototype).forEach(name => {\n    Object.defineProperty(\n      DI_CONTROLLER.prototype,\n      name,\n      Object.getOwnPropertyDescriptor(target.prototype, name)\n    );\n  });\n  // @ts-ignore\n  DI_CONTROLLER.prototype.__proto__ = target.prototype.__proto__;\n  // @ts-ignore\n  DI_CONTROLLER.__proto__ = target.__proto__;\n}\n\nfunction resolveRouteMethodParams(\n  routeParams: RouteArgument[],\n  ctx: IContext,\n  staticResolver: IStaticTypedResolver\n) {\n  const params: any[] = [];\n  routeParams.forEach(i => {\n    const { index, type, resolver, ctor, static: stac } = i;\n    let final: any;\n    if (type === \"body\") {\n      const v = !resolver ? ctx.request.body : resolver(ctx.request.body || {});\n      final = resolveStaticType(stac, ctor, v, staticResolver);\n    } else {\n      const v = !resolver\n        ? { ...ctx.query, ...ctx.params }\n        : resolver({ ...ctx.query, ...ctx.params });\n      final = resolveStaticType(stac, ctor, v, staticResolver);\n    }\n    params[index] = final;\n  });\n  return params;\n}\n\nfunction resolveStaticType(\n  stac: boolean | undefined,\n  ctor: any,\n  value: any,\n  staticResolver: IStaticTypedResolver\n) {\n  return !ctor || stac === false\n    ? value || {}\n    : typeTransform(staticResolver, value, ctor);\n}\n\nfunction typeTransform(\n  staticResolver: IStaticTypedResolver,\n  value: any,\n  ctor: any\n) {\n  switch (ctor) {\n    case Number:\n    case String:\n      return ctor(value);\n    case Boolean:\n      return String(value || \"\") === \"true\";\n    case Object:\n      return value || {};\n    default:\n      return staticResolver.FromObject(value || {}, ctor);\n  }\n}\n\nasync function resolveMethodResult(\n  result: string | IResult,\n  ctx: IContext,\n  injector: InjectService\n) {\n  if ((result).toResult) {\n    ctx.body = await (result).toResult({\n      injector,\n      configs: injector.get(Configs)\n    });\n  } else {\n    ctx.body = result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouteArgument.html":{"url":"interfaces/RouteArgument.html","title":"interface - RouteArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouteArgument\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctor\n                                \n                                \n                                        index\n                                \n                                \n                                        resolver\n                                \n                                \n                                        static\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctor\n                                    \n                                \n                                \n                                    \n                                        ctor:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolver\n                                    \n                                \n                                \n                                    \n                                        resolver:     ParamsResolver | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ParamsResolver | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        static\n                                    \n                                \n                                \n                                    \n                                        static:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"params\" | \"body\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"params\" | \"body\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig.html":{"url":"interfaces/RouterConfig.html","title":"interface - RouterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    RConfig\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig-1.html":{"url":"interfaces/RouterConfig-1.html","title":"interface - RouterConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        always\n                                \n                                \n                                            可选的\n                                        approot\n                                \n                                \n                                            可选的\n                                        details\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        filetype\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approot\n                                    \n                                \n                                \n                                    \n                                        approot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filetype\n                                    \n                                \n                                \n                                    \n                                        filetype:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig-2.html":{"url":"interfaces/RouterConfig-2.html","title":"interface - RouterConfig-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    RConfig\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterOptions.html":{"url":"interfaces/RouterOptions.html","title":"interface - RouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/router.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        always\n                                \n                                \n                                        appRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        fileType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制刷新2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRoot\n                                    \n                                \n                                \n                                    \n                                        appRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    整个项目的url前缀，默认：'/' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动生成2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    生成router文件的文件类型，默认：'js' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerRouterOptions extends RouterOptions {\n  ctorFolder: string;\n  routerFolder: string;\n}\n\nexport interface RouterOptions {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\nexport const defaultRouterOptions: InnerRouterOptions = {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n};\n\nexport const ROUTER_OPTIONS = createOptions(\"ROUTER_OPTIONS\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Scope.html":{"url":"injectables/Scope.html","title":"injectable - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Scope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Scope.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                scopeId\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                begin\n                            \n                            \n                                    Public\n                                diration\n                            \n                            \n                                    Protected\n                                end\n                            \n                            \n                                    Protected\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            begin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        begin()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            diration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        diration()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        end()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(id: ScopeID)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    ScopeID\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _init\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : false\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scopeId\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ScopeID\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Date\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Date\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/Scope.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"../decorators/injectable\";\nimport { ScopeID } from \"@bonbons/di\";\n\nexport namespace Scope {\n  export interface Contract {\n    readonly id: ScopeID;\n    diration(): number;\n  }\n}\n\n@Injectable()\nexport class Scope implements Scope.Contract {\n  private _init = false;\n  private scopeId!: ScopeID;\n  private start!: Date;\n  private stop!: Date;\n\n  public get id() {\n    return this.scopeId;\n  }\n\n  protected init(id: ScopeID) {\n    if (this._init) return this;\n    this._init = true;\n    this.scopeId = id;\n    return this;\n  }\n\n  protected begin() {\n    if (!this.start) {\n      this.start = new Date();\n    }\n  }\n\n  protected end() {\n    if (!this.stop) {\n      this.stop = new Date();\n    }\n  }\n\n  public diration() {\n    if (this.start && this.stop) {\n      return this.stop.getTime() - this.start.getTime();\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/TypedSerializerCreator.html":{"url":"classes/TypedSerializerCreator.html","title":"class - TypedSerializerCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  TypedSerializerCreator\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/typed-serializer/core.ts\n        \n\n            \n                描述\n            \n            \n                内建静态类型序列化工具类\n\n            \n\n\n            \n                实现\n            \n            \n                        IStaticTypedResolver\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                FromJSON\n                            \n                            \n                                    Public\n                                FromObject\n                            \n                            \n                                    Public\n                                ToJSON\n                            \n                            \n                                    Public\n                                ToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        FromJSON(json: string, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:29\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        FromObject(json: any, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:43\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ToJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ToJSON(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:17\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ToObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ToObject(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:35\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IStaticTypedResolver,\n  IStaticSerializeOptions\n} from \"../../typings/IStaticTypeResolver\";\nimport { Serialize, Deserialize, GenericDeserialize } from \"cerialize\";\nimport { Constructor } from \"@bonbons/di\";\n\n/**\n * 内建静态类型序列化工具类\n * @description\n * @author Big Mogician\n * @export\n * @class TypedSerializerCreator\n * @implements {IStaticTypedResolver}\n */\nexport class TypedSerializerCreator implements IStaticTypedResolver {\n  public ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string {\n    if (options === undefined) options = { format: false };\n    return JSON.stringify(\n      Serialize(obj, options.type),\n      null,\n      options.format ? \"  \" : 0\n    );\n  }\n\n  public FromJSON(json: string, type?: Constructor): T {\n    return !type\n      ? (Deserialize(JSON.parse(json)) as T)\n      : (GenericDeserialize(JSON.parse(json), type) as T);\n  }\n\n  public ToObject(\n    obj: any,\n    options?: Partial>\n  ): any {\n    if (options === undefined) options = { format: false };\n    return Serialize(obj, options.type);\n  }\n\n  public FromObject(json: any, type?: Constructor): T {\n    return !type\n      ? (Deserialize(json) as T)\n      : (GenericDeserialize(json, type) as T);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n迭代记录\n1.0.11-rc.4\n\nServer 部分函数支持继承树扩展\n少量代码重构\n\n1.0.11-rc.2\n\n新增 Bundles 特性支持移动 DI\n\n1.0.11\n\n更新 @bonbons/di 到 1.3.5\n增加 UT 覆盖\n\n1.0.9-rc.1\n\n[ BREAKING CHANGE ] 调整 DI 接受工厂函数的类型，工厂函数 injector 和 configs\n\n1.0.8\n\n1.0.8 功能锁定\n\n1.0.7-rc.3\n\n恢复 tsconfig-paths 支持\n\n1.0.7-rc.1\n\n调整版本策略\n\n1.0.7\n\n1.0.7 功能锁定\n调整 package 解构\n修复问题\n\n1.0.6-rc.3\n\n[ BREAKING CHANGE ] rename CMD to AtcCLI\n\n1.0.6\n\n1.0.6 功能锁定\n\n1.0.5-rc.5\n\n新增 CMD namespace\n\n1.0.5\n\n1.0.5 功能锁定\natc 支持并行类型检查，默认开启\n\n1.0.4\n\n1.0.4 功能锁定\n\n1.0.3-rc.21\n\n细节优化\n\n1.0.3-rc.16\n\n新增全局错误处理\n\n1.0.3-rc.12\n\n修复 Injectable 装饰器故障\n\n1.0.3-rc.9\n\n增强多重继承的类型化写法\nRender 新增 init 重载钩子\n\n1.0.3-rc.7\n\n[ BREAKING CHANGE ] 调整 RenderResult 的原生参数配置\n所有基础服务全部完成契约化，可以通过 class 本身的 Contract 拿到其公共接口\n增加大量文档和注释\n\n1.0.3-rc.5\n\nDI 接入的重构\nInjectable 装饰器赠加新的重载\n\n1.0.3-rc.4\n\n增加单元测试\n\n1.0.3-rc.1\n\n功能锁定 1.0.3，开始新一轮 rc\n\n1.0.2-rc.39\n\n调整了内部日志的记录方式\n增强了 RenderResult 的模板扩展能力\n强化了模板渲染异常的处理逻辑\n\n1.0.2-rc.37\n\n[ BREAKING CHANGE ] 调整配置文件参数\n增加 atc-cli 对 router 命令的 config 文件支持\n\n1.0.2-rc.35\n\n[ BREAKING CHANGE ] 去除 atc-cli 对 js 的支持，去掉参数 --ts\n调整视觉风格\n\n1.0.2-rc.31\n\n修复找不到 Controller 的问题\n修复 nunjunks 默认模板 root 路径不正确的问题\n\n1.0.2-rc.29\n\n内置 nunjunks 模板渲染引擎\n新增 Render DI 渲染服务，可以自定义实现\n\n1.0.2-rc.28\n\nastt 新增 --config 指令，允许使用配置文件启动 cli\n\n1.0.2-rc.24\n\n[ BREAKING CHANGE ] astt 更名 atc ，并支持新的 dev 命令\n\n1.0.2-rc.23\n\nastt-cli 新增 tsconfig 配置支持\nastt-cli 新增 details 配置支持\n\n1.0.2-rc.20\n\nJsonResult 内置了支持模板定制的能力\n新增 RenderResult 对象能力\n新增 CONFIG_VIEW config 描述 astroboy 的 view 配置\n\n1.0.2-rc.18\n\n新增 __BASE_ROUTE_DECO_FACTORY 装饰器，为 Route 自定义提供最高扩展性\n\n1.0.2-rc.16\n\nastt-cli 工具已加入，支持生成 routers\n\n1.0.2-rc.1\n\n锁定 1.02 功能，开始新一轮 rc\n\n1.0.1-rc.30\n\n针对 @Controller 修饰过的 ts 控制器，将自动生成对应的 router.ts 文件\n当不存在 app/routers 文件夹的时候自动创建\n提供了一个独立的初始化routers的函数来支持进行发布前的预处理\n默认不执行初始化动作，可以选择预处理或是动态处理任意一种方式来实现\n\n1.0.1-rc.22\n\n[ BREAKING CHANGE ] 重新调整 Context 和 AstroboyContext 对于 ctx 类型复写的行为\n[ BREAKING CHANGE ] Context 取消在 AstroboyContext 中公开，只在继承链路中可见\nAstroboyContext 现在支持复写 app 和 config 字段的类型\n\n1.0.1-rc.20\n\n支持 DI 多重继承的能力\n\n1.0.1-rc.18\n\n[ BREAKING CHANGE ] 移除 @bonbons/di 的定义输出，并修复部分接口\n修复 astroboy-router 的一个兼容问题\n\n1.0.1-rc.15\n\n实现路由参数注入和类型安全映射\n支持扩展基础注入器，实现路由参数字段注入\n\n1.0.1-rc.14\n\n基本功能完成\n修复一些问题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                cmd.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            function\n            create\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            function\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            interface\n            IRouter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            checkIfOnlyDeclares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            checkRouterFolders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createJsFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createTsFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createTsRouterFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            initRouters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            CmdConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            CommandPlugin\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            IENV\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            InnerCmdConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            function\n            createCmdConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            function\n            mergeCmdConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            function\n            create\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            function\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/actions.ts\n            \n            function\n            refreshToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/actions.ts\n            \n            function\n            startTypeCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            function\n            validation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/options.ts\n            \n            interface\n            IDevCmdOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/dev/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/index.ts\n            \n            function\n            initCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/init.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            transpile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            tsconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            tsnode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/router/actions.ts\n            \n            function\n            showRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/router/options.ts\n            \n            interface\n            IRouterCmdOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/router/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            class\n            CancellationToken\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            interface\n            CancellationTokenData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            function\n            existsSync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/NormalizedMessage.ts\n            \n            class\n            NormalizedMessage\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/cmd/utils/NormalizedMessage.ts\n            \n            interface\n            NormalizedMessageJson\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/utils/loadConfig.ts\n            \n            function\n            loadConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            interface\n            ConfigurationFile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            createProgram\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            loadLinterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            loadProgramConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            interface\n            IENV\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            variable\n            defaultEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            interface\n            IView\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            variable\n            CONFIG_VIEW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            variable\n            defaultView\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            Controller\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            copyPrototype\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveMethodResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveRouteMethodParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveStaticType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            typeTransform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            variable\n            $$injector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            variable\n            INTERNAL_INJECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            interface\n            IInjectableConfigs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            IRouterMagic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            ParamsOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            RouteArgument\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            __BASE_ROUTE_DECO_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            addMagicForRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            DELETE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            GET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            POST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            PUT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            resolveParamType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            route_query\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            tryGetRouteMagic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            tryGetRouterMagic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            variable\n            MAGIC_CONTENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            interface\n            IPreProcess\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            buildRouter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preInitFn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preInitFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/core.ts\n            \n            interface\n            IMiddlewaresScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/middlewares/core.ts\n            \n            function\n            createMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            disposeRequestScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            initRequestScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            tryCatchGlobalError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            variable\n            serverInit\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            interface\n            IGlobalErrorHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            variable\n            defaultGlobalError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            variable\n            GLOBAL_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            interface\n            JsonResultOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            variable\n            defaultJsonResultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            variable\n            JSON_RESULT_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            interface\n            IErrorHandler\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            interface\n            RenderResultOptions\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            function\n            checkCustomError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            variable\n            defaultRenderResultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            variable\n            RENDER_RESULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            interface\n            InnerRouterOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            interface\n            RouterOptions\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            variable\n            defaultRouterOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            variable\n            ROUTER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/typed-serialize.options.ts\n            \n            variable\n            STATIC_RESOLVER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/core.ts\n            \n            injectable\n            NunjunksEngine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            interface\n            INunjunksRenderOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            variable\n            defaultNunjunksOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            variable\n            NUNJUNKS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            injectable\n            SimpleLogger\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            function\n            createStamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            function\n            createType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            interface\n            ISimpleLoggerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            variable\n            defaultSimpleLoggerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            variable\n            SIMPLE_LOGGER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/core.ts\n            \n            class\n            TypedSerializerCreator\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/index.ts\n            \n            variable\n            TypedSerializer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            class\n            JsonResult\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            camelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            decideWhiteSpace\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            snakeCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            variable\n            JsonResolvers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/render.ts\n            \n            class\n            RenderResult\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            class\n            Server\n            \n                47 %\n                (26/55)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            interface\n            FactoryContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            variable\n            _innerBundle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            variable\n            Bundles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/services/AstroboyContext.ts\n            \n            injectable\n            AstroboyContext\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/services/AstroboyContext.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/services/BaseClass.ts\n            \n            class\n            BaseClass\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/services/BaseClass.ts\n            \n            variable\n            BC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            class\n            RealConfigCollection\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            ConfigEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            ConfigToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            variable\n            createConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            variable\n            createOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Context.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createProxyByDepts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createProxyByKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            injectable\n            Render\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            interface\n            IGlobalSetOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Scope.ts\n            \n            injectable\n            Scope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/Scope.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IContext.ts\n            \n            interface\n            IContext\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/typings/IResult.ts\n            \n            interface\n            IResult\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/typings/IResult.ts\n            \n            interface\n            IResultScope\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IStaticTypeResolver.ts\n            \n            interface\n            IStaticSerializeOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IStaticTypeResolver.ts\n            \n            interface\n            IStaticTypedResolver\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/typings/IViewEngine.ts\n            \n            interface\n            IViewEngine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            createInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getMethodParamsType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getPropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getPrototypeConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getShortScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            isCustomClassInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            optionAssign\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            resolveDepts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            resolveKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            setColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            setScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            Colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            GlobalDI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            GlobalImplements\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        依赖项\n    \n    \n        \n            @bonbons/di : ^1.3.5\n        \n            @types/koa : ^2.0.47\n        \n            @types/koa-router : ^7.0.35\n        \n            @types/node : ^10.12.10\n        \n            @types/uuid : 3.4.4\n        \n            astroboy : 0.0.37\n        \n            astroboy-router : 1.2.0-rc.1\n        \n            camelcase : 4.1.0\n        \n            cerialize : 0.1.18\n        \n            chalk : 2.4.1\n        \n            commander : 2.19.0\n        \n            decamelize : 1.2.0\n        \n            lodash : ^4.17.11\n        \n            nodemon : 1.18.8\n        \n            nunjucks : 3.1.6\n        \n            rimraf : 2.6.2\n        \n            tsconfig-paths : 3.7.0\n        \n            tslib : ^1.9.3\n        \n            uuid : 3.3.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  列举\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            SimpleLogLevel   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/plugins/simple-logger/base.ts\n    \n        \n            \n                \n                    \n                        \n                        SimpleLogLevel\n                    \n                \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                值 : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                值 : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                值 : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                值 : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                值 : 4\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                值 : 5\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n&#x1F31F;astroboy.ts\n\n基于astroboy的 DI 版本，TypeScript3.2 信仰加成\n\n\n\n\n\n已经实现的功能\n\n高性能依赖注入[ 实现：@bonbons/di ]\n控制器声明式路由[ 实现：astroboy-router ]\n可扩展的注入式模版引擎\n可配置容器定义化\nDI 可注入依赖实现多重继承\n配置容器对接 astroboy 标准 configs 模式\n自动化生成 astroboy 的 routers 规范\n命令行工具支持\n完整兼容 astroboy 原始语义，支持任意扩展\n支持完整依赖注入能力的高级中间件\n路由方法返回配置接口化\n\n\n&#x1F628; 更多功能正在开发中...\n\nWiki + Demo\n\nDemo1:多版本并存 - 最大兼容预览(多重代码风格可以共存)\nDemo2:全量 astroboy.ts+构建 base 项目包 - base 仓库预览(构建继承 astroboy.ts 的 base 项目)\nDemo3:使用 base 仓库构建应用 - 最大预览(使用 base 项目构建应用)\nCore - 核心组件\nServices - 内置服务列表\nConfigs/Options - 配置列表\nDecorators - 装饰器列表\nFunctions - 功能函数\nInterfaces - 公开接口列表\n\n安装\nnpm install astroboy.tsyarn add astroboy.ts接入说明\n1. 按照 astroboy 框架要求创建应用程序目录（略）\n2. 调整 app.ts\nimport path from \"path\";\nimport { Server, Astroboy } from \"astroboy.ts\";\n\nServer.Create(Astroboy, {\n  ROOT_PATH: path.resolve(__dirname, \"..\")\n}).run({\n  onStart: () => console.log(\"hello world!\"),\n  onError: err => console.log(`oh shit : ${String(err)}`)\n});3. 配置初始化中间件\n\napp/middleware/server-init.ts\n\nimport { serverInit } from \"astroboy.ts\";\n\nexport = () => serverInit;\nconfig/middleware.default.js\n\nmodule.exports = {\n  \"server-init\": {\n    priority: 0.1,\n    enable: true\n  }\n};\nconfig/config.default.js\n\n/**\n * 默认配置文件\n */\nconst path = require(\"path\");\n\nmodule.exports = {\n  \"@astroboy.ts\": {\n    showTrace: false,\n    diType: \"proxy\"\n  }\n};4. 启动\n# 本地安装astrpboy.ts\n./node_modules/.bin/atc dev --inspect --tsconfig app/tsconfig.json\n# 全局装过astrpboy.ts\natc dev --inspect --tsconfig app/tsconfig.json开发姿势\n0.cli 配置文件\nastroboy.ts 开放了一个配置文件，用来简化 cli 参数的使用，类似 webpack，可以使用--config 参数修改配置文件的名字。\n\natc.config.js - 一个简单的配置文件\n\nconst path = require(\"path\");\n\nmodule.exports = {\n  tsconfig: \"tsconfig.json\",\n  inspect: true,\n  typeCheck: true,\n  transpile: true,\n  debug: \"*\",\n  mock: \"http://127.0.0.1:8001\",\n  // atc router 的命令配置\n  routers: {\n    enabled: true,\n    always: false,\n    approot: \"/v1\",\n    filetype: \"ts\",\n    details: true\n  },\n  // atc-cli监控的文件修改列表，自动重启node服务\n  watch: [\n    path.join(__dirname, \"app/**/*.*\"),\n    path.join(__dirname, \"config/**/*.*\"),\n    path.join(__dirname, \"plugins/**/*.*\")\n  ],\n  // 忽略的文件列表\n  ignore: []\n};1.编写路由控制器\n控制器方面使用装饰器来定制 Router 的业务层级，确定 Route 的 url 和 method，提供 params 和 body 的注入获取能力，并抽象了响应中 body 的写入能力。\n\napp/controllers/test.ts\n\nimport {\n  Controller,\n  Configs,\n  AstroboyContext,\n  ENV,\n  JsonResult,\n  GET,\n  POST,\n  FromParams,\n  FromBody,\n  Deserialize,\n  IContext\n} from \"astroboy.ts\";\n\ninterface GetQuery {\n  id: string;\n  name: string;\n  type: string;\n}\n\ninterface PostData {\n  id: number;\n  name: string;\n}\n\n@Controller(\"test\")\nclass TestController {\n  // 构造函数注入能力\n  constructor(\n    private configs: Configs,\n    private base: AstroboyContext\n  ) {}\n\n  // GET: {项目前缀}/api/test/testGet/:type?id=xxxx&name=xxxx\n  @GET(\"testGet/:type\")\n  // 显式进行params参数前提，作为路由方法参数\n  // 使用接口为了更好的类型描述，不会进行任何运行时类型处理\n  public methodGet(@FromParams() params: GetQuery) {\n    const { ctx } = this.base;\n    const { id, name, type } = params;\n    ctx.type = \"application/json\";\n    // JsonResult实现了IResult接口，提供将json内容编程化写入body的能力，同时提供了Configs容器的配置化支持\n    // 你可以自己实现自定义逻辑，只要实现IResult接口即可\n    return new JsonResult({\n      id,\n      name,\n      type,\n      url: ctx.url\n    });\n  }\n\n  // POST: {项目前缀}/api/post/:type?id=xxxx&name=xxxx\n  @POST(\"post/:type\")\n  // body也能进行相似的流程实现参数前提\n  // 你仍然可以进行直接解构\n  public async methodPost(\n    @FromParams() params: GetQuery,\n    @FromBody() { id, name }: PostData\n  ) {\n    const { name, id: id2, type } = params;\n    return new JsonResult({\n      id,\n      name,\n      type,\n      id2,\n      name\n    });\n  }\n}\n\nexport = TestController;到此一个业务路由层级的构建并没有完成，和原生 astroboy 开发类似，相应的需要一个 router 文件来创建 astroboy 的 router 数组定义。\n\napp/routers/test.ts\n\nimport TEST from \"../controllers/test\";\nimport { buildRouter } from \"astroboy.ts\";\n\n// “test”代表controllers内的文件级别\n// “/v1”代表应用的路由前缀，这里只作为示例\nexport = buildRouter(TEST, \"test\", \"/v1\");\n注：1.0.1-rc.27 版本以后已经支持自动生成 router，不需再要上述步骤，有两种模式任选其一，操作如下：\n\n1. routers 预处理模式\n\n使用 astroboy.ts 提供的命令行工具\n\n# 在开发启动或者生产打包前确保执行即可\n./node_modules/.bin/atc router --always --filetype ts2. 动态初始化(不推荐)\n\n配置 app/app.ts 文件 (但是在删除控制器后，需要手动删除 routers 中多余的文件)\n\nServer.Create(..., {\n  ...\n})\n  .option(ROUTER_OPTIONS, { appRoot: \"/v1\", enabled: true })\n  ...到此一个完整的业务级别的 router 构造完成了。\n2.编写可注入服务\nastroboy.ts 按照 IoC 模式的指导思路进行设计，所有的服务都应该按照 DI 的方式（无论是手动还是自动）获取、组装和构造逻辑层级。\n\napp/services/test.ts\n\nimport { Injectable } from \"astroboy.ts\";\n\n@Injectable()\nclass TestService {\n  private value = 98765;\n\n  public add(v: number) {\n    this.value += v;\n  }\n\n  public showValue() {\n    return this.value;\n  }\n}\n\nexport = TestService;astroboy.ts 服务的默认行为是范围单例（scoped），简单的描述来说，一个服务在同一个请求流程中总是保持单例状态，并在请求结束后释放。scoped 服务可以在请求流程中的任意位置获取，并承担数据传输载体的职责。\n你当然可以手动改变这一默认行为：\n// 请确保你了解type的含义，以免服务出现不符合预期的行为\n@Injectable({ type: InjectScope.Singleton })\nclass Test02Service {\n  ...\n}其他行为：\n\nnew（每次获取总是创建一个全新的对象）\nsingleton（在整个应用中保持唯一并积累副作用）\n\n服务还具有其他高级功能（包括依赖注入分离和实现多重继承），这里不一一展开了。\n3.对接 astroboy 的配置\n创建接口来描述 astroboy 的配置中的各个业务部分：\n\nconfig/options/demo.ts\n\nimport { createConfig } from \"astroboy.ts\";\n\ninterface DemoOptions {\n  /** ccccc */\n  key01: number;\n  key02: string;\n}\n\nexport const DEMO_OPTIONS = createConfig(\"demo\");\nconfig/config.default.js\n\n/**\n * 默认配置文件\n */\nconst path = require(\"path\");\n\nmodule.exports = {\n  \"@astroboy.ts\": {\n    showTrace: true,\n    diType: \"proxy\"\n  },\n\n  demo: {\n    key01: 12345,\n    key02: \"woshinidie\"\n  },\n\n  strOpt: \"test_string_config\"\n};这样既可以更好的描述原本混乱的 config 文件，同时可以在对 config 访问的时候提供定义支持。\n// 注入Configs服务，然后获取配置\n// opts变量将会被正确的绑定上类型信息\nconst opts = this.configs.get(DEMO_OPTIONS);4.在中间件中使用依赖注入\n过程比较轻量，废话不多，直接上 demo：\n\napp/middlewares/demo.ts\n\nimport { injectScope, ENV, Context } from \"astroboy.ts\";\nimport DataService from \"../services/Data\";\n\nexport = () =>\n  injectScope(async ({ injector, configs, ctx, next }) => {\n    // console.log(configs.get(ENV).showTrace);\n    const data = injector.get(DataService);\n    data.setStamp(new Date().getTime());\n    await next();\n    // console.log(\"fuck\");\n  });\n文档完善中...\n\n\nMIT License\nCopyright (c) 2018 NODE.Mogician bigmogician@outlook.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 NODE.Mogician\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n    \n\n    \n        \n            \n                \n                    \n                    5 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    8 类列表\n                \n            \n        \n        \n            \n                \n                    \n                    50 接口\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  类型别名\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            Async   (src/.../IResult.ts)\n                        \n                        \n                            ChangeReturn   (src/.../utils.ts)\n                        \n                        \n                            DIPair   (src/.../server.ts)\n                        \n                        \n                            ErrorType   (src/.../NormalizedMessage.ts)\n                        \n                        \n                            IBodyResult   (src/.../IResult.ts)\n                        \n                        \n                            ICommonResultType   (src/.../IResult.ts)\n                        \n                        \n                            InnerBundle   (src/.../server.ts)\n                        \n                        \n                            ParamsFactory   (src/.../route.ts)\n                        \n                        \n                            ParamsResolver   (src/.../route.ts)\n                        \n                        \n                            PartReset   (src/.../utils.ts)\n                        \n                        \n                            ProvideInvoker   (src/.../core.ts)\n                        \n                        \n                            ServerBundle   (src/.../server.ts)\n                        \n                        \n                            Severity   (src/.../NormalizedMessage.ts)\n                        \n                        \n                            TokenGenerator   (src/.../Configs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/typings/IResult.ts\n    \n    \n        \n            \n                \n                    \n                    Async\n                \n            \n            \n                \n                    表示一个异步过程 \n\n                \n            \n            \n                \n                        T | Promise\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IBodyResult\n                \n            \n            \n                \n                        Async\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ICommonResultType\n                \n            \n            \n                \n                        string | void | IResult\n\n                \n            \n        \n    \n    src/utils.ts\n    \n    \n        \n            \n                \n                    \n                    ChangeReturn\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PartReset\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/server.ts\n    \n    \n        \n            \n                \n                    \n                    DIPair\n                \n            \n            \n                \n                        [any, any]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InnerBundle\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServerBundle\n                \n            \n            \n                \n                        PartReset\n\n                \n            \n        \n    \n    src/cmd/utils/NormalizedMessage.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorType\n                \n            \n            \n                \n                        \"diagnostic\" | \"lint\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Severity\n                \n            \n            \n                \n                        \"error\" | \"warning\"\n\n                \n            \n        \n    \n    src/decorators/route.ts\n    \n    \n        \n            \n                \n                    \n                    ParamsFactory\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamsResolver\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    src/middlewares/core.ts\n    \n    \n        \n            \n                \n                    \n                    ProvideInvoker\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    src/services/Configs.ts\n    \n    \n        \n            \n                \n                    \n                    TokenGenerator\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            _innerBundle   (src/.../server.ts)\n                        \n                        \n                            $$injector   (src/.../controller.ts)\n                        \n                        \n                            BC   (src/.../BaseClass.ts)\n                        \n                        \n                            Bundles   (src/.../server.ts)\n                        \n                        \n                            Colors   (src/.../utils.ts)\n                        \n                        \n                            CONFIG_VIEW   (src/.../view.config.ts)\n                        \n                        \n                            createConfig   (src/.../Configs.ts)\n                        \n                        \n                            createOptions   (src/.../Configs.ts)\n                        \n                        \n                            defaultEnv   (src/.../env.config.ts)\n                        \n                        \n                            defaultGlobalError   (src/.../errors.options.ts)\n                        \n                        \n                            defaultJsonResultOptions   (src/.../json.options.ts)\n                        \n                        \n                            defaultNunjunksOptions   (src/.../options.ts)\n                        \n                        \n                            defaultRenderResultOptions   (src/.../render.options.ts)\n                        \n                        \n                            defaultRouterOptions   (src/.../router.options.ts)\n                        \n                        \n                            defaultSimpleLoggerOptions   (src/.../options.ts)\n                        \n                        \n                            defaultView   (src/.../view.config.ts)\n                        \n                        \n                            ENV   (src/.../env.config.ts)\n                        \n                        \n                               (src/.../init.ts)\n                        \n                        \n                               (src/.../check.ts)\n                        \n                        \n                            GLOBAL_ERROR   (src/.../errors.options.ts)\n                        \n                        \n                            GlobalDI   (src/.../utils.ts)\n                        \n                        \n                            GlobalImplements   (src/.../utils.ts)\n                        \n                        \n                            INTERNAL_INJECTOR   (src/.../controller.ts)\n                        \n                        \n                            JSON_RESULT_OPTIONS   (src/.../json.options.ts)\n                        \n                        \n                            JsonResolvers   (src/.../json.ts)\n                        \n                        \n                            MAGIC_CONTENT   (src/.../route.ts)\n                        \n                        \n                            NUNJUNKS_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            RENDER_RESULT_OPTIONS   (src/.../render.options.ts)\n                        \n                        \n                            ROUTER_OPTIONS   (src/.../router.options.ts)\n                        \n                        \n                            serverInit   (src/.../index.ts)\n                        \n                        \n                            SIMPLE_LOGGER_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            STATIC_RESOLVER   (src/.../typed-serialize.options.ts)\n                        \n                        \n                            transpile   (src/.../register.ts)\n                        \n                        \n                            tsconfig   (src/.../register.ts)\n                        \n                        \n                            tsnode   (src/.../register.ts)\n                        \n                        \n                            TypedSerializer   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _innerBundle\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     InnerBundle\n\n                        \n                    \n                    \n                        \n                            缺省值 : Bundles as any\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Bundles\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ChangeReturn\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  option(...args: any[]): ServerBundle {\n    Bundles[\"@options\"].push(args);\n    return Bundles as any;\n  },\n  scoped(...args: any[]): ServerBundle {\n    Bundles[\"@scopeds\"].push(args);\n    return Bundles as any;\n  },\n  singleton(...args: any[]): ServerBundle {\n    Bundles[\"@singletons\"].push(args);\n    return Bundles as any;\n  },\n  unique(...args: any[]): ServerBundle {\n    Bundles[\"@uniques\"].push(args);\n    return Bundles as any;\n  },\n  \"@options\": [],\n  \"@singletons\": [],\n  \"@scopeds\": [],\n  \"@uniques\": []\n} as any\n                        \n                    \n\n                \n                    \n                        DI Bundles\n\n导入并移动使用DI容器的注册api\n和普通注入项解析方式相同\n\n\n                    \n                \n\n            \n        \n\n    src/decorators/controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $$injector\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"$$injector\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INTERNAL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"$INTERNAL_INJECTOR\"\n                        \n                    \n\n\n            \n        \n\n    src/services/BaseClass.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BC\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : C\n                        \n                    \n\n\n            \n        \n\n    src/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Colors\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  reset: \"\\x1b[0m\",\n  red: \"\\x1b[31m\\x1b[1m\",\n  green: \"\\x1b[32m\",\n  blue: \"\\x1b[34m\",\n  yellow: \"\\x1b[33m\",\n  cyan: \"\\x1b[36m\",\n  magenta: \"\\x1b[35m\",\n  white: \"\\x1b[37m\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalDI\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new DIContainer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalImplements\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map()\n                        \n                    \n\n\n            \n        \n\n    src/configs/view.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_VIEW\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createConfig(\"view\")\n                        \n                    \n\n                \n                    \n                        astroboy view config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultView\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Partial\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n\n\n            \n        \n\n    src/services/Configs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     TokenGenerator\n\n                        \n                    \n                    \n                        \n                            缺省值 : (key: string) => ({\n  key: Symbol(`config::${key}`)\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     TokenGenerator\n\n                        \n                    \n                    \n                        \n                            缺省值 : (key: string) => ({\n  key: Symbol(key)\n})\n                        \n                    \n\n\n            \n        \n\n    src/configs/env.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultEnv\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     IENV\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  diType: \"native\",\n  env: \"development\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ENV\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createConfig(\"@astroboy.ts\")\n                        \n                    \n\n                \n                    \n                        astroboy.ts环境变量 \n\n                    \n                \n\n            \n        \n\n    src/options/errors.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGlobalError\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     IGlobalErrorHandler\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  handler: async (error, injector, configs) => {\n    const render = injector.get(Render);\n    const { ctx } = injector.get(Context);\n    const { env } = configs.get(ENV);\n    const { onError, onDevError } = configs.get(RENDER_RESULT_OPTIONS);\n    const { content: defaultRender, ...args } =\n      env === \"production\" ? onError : onDevError;\n    render.setView(\"__viewError\", error);\n    try {\n      const path = !args.path ? undefined : args.path;\n      const tpl = !args.tplStr ? undefined : args.tplStr;\n      if (!path && !tpl) {\n        throw new Error(\"No template provided for global error handler.\");\n      }\n      const result = new RenderResult({ path, tplStr: tpl });\n      ctx.body = await result.toResult({ injector, configs });\n    } catch (_) {\n      const logger = injector.get(SimpleLogger);\n      logger.trace(\"GLOBAL_ERROR render failed\", _);\n      ctx.body = defaultRender(error, \"Internal Server Error\");\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GLOBAL_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\"GLOBAL_ERROR\")\n                        \n                    \n\n\n            \n        \n\n    src/options/json.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultJsonResultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     JsonResultOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  format: false,\n  whiteSpace: 2,\n  keyResolver: undefined,\n  jsonTemplate: undefined,\n  jsonTplKey: undefined\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON_RESULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"JSON_RESULT_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/plugins/nunjunks/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNunjunksOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     INunjunksRenderOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  root: path.resolve(process.cwd(), \"app/views\"),\n  cache: true,\n  autoescape: true,\n  throwOnUndefined: false,\n  trimBlocks: false,\n  lstripBlocks: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUNJUNKS_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"NUNJUNKS_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/options/render.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRenderResultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     RenderResultOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RENDER_RESULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n)\n                        \n                    \n\n                \n                    \n                        RenderResult配置token \n\n                    \n                \n\n            \n        \n\n    src/options/router.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRouterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     InnerRouterOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\"ROUTER_OPTIONS\")\n                        \n                    \n\n\n            \n        \n\n    src/plugins/simple-logger/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSimpleLoggerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ISimpleLoggerOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  level: SimpleLogLevel.WARN\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIMPLE_LOGGER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"SIMPLE_LOGGER_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/cmd/init.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/cmd/dev/check.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/results/json.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JsonResolvers\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  camelcase: camelCase,\n  snakecase: snakeCase\n}\n                        \n                    \n\n\n            \n        \n\n    src/decorators/route.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAGIC_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map>()\n                        \n                    \n\n\n            \n        \n\n    src/cmd/dev/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"dev\",\n  description: \"本地开发，开启后端服务\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"使用自定义的atc.config.js配置文件\"],\n    [\"-D, --debug [debugName]\", \"开启 debug 模式\"],\n    [\"-E, --env [NODE_ENV]\", \"设置 NODE_ENV 环境变量，默认 development\"],\n    [\"-P, --port [NODE_PORT]\", \"设置 NODE_PORT 环境变量，默认 8201\"],\n    [\n      \"-M, --mock [proxyUrl]\",\n      \"开启 mock 模式，默认 proxy 地址为 http://127.0.0.1:8001\"\n    ],\n    [\"-T, --tsconfig [config]\", \"使用自定义的ts编译配置文件\"],\n    [\"-I, --inspect [inspect]\", \"启用inspector，开启编辑器断点调试\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc dev\");\n    console.log(\"    $ atc dev --debug\");\n    console.log(\"    $ atc dev --debug koa:application\");\n    console.log(\"    $ atc dev --debug --mock\");\n    console.log(\"    $ atc dev --mock http://127.0.0.1:8001\");\n    console.log(\"    $ atc dev --mock\");\n    console.log(\"    $ atc dev --env pre\");\n    console.log(\"    $ atc dev --port 8201\");\n    console.log(\"    $ atc dev --env development --port 8201\");\n    console.log(\"    $ atc dev --tsconfig app/tsconfig.json\");\n    console.log(\"    $ atc dev --inspect\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/cmd/router/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"router\",\n  description: \"astroboy.ts routers cmd\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"use atc.config.js\"],\n    [\"-E, --enabled [isEnabled]\", \"open routers-auto-build\"],\n    [\"-A, --always [isAlways]\", \"set routers-always-rebuild\"],\n    [\"-F, --filetype [fileType]\", \"set routers fileType\"],\n    [\"-R, --approot [appRoot]\", \"set routers-root\"],\n    [\"-T, --tsconfig [tsconfig]\", \"set tsconfig.json\"],\n    [\"-D, --details [showRouters]\", \"show building results or not\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc router\");\n    console.log(\"    $ atc router --always\");\n    console.log(\"    $ atc router --fileType ts\");\n    console.log(\"    $ atc router --approot /v1/prj\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/middlewares/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            serverInit\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : async (ctx: IContext, next: () => Promise) => {\n  const { injector, scope, logger } = initRequestScope(ctx);\n  try {\n    await next();\n  } catch (error) {\n    await tryCatchGlobalError(injector, error);\n  } finally {\n    disposeRequestScope(scope, logger, injector);\n  }\n}\n                        \n                    \n\n                \n                    \n                        astroboy.ts初始化中间件\n\n请确保此中间件的优先级足够高\n建议优先级\n\n\n                    \n                \n\n            \n        \n\n    src/options/typed-serialize.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STATIC_RESOLVER\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"STATIC_RESOLVER\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/cmd/register.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            transpile\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.__TRANSPILE === \"true\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsconfig\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.__TSCONFIG\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsnode\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : require(\"ts-node\")\n                        \n                    \n\n\n            \n        \n\n    src/plugins/typed-serializer/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TypedSerializer\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new TypedSerializerCreator()\n                        \n                    \n\n                \n                    \n                        内建静态类型序列化工具 (based on cerialize) \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
