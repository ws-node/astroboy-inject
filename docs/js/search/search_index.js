var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/AstroboyContext.html",[0,1.38,1,1.932]],["body/injectables/AstroboyContext.html",[0,1.725,1,3.03,2,0.015,3,0.144,4,2.823,5,2.664,6,3.248,7,3.379,8,4.451,9,4.409,10,1.935,11,3.641,12,4.211,13,3.641,14,3.641,15,3.641,16,3.641,17,3.136,18,3.248,19,3.61,20,4.591,21,3.61,22,2.559,23,4.211,24,3.61,25,4.211,26,3.61,27,4.211,28,3.61,29,4.211,30,3.61,31,4.591,32,3.61,33,3.61,34,3.61,35,4.409,36,1.724,37,3.61,38,3.61,39,4.409,40,3.61,41,4.409,42,3.526,43,0.281,44,2.973,45,2.248,46,1.717,47,2.115,48,0.229,49,1.18,50,0.263,51,1.053,52,2.793,53,0.644,54,0.842,55,0.842,56,0.842,57,0.942,58,2.551,59,3.25,60,1.327,61,3.136,62,1.779,63,0.821,64,3.136,65,3.136,66,3.136,67,3.136,68,3.136,69,2.403,70,2.275,71,3.654,72,6.045,73,3.136,74,3.136,75,3.136,76,3.136,77,3.136,78,3.136,79,0.006,80,0.006]],["title/classes/BaseClass.html",[57,0.753,81,3.175]],["body/classes/BaseClass.html",[1,2.757,2,0.015,3,0.175,5,3.042,6,3.137,7,4.78,8,4.041,10,1.693,11,4.156,12,4.156,13,4.156,14,4.156,15,4.156,16,4.156,20,4.531,22,2.713,23,4.156,25,4.156,27,4.156,29,4.156,31,4.531,42,3.207,43,0.256,44,4.046,48,0.208,53,0.782,54,1.022,55,1.022,56,1.022,57,1.075,59,2.426,62,2.342,79,0.008,80,0.008,81,5.77,82,3.427,83,2.589,84,5.033,85,5.795,86,4.383,87,4.383,88,4.383,89,4.383,90,4.383,91,4.383,92,4.383,93,4.383,94,3.807,95,0.533,96,4.531]],["title/classes/CancellationToken.html",[57,0.753,97,2.912]],["body/classes/CancellationToken.html",[2,0.015,3,0.143,43,0.295,48,0.129,50,0.261,57,0.666,59,2.797,62,2.414,63,0.789,70,1.912,79,0.006,80,0.006,95,0.615,97,4.555,98,2.804,99,2.76,100,6.521,101,6.521,102,5.081,103,5.516,104,2.783,105,4.574,106,5.516,107,5.516,108,5.516,109,5.516,110,3.72,111,3.586,112,0.751,113,1.764,114,5.053,115,4.324,116,3.586,117,3.586,118,1.717,119,3.586,120,1.644,121,3.586,122,3.426,123,4.555,124,3.586,125,3.586,126,3.586,127,3.586,128,3.586,129,3.586,130,3.951,131,4.388,132,2.015,133,3.951,134,3.115,135,0.747,136,3.115,137,3.115,138,2.101,139,2.804,140,2.101,141,3.951,142,3.115,143,3.115,144,1.531,145,3.146,146,2.541,147,1.629,148,6.329,149,5.081,150,5.081,151,1.558,152,1.59,153,3.115,154,3.115,155,3.115,156,4.388,157,3.115,158,4.388,159,3.115,160,3.115,161,2.804,162,3.115,163,3.115,164,3.115,165,4.388,166,3.115,167,3.115,168,3.115,169,3.115]],["title/interfaces/CancellationTokenData.html",[50,0.296,123,2.912]],["body/interfaces/CancellationTokenData.html",[2,0.015,3,0.171,43,0.314,48,0.153,50,0.311,57,0.793,59,3.154,62,2.266,63,0.827,70,2.095,79,0.008,80,0.008,95,0.693,97,4.087,98,3.341,99,2.514,100,6.598,101,6.598,102,3.711,103,3.711,104,2.033,105,3.341,106,3.711,107,3.711,108,3.711,109,3.711,110,2.503,112,0.75,113,1.724,115,4.257,118,1.452,122,2.503,123,4.597,130,4.455,131,4.949,132,2.273,133,4.455,134,3.711,135,0.89,136,3.711,137,3.711,138,2.503,139,3.341,140,2.503,141,4.455,142,3.711,143,3.711,144,1.726,145,3.547,146,2.785,147,1.941,148,6.598,149,5.567,150,5.567,151,1.856,152,1.793,153,3.711,154,3.711,155,3.711,156,4.949,157,3.711,158,4.949,159,3.711,160,3.711,161,3.341,162,3.711,163,3.711,164,3.711,165,4.949,166,3.711,167,3.711,168,3.711,169,3.711]],["title/interfaces/CmdConfig.html",[50,0.296,170,1.764]],["body/interfaces/CmdConfig.html",[2,0.015,3,0.142,10,1.312,22,1.849,43,0.157,48,0.256,50,0.487,53,0.636,63,0.556,70,1.165,71,3.883,79,0.006,80,0.006,95,0.771,112,0.848,113,1.94,118,1.211,120,1.413,135,1.048,144,1.918,170,3.16,171,2.218,172,3.459,173,2.289,174,3.836,175,3.836,176,2.619,177,3.836,178,3.095,179,4.06,180,4.613,181,4.605,182,2.556,183,2.1,184,2.526,185,2.371,186,1.778,187,1.421,188,0.965,189,2.087,190,1.778,191,1.972,192,2.087,193,2.087,194,1.165,195,1.618,196,1.618,197,1.618,198,1.618,199,1.778,200,1.778,201,2.087,202,1.079,203,2.371,204,2.371,205,2.371,206,1.695,207,1.695,208,5.047,209,3.347,210,3.347,211,3.347,212,2.371,213,2.371,214,3.88,215,3.88,216,2.371,217,2.371,218,2.371,219,2.371,220,2.371]],["title/interfaces/CommandPlugin.html",[50,0.296,186,2.027]],["body/interfaces/CommandPlugin.html",[2,0.015,3,0.159,10,1.416,22,1.997,43,0.176,48,0.264,50,0.506,53,1.185,63,0.601,70,1.301,71,3.766,79,0.007,80,0.007,95,0.808,112,0.843,113,1.835,118,1.352,120,1.526,135,1.494,144,2.012,170,3.19,171,2.478,172,3.086,173,2.187,174,3.422,175,3.422,176,2.442,177,3.422,178,2.885,179,3.621,180,4.115,181,4.467,182,2.366,183,1.645,184,2.166,185,2.649,186,2.711,187,2.649,188,1.798,189,3.621,190,3.315,191,3.676,192,2.331,193,2.331,194,1.301,195,1.808,196,1.808,197,1.808,198,1.808,199,1.986,200,1.986,201,2.331,202,1.206,203,2.649,204,2.649,205,2.649,206,1.893,207,1.893,208,5.151,209,3.614,210,3.614,211,3.614,212,2.649,213,2.649,214,4.115,215,4.115,216,2.649,217,2.649,218,2.649,219,2.649,220,2.649]],["title/interfaces/Config.html",[10,1.059,50,0.296]],["body/interfaces/Config.html",[2,0.015,3,0.209,10,2.065,43,0.231,48,0.281,49,1.708,50,0.514,63,0.717,79,0.009,80,0.009,135,1.351,170,3.204,173,2.512,176,2.711,182,2,184,3.082,202,2.136,206,2.485,207,2.485,221,3.747,222,3.798,223,3.798,224,4.39,225,2.934,226,4.085,227,3.404,228,3.253,229,3.253,230,2.892,231,3.477,232,3.06]],["title/interfaces/Config-1.html",[10,0.889,50,0.248,233,1.548]],["body/interfaces/Config-1.html",[2,0.015,3,0.214,10,2.055,43,0.236,48,0.279,49,1.752,50,0.52,63,0.729,79,0.009,80,0.009,135,1.372,170,3.098,173,2.503,176,2.735,182,2.051,184,3.047,202,2.161,206,2.549,207,2.549,222,3.138,223,3.138,224,4.101,225,2.74,227,2.812,228,3.336,229,3.336,234,3.843,235,2.812]],["title/interfaces/ConfigEntry.html",[50,0.296,236,2.378]],["body/interfaces/ConfigEntry.html",[2,0.015,3,0.173,36,2.063,43,0.191,48,0.282,49,1.415,50,0.47,51,1.263,53,1.025,54,1.34,55,1.34,56,1.34,57,1.197,58,1.88,60,2.371,62,1.954,63,0.636,79,0.008,80,0.008,95,0.785,99,1.591,112,0.679,152,1.362,194,2.452,202,1.311,236,3.778,237,2.535,238,4.394,239,3.938,240,4.268,241,4.121,242,2.694,243,4.016,244,1.878,245,2.395,246,3.104,247,1.087,248,3.778,249,1.726,250,2.88,251,2.16,252,2.88,253,2.535,254,3.18,255,3.104,256,4.574,257,3.104,258,3.824,259,3.104,260,3.104,261,3.104,262,3.104,263,3.104,264,1.931,265,4.278,266,3.104,267,1.591,268,1.657,269,1.88]],["title/interfaces/ConfigToken.html",[50,0.296,240,2.247]],["body/interfaces/ConfigToken.html",[2,0.015,3,0.175,36,1.997,43,0.193,48,0.282,49,1.431,50,0.473,51,1.277,53,1.033,54,1.35,55,1.35,56,1.35,57,1.204,58,1.901,60,2.385,62,1.965,63,0.64,79,0.008,80,0.008,95,0.789,99,1.609,112,0.683,152,1.377,194,2.551,202,1.326,236,3.391,237,2.563,238,4.043,239,3.623,240,4.227,241,4.152,242,2.725,243,4.038,244,1.892,245,2.422,246,4.652,247,1.1,248,3.799,249,1.746,250,2.913,251,2.184,252,2.913,253,2.563,254,3.204,255,3.139,256,4.594,257,3.139,258,3.853,259,3.139,260,3.139,261,3.139,262,3.139,263,3.139,264,1.94,265,4.297,266,3.139,267,1.609,268,1.675,269,1.901]],["title/interfaces/ConfigurationFile.html",[50,0.296,270,3.175]],["body/interfaces/ConfigurationFile.html",[2,0.015,3,0.17,10,1.109,43,0.282,48,0.229,50,0.31,63,0.755,79,0.008,80,0.008,95,0.89,112,0.673,113,1.03,115,3.536,132,2.266,135,1.332,138,2.491,139,3.326,140,2.491,161,4.441,178,2.468,179,2.491,202,1.288,225,1.77,247,1.427,270,5.336,271,3.694,272,6.825,273,3.327,274,4.253,275,5.68,276,3.694,277,6.395,278,5.68,279,4.253,280,4.253,281,4.253,282,6.825,283,5.68,284,4.253,285,4.253,286,4.253,287,4.253,288,4.253,289,4.253,290,4.253,291,3.05,292,4.253,293,4.253,294,3.694,295,4.253,296,4.253,297,3.694,298,4.253,299,4.253,300,4.441,301,4.253,302,5.68,303,4.253,304,5.68,305,4.253,306,5.68,307,4.253,308,4.253,309,5.68,310,4.253,311,5.68,312,3.327,313,4.253,314,4.253,315,4.587,316,4.253,317,4.253,318,4.253,319,4.253,320,4.253,321,4.253,322,4.253,323,4.253,324,4.253,325,4.074,326,4.253,327,4.253,328,5.68,329,4.253,330,3.05,331,4.253,332,4.253,333,4.253,334,4.253,335,4.253,336,4.253,337,2.354,338,4.253,339,4.253]],["title/interfaces/Contract.html",[50,0.296,51,1.185]],["body/interfaces/Contract.html",[2,0.015,3,0.177,36,2.004,43,0.196,48,0.283,49,1.449,50,0.476,51,1.703,53,1.042,54,1.362,55,1.362,56,1.362,57,1.211,58,1.926,60,2.4,62,1.978,63,0.646,79,0.008,80,0.008,95,0.794,99,1.63,112,0.687,152,1.395,194,2.467,202,1.343,236,3.42,237,2.597,238,4.064,239,3.641,240,4.177,241,4.187,242,2.76,243,4.319,244,1.909,245,2.454,246,3.18,247,1.114,248,3.824,249,1.768,250,2.951,251,2.213,252,2.951,253,2.597,254,3.232,255,3.18,256,4.617,257,3.18,258,3.886,259,3.18,260,3.18,261,3.18,262,3.18,263,3.18,264,1.95,265,4.319,266,3.18,267,1.63,268,1.697,269,1.926]],["title/interfaces/Contract-1.html",[50,0.248,51,0.994,233,1.548]],["body/interfaces/Contract-1.html",[0,1.773,1,2.852,2,0.015,3,0.15,4,2.936,5,1.971,6,3.284,7,2.499,8,4.5,9,3.261,10,1.923,11,3.742,12,3.742,13,3.742,14,3.742,15,3.742,16,3.742,18,2.943,20,4.688,22,2.591,23,4.3,25,4.3,27,4.3,29,4.3,31,4.688,35,3.261,36,1.843,39,3.261,41,3.261,42,3.769,43,0.286,44,3.056,45,2.337,46,1.786,47,2.199,48,0.233,49,1.227,50,0.274,51,1.522,52,2.852,53,0.67,54,0.876,55,0.876,56,0.876,57,0.968,58,2.605,59,3.319,60,1.38,61,3.261,62,1.816,63,0.828,64,3.261,65,3.261,66,3.261,67,3.261,68,3.261,69,2.499,70,2.304,71,3.699,72,6.121,73,3.261,74,3.261,75,3.261,76,3.261,77,3.261,78,3.261,79,0.007,80,0.007,340,3.755,341,3.755,342,3.755,343,3.755,344,3.755,345,3.755]],["title/interfaces/Contract-2.html",[50,0.248,51,0.994,346,1.997]],["body/interfaces/Contract-2.html",[2,0.015,3,0.212,6,3.522,7,3.525,18,3.366,36,2.099,43,0.289,44,4.156,46,2.519,47,3.102,48,0.266,49,1.731,50,0.386,51,1.908,52,2.519,53,1.167,54,1.235,55,1.235,56,1.235,57,1.214,58,2.301,59,2.931,60,1.947,62,1.604,63,0.586,79,0.009,80,0.009,83,2.112,247,1.331,269,2.301,347,4.599,348,5.296,349,5.296,350,4.141,351,5.296]],["title/interfaces/Contract-3.html",[50,0.248,51,0.994,352,2.665]],["body/interfaces/Contract-3.html",[2,0.015,3,0.142,22,1.308,36,2.175,43,0.157,48,0.275,49,1.163,50,0.259,51,1.466,52,2.39,53,1.039,54,1.358,55,1.358,56,1.358,57,0.932,58,2.183,60,1.308,63,0.818,79,0.006,80,0.006,95,0.611,112,0.613,120,1,135,1.515,146,1.546,151,2.531,152,1.581,189,2.084,194,2.069,238,2.943,244,1.163,258,3.877,265,4.313,267,2.141,268,1.362,269,1.546,353,3.09,354,4.989,355,6.928,356,3.558,357,3.707,358,3.558,359,2.215,360,2.084,361,3.09,362,3.344,363,2.215,364,3.558,365,1.616,366,1.868,367,3.558,368,4.72,369,7.395,370,6.017,371,5.216,372,4.969,373,4.539,374,5.025,375,3.558,376,5.025,377,5.025,378,2.552,379,3.558,380,5.025,381,5.025,382,5.025,383,6.329,384,3.636,385,5.025,386,5.025,387,3.558,388,3.558,389,3.558,390,3.558,391,3.558]],["title/interfaces/Contract-4.html",[50,0.248,51,0.994,392,2.269]],["body/interfaces/Contract-4.html",[0,1.669,1,2.722,2,0.015,3,0.138,18,1.565,22,1.267,43,0.302,48,0.224,49,1.126,50,0.358,51,1.433,52,1.639,53,0.876,54,1.145,55,1.145,56,1.145,57,0.911,60,1.267,62,2.077,63,0.381,69,2.293,79,0.006,80,0.006,95,0.696,99,1.267,112,0.808,113,0.834,120,2.138,144,1.89,146,1.497,183,1.488,188,1.953,194,1.871,247,1.568,269,1.497,273,3.654,360,2.877,365,2.834,371,4.105,372,4.105,373,3.523,393,2.471,394,5.156,395,5.89,396,4.878,397,3.446,398,4.737,399,2.451,400,3.446,401,5.156,402,3.446,403,3.446,404,2.694,405,2.694,406,2.719,407,2.471,408,2.293,409,2.293,410,1.497,411,2.145,412,2.471,413,2.293,414,5.639,415,2.744,416,2.694,417,2.694,418,4.878,419,2.471,420,2.877,421,2.694,422,4.475,423,4.475,424,5.516,425,2.694,426,4.878,427,3.84]],["title/interfaces/Contract-5.html",[50,0.248,51,0.994,428,2.665]],["body/interfaces/Contract-5.html",[0,2.137,2,0.015,3,0.199,43,0.278,45,3.098,48,0.248,49,1.627,50,0.363,51,1.835,52,2.367,57,0.923,60,1.829,62,1.906,63,0.827,79,0.009,80,0.009,99,2.664,118,2.137,144,1.508,146,2.162,151,2.162,152,1.979,244,1.627,354,5.16,360,4.04,429,3.891,430,5.969,431,6.492,432,4.976,433,3.302,434,4.322,435,4.322,436,4.322,437,5.666,438,4.322,439,5.463,440,4.322,441,5.463,442,4.322,443,5.99,444,4.322,445,5.99,446,4.322,447,4.322]],["title/interfaces/Env.html",[50,0.296,173,1.278]],["body/interfaces/Env.html",[2,0.015,3,0.218,10,2.061,43,0.24,48,0.284,49,1.78,50,0.523,63,0.736,79,0.01,80,0.01,135,1.385,170,3.12,173,2.414,176,2.001,182,2.084,184,2.984,202,2.176,206,2.59,207,2.59,221,3.904,222,3.896,223,3.896,224,4.471,225,3.112,226,4.257,227,3.491,228,3.389,229,3.389,230,3.013,231,3.623,232,3.189]],["title/interfaces/Env-1.html",[50,0.248,173,1.073,233,1.548]],["body/interfaces/Env-1.html",[2,0.015,3,0.223,10,2.049,43,0.247,48,0.282,49,1.827,50,0.529,63,0.748,79,0.01,80,0.01,135,1.408,170,2.936,173,2.375,176,2.055,182,2.139,184,2.898,202,2.201,206,2.659,207,2.659,222,3.274,223,3.274,224,4.208,225,3.023,227,2.934,228,3.48,229,3.48,234,4.009,235,2.934]],["title/interfaces/FactoryContext.html",[50,0.296,448,3.175]],["body/interfaces/FactoryContext.html",[0,2.067,1,0.575,2,0.015,3,0.048,5,0.634,6,2.078,8,1.759,18,2.206,22,1.682,36,0.573,43,0.273,44,2.26,48,0.122,50,0.424,53,1.14,54,1.591,55,1.591,56,1.591,57,0.901,58,2.735,62,2.066,63,0.696,79,0.002,80,0.002,83,1.694,95,0.647,99,2.547,104,2.02,115,2.644,120,1.193,135,0.441,145,1.318,147,3.123,152,1.673,173,0.666,183,0.856,188,0.765,189,0.707,194,0.395,202,0.366,230,1.171,231,0.804,238,4.207,239,1.111,240,2.135,244,0.395,245,2.824,247,1.221,253,1.24,256,0.804,264,1.882,265,2.644,267,2.547,268,2.172,269,2.937,312,2.26,337,2.135,354,3.538,357,2.26,359,1.318,360,3.491,361,1.049,362,3.045,363,1.318,378,0.866,399,1.311,406,3.429,410,0.525,415,0.881,419,0.866,420,0.707,433,2.401,448,3.577,449,0.866,450,2.02,451,0.804,452,0.707,453,1.049,454,1.208,455,1.409,456,1.049,457,1.838,458,1.655,459,1.838,460,5.316,461,3.393,462,1.049,463,1.518,464,0.804,465,1.518,466,1.518,467,0.804,468,0.707,469,0.804,470,1.318,471,0.707,472,1.409,473,0.866,474,1.518,475,0.866,476,0.462,477,1.518,478,1.049,479,1.049,480,1.24,481,0.752,482,1.518,483,0.866,484,0.752,485,0.752,486,1.518,487,0.866,488,0.804,489,0.804,490,1.518,491,1.049,492,2.947,493,1.049,494,3.272,495,1.208,496,1.208,497,1.208,498,1.208,499,2.116,500,2.116,501,1.208,502,1.208,503,2.402,504,3.393,505,1.208,506,2.116,507,1.208,508,2.825,509,1.208,510,1.208,511,6.555,512,2.116,513,1.838,514,2.825,515,2.116,516,1.929,517,1.208,518,1.208,519,2.825,520,1.208,521,0.944,522,1.208,523,1.208,524,6.083,525,6.269,526,4.857,527,4.219,528,4.246,529,4.554,530,4.857,531,3.659,532,3.858,533,2.825,534,6.761,535,1.208,536,4.246,537,4.246,538,3.32,539,4.575,540,4.246,541,3.858,542,6.194,543,4.246,544,2.116,545,2.825,546,2.116,547,2.116,548,2.116,549,2.116,550,1.208,551,1.208,552,1.208,553,1.208,554,1.208,555,1.208,556,1.208,557,1.208,558,1.208,559,1.838,560,1.208,561,5.283,562,4.575,563,3.393,564,3.393,565,1.208,566,1.838,567,1.208,568,1.208,569,1.838,570,1.208,571,3.393,572,0.944,573,1.208,574,1.208,575,1.208,576,2.116,577,1.208,578,1.208,579,2.116,580,1.208,581,1.208,582,1.208,583,1.208,584,1.208,585,1.208,586,1.208,587,1.208,588,1.208,589,1.208,590,1.208,591,1.208,592,1.208,593,2.116,594,1.208,595,1.208,596,1.208,597,1.208,598,1.208,599,1.208,600,1.208,601,1.208,602,1.208,603,0.866,604,0.944,605,1.208,606,1.518,607,1.208,608,1.208,609,3.484,610,1.208,611,1.208,612,1.208,613,1.208,614,1.208,615,1.208,616,1.208,617,1.208,618,1.208,619,1.208,620,1.208,621,2.825,622,2.653,623,1.208,624,2.947,625,1.208,626,1.838,627,1.208,628,1.208,629,1.208,630,1.208,631,1.208,632,1.208,633,1.208,634,1.208,635,1.208,636,1.208,637,1.208,638,1.208,639,1.838,640,1.208,641,1.208,642,1.208,643,1.208,644,1.208,645,1.208,646,1.208,647,1.208,648,1.208,649,1.208,650,2.116,651,1.208,652,2.116,653,3.017,654,1.409,655,2.258,656,1.208,657,4.246,658,4.246,659,3.32,660,1.208,661,1.208,662,2.116,663,1.208,664,2.825,665,3.858,666,1.208,667,1.208,668,2.116,669,1.208,670,1.208,671,1.208,672,1.208,673,1.208,674,1.208,675,1.208,676,1.208,677,1.208,678,1.208,679,1.208,680,1.208,681,1.208,682,1.208,683,1.208,684,3.32,685,1.655,686,1.838,687,1.838,688,1.838,689,1.049,690,1.049,691,1.049,692,1.049,693,1.049,694,0.944]],["title/interfaces/IContext.html",[46,1.932,50,0.296]],["body/interfaces/IContext.html",[2,0.015,3,0.169,7,2.813,10,1.776,11,4.057,12,4.057,13,4.057,14,4.057,15,4.057,16,4.572,22,2.896,23,4.057,25,4.057,27,4.057,29,4.057,43,0.187,44,3.313,46,2.691,48,0.152,50,0.308,79,0.007,80,0.007,112,0.86,202,1.28,267,2.822,366,2.969,525,6.477,695,3.671,696,5.656,697,4.964,698,4.227,699,4.227,700,4.227,701,4.227,702,4.227,703,4.227,704,4.227,705,6.375,706,4.227,707,5.656,708,4.227]],["title/interfaces/IDevCmdOptions.html",[50,0.296,709,3.175]],["body/interfaces/IDevCmdOptions.html",[2,0.015,3,0.165,10,1.891,36,1.117,42,2.283,43,0.246,48,0.2,50,0.301,53,0.736,70,1.348,79,0.007,80,0.007,95,0.502,112,0.849,113,1.849,118,2.139,172,3.812,173,2.332,174,4.102,175,4.227,178,3.15,186,2.777,187,1.645,188,1.506,190,2.059,191,2.283,192,3.259,193,3.259,225,1.716,235,2.165,363,2.568,603,3.99,653,3.225,709,4.35,710,3.225,711,6.437,712,4.35,713,3.582,714,4.885,715,3.225,716,2.958,717,3.225,718,3.582,719,5.469,720,3.582,721,3.582,722,4.35,723,3.582,724,6.237,725,3.225,726,5.183,727,3.582,728,3.582,729,3.225]],["title/interfaces/IENV.html",[50,0.296,182,1.554]],["body/interfaces/IENV.html",[2,0.015,3,0.223,5,2.928,43,0.246,48,0.242,50,0.406,79,0.01,80,0.01,95,0.821,112,0.764,173,2.47,182,2.779,251,2.784,363,4.519,463,4,476,2.135,603,5.206,604,5.898,606,5.54,730,4.361,731,5.578,732,5.578,733,4.844]],["title/interfaces/IENV-1.html",[50,0.248,182,1.305,233,1.548]],["body/interfaces/IENV-1.html",[2,0.015,3,0.161,10,1.428,22,2.013,43,0.178,48,0.264,50,0.509,53,0.718,63,0.606,70,1.316,71,3.779,79,0.007,80,0.007,95,0.812,112,0.847,113,1.84,118,2.113,120,1.538,135,1.14,144,2.022,170,3.2,171,2.507,172,3.104,173,2.196,174,3.443,175,3.443,176,2.454,177,3.443,178,2.899,179,3.643,180,4.14,181,4.482,182,2.555,183,1.658,184,2.184,185,2.68,186,2.01,187,1.606,188,1.09,189,2.359,190,2.01,191,2.229,192,3.909,193,3.909,194,1.79,195,1.829,196,1.829,197,1.829,198,1.829,199,2.01,200,2.01,201,2.359,202,1.22,203,2.68,204,2.68,205,2.68,206,1.916,207,1.916,208,5.162,209,3.644,210,3.644,211,3.644,212,2.68,213,2.68,214,4.14,215,4.14,216,2.68,217,2.68,218,2.68,219,2.68,220,2.68,734,3.497,735,4.027]],["title/interfaces/IErrorHandler.html",[50,0.296,736,2.912]],["body/interfaces/IErrorHandler.html",[2,0.015,3,0.149,36,1.007,43,0.285,48,0.232,50,0.47,53,0.925,54,1.209,55,1.209,56,1.209,63,0.411,79,0.007,80,0.007,83,1.483,95,0.631,112,0.812,113,0.9,132,2.933,135,1.243,144,1.955,147,2.354,183,2.395,225,2.156,244,1.216,249,2.067,264,1.813,312,3.036,337,2.869,365,1.689,399,1.761,415,2.156,471,3.036,472,2.475,476,1.423,480,3.494,483,2.667,494,2.977,516,3.436,714,3.226,736,4.278,737,2.667,738,3.889,739,4.894,740,4.501,741,3.97,742,3.719,743,3.719,744,2.315,745,2.667,746,3.23,747,3.23,748,4.628,749,2.058,750,3.714,751,3.717,752,3.23,753,3.23,754,4.052,755,3.23,756,2.587,757,3.23,758,4.628,759,3.717,760,3.23,761,3.717,762,3.717,763,2.475,764,2.667,765,2.667,766,2.908,767,3.23,768,4.501,769,2.908]],["title/interfaces/IGlobalErrorHandler.html",[50,0.296,770,2.912]],["body/interfaces/IGlobalErrorHandler.html",[2,0.015,3,0.177,6,2.007,18,2.007,22,1.625,43,0.338,48,0.209,50,0.322,58,1.92,79,0.01,80,0.008,95,0.959,120,1.242,132,2.6,135,1.213,138,2.588,140,2.588,145,2.751,152,1.833,173,2.051,183,1.765,249,1.763,264,2.024,312,3.412,357,3.412,415,2.712,450,3.1,451,2.941,452,2.588,471,2.588,474,3.169,475,3.169,476,1.691,484,2.751,487,3.169,488,3.877,489,2.941,494,2.206,516,3.271,738,2.446,739,2.941,741,2.941,749,3.225,762,4.178,763,3.877,770,4.674,771,3.455,772,6.423,773,3.838,774,4.419,775,3.838,776,2.102,777,3.455,778,3.169,779,3.455,780,3.455,781,3.838,782,3.455,783,3.455,784,5.06,785,4.674,786,5.06,787,3.838,788,3.169,789,3.838,790,4.555,791,2.751,792,3.838,793,3.455,794,3.838,795,3.838,796,3.838,797,3.838]],["title/interfaces/IGlobalSetOptions.html",[50,0.296,413,2.702]],["body/interfaces/IGlobalSetOptions.html",[0,1.813,1,2.901,2,0.015,3,0.155,18,1.761,22,1.426,43,0.314,48,0.236,49,1.268,50,0.389,51,1.131,52,1.845,53,0.952,54,1.244,55,1.244,56,1.244,57,0.99,60,1.426,62,2.156,63,0.429,69,2.581,79,0.007,80,0.007,95,0.742,99,1.426,112,0.793,113,1.477,120,2.088,144,1.99,146,1.685,183,1.616,188,1.779,194,1.268,269,1.685,360,3.125,365,2.984,371,4.374,372,4.374,373,3.826,393,2.781,394,4.171,395,4.769,396,4.171,398,4.432,399,2.232,401,4.769,404,3.032,405,3.032,406,2.953,407,2.781,408,2.581,409,2.581,410,1.685,411,2.414,412,2.781,413,3.551,414,6.024,415,2.866,416,3.032,417,3.032,418,5.137,419,2.781,420,3.125,421,3.032,422,4.769,423,4.769,424,5.702,425,3.032,426,5.137,427,4.171]],["title/interfaces/IInjectableConfigs.html",[50,0.296,798,3.175]],["body/interfaces/IInjectableConfigs.html",[0,2.274,2,0.015,3,0.187,10,1.912,43,0.266,48,0.263,50,0.34,53,0.833,54,1.089,55,1.089,56,1.089,63,0.668,79,0.008,80,0.008,95,0.735,135,1.474,146,2.028,147,3.517,183,1.83,230,2.584,238,4.475,244,1.526,245,4.229,247,1.842,267,1.716,268,1.787,368,4.674,399,2.274,410,2.028,433,3.847,455,3.108,459,6.366,622,3.651,624,6.147,626,4.055,654,3.108,655,4.455,659,3.651,798,4.722,799,4.055,800,5.245,801,4.669,802,4.055,803,6.039,804,6.039,805,3.108,806,4.055,807,4.055,808,4.669]],["title/interfaces/IMiddlewaresScope.html",[50,0.296,809,3.175]],["body/interfaces/IMiddlewaresScope.html",[2,0.015,3,0.189,6,3.48,36,2.039,43,0.314,46,2.895,47,2.768,48,0.242,50,0.344,54,1.102,55,1.102,56,1.102,58,2.053,63,0.523,79,0.008,80,0.008,95,0.819,120,1.71,135,1.402,202,1.432,247,1.188,264,2.222,267,1.737,268,1.809,291,5.495,354,4.481,357,4.164,410,2.053,450,3.583,452,2.768,455,3.145,476,1.809,776,2.248,791,2.942,809,5.559,810,3.695,811,4.104,812,4.309,813,5.286,814,6.086,815,6.732,816,4.104,817,4.726,818,4.726,819,4.726]],["title/interfaces/INunjunksRenderOptions.html",[50,0.296,820,2.702]],["body/interfaces/INunjunksRenderOptions.html",[2,0.015,3,0.217,43,0.293,48,0.257,50,0.395,79,0.01,80,0.01,95,0.807,112,0.755,132,2.647,144,2.362,146,3.246,249,2.647,476,2.076,481,4.131,482,3.889,756,3.825,820,4.772,821,4.24,822,6.656,823,5.992,824,6.656,825,6.656,826,6.656,827,4.709,828,4.709]],["title/interfaces/IPreProcess.html",[50,0.296,829,3.175]],["body/interfaces/IPreProcess.html",[2,0.015,3,0.151,5,1.984,36,1.024,43,0.312,47,2.214,48,0.293,50,0.275,53,0.935,54,1.223,55,1.223,56,1.223,58,1.642,63,0.58,70,1.967,79,0.011,80,0.007,83,2.889,95,0.638,112,0.762,113,1.71,120,1.062,135,1.254,176,1.39,187,2.4,188,1.024,195,2.952,196,3.101,197,2.952,198,2.952,199,3.004,202,1.145,236,2.214,240,2.093,245,2.093,248,2.214,249,1.508,251,1.887,264,1.473,267,2.389,268,1.447,399,2.045,408,2.516,410,1.642,412,2.712,451,2.516,452,2.214,453,3.284,476,1.447,477,2.712,478,3.284,479,3.284,481,2.354,483,2.712,485,2.354,487,2.712,488,2.516,489,2.516,490,2.712,491,3.284,494,1.887,503,3.264,745,2.712,756,3.244,773,3.284,829,4.099,830,3.284,831,4.553,832,3.76,833,3.284,834,6.018,835,2.712,836,3.781,837,2.494,838,2.516,839,2.956,840,3.781,841,3.781,842,2.956,843,4.553,844,3.781,845,3.781,846,3.781,847,4.099,848,2.956,849,3.781,850,2.712,851,3.781,852,3.781,853,3.781,854,3.781,855,3.781,856,5.242,857,5.242,858,3.781,859,3.781,860,3.781,861,2.712,862,2.956,863,3.284,864,2.956]],["title/interfaces/IResult.html",[50,0.296,865,2.027]],["body/interfaces/IResult.html",[2,0.015,3,0.199,36,1.347,43,0.278,48,0.274,50,0.503,53,1.122,54,1.467,55,1.467,56,1.467,79,0.009,80,0.009,112,0.763,120,1.398,242,3.098,243,3.916,244,1.627,247,1.733,264,1.398,267,1.829,268,1.905,269,2.162,357,3.684,433,3.302,450,2.367,452,2.915,776,2.992,812,4.245,865,3.731,866,3.569,867,4.918,868,5.463,869,4.653,870,4.976,871,3.302,872,3.569,873,3.891]],["title/interfaces/IResultScope.html",[50,0.296,869,2.528]],["body/interfaces/IResultScope.html",[2,0.015,3,0.202,36,1.37,43,0.28,48,0.275,50,0.506,53,1.134,54,1.482,55,1.482,56,1.482,79,0.009,80,0.009,112,0.731,120,1.422,242,3.15,243,4.539,244,1.654,247,1.747,264,2.049,267,1.86,268,1.937,269,2.198,357,4.27,433,2.656,450,3.468,452,2.963,776,3.024,812,4.071,865,3.639,866,3.629,868,4.394,869,4.539,871,2.656,872,3.629,873,3.956]],["title/interfaces/IRouter.html",[50,0.296,874,2.528]],["body/interfaces/IRouter.html",[2,0.015,3,0.134,43,0.288,48,0.121,50,0.245,63,0.723,79,0.006,80,0.006,95,0.937,112,0.841,118,1.919,120,0.946,130,3.776,132,2.606,135,1.361,138,2.828,140,2.828,145,2.095,151,2.098,176,2.756,188,0.911,195,1.528,196,2.193,197,1.528,198,3.364,225,2.567,233,2.193,235,1.766,315,2.413,330,2.413,365,2.193,384,2.534,399,1.143,410,1.462,468,1.971,470,2.095,490,2.413,516,2.565,734,2.922,738,1.862,756,3.395,837,2.297,838,2.239,843,4.194,850,3.463,874,4.462,875,2.922,876,3.365,877,4.194,878,3.365,879,4.051,880,3.365,881,4.051,882,3.365,883,3.365,884,3.365,885,3.365,886,3.365,887,3.365,888,6.534,889,7.167,890,3.365,891,7.642,892,3.365,893,3.365,894,4.829,895,3.365,896,4.905,897,7.406,898,7.406,899,6.171,900,3.365,901,3.365,902,3.365,903,4.829,904,3.365,905,3.365,906,3.365,907,3.365,908,3.365,909,3.365,910,4.194,911,6.534,912,3.365,913,3.365,914,3.214,915,6.534,916,3.365,917,3.365,918,3.365,919,3.365,920,4.194,921,3.365,922,3.365,923,3.365,924,3.365,925,3.365,926,4.829,927,1.971,928,3.365,929,3.365,930,4.829,931,3.365,932,3.365,933,3.365,934,3.365,935,3.365,936,3.365,937,3.365,938,3.365,939,3.365,940,3.365,941,3.365,942,3.365,943,3.365]],["title/interfaces/IRouterCmdOptions.html",[50,0.296,944,3.175]],["body/interfaces/IRouterCmdOptions.html",[2,0.015,3,0.177,5,2.323,10,1.879,36,1.198,42,2.45,43,0.257,48,0.209,50,0.322,53,0.79,70,1.447,79,0.008,80,0.008,95,0.539,112,0.847,113,1.791,176,2.649,178,3.214,186,2.911,187,1.765,188,1.579,190,2.209,191,2.45,195,3.273,196,3.427,197,3.427,198,3.478,200,3.596,225,1.841,227,2.323,235,2.323,337,2.45,406,3.838,712,4.56,713,3.844,715,3.461,716,3.174,717,3.461,724,5.986,725,3.461,726,4.614,756,2.209,837,3.428,850,3.174,927,2.592,944,4.56,945,3.461,946,3.844,947,3.844,948,3.844,949,3.844,950,3.844,951,3.844,952,3.461,953,3.844,954,3.844,955,3.844,956,3.844,957,3.844]],["title/interfaces/IRouterMagic.html",[50,0.296,958,2.702]],["body/interfaces/IRouterMagic.html",[2,0.015,3,0.109,36,1.964,43,0.246,48,0.28,50,0.363,53,1.168,54,1.527,55,1.527,56,1.527,63,0.82,79,0.005,80,0.005,83,1.99,95,0.728,104,1.964,112,0.816,113,1.449,118,2.034,120,0.765,132,2.754,135,1.608,152,0.857,183,2.092,187,1.647,188,1.118,194,0.89,247,1.844,254,1.507,264,0.765,267,2.2,268,2.506,273,2.419,325,1.952,365,1.237,366,1.429,368,1.695,384,3.624,399,1.892,410,1.183,503,2.571,697,4.193,805,4.934,835,1.952,837,1.295,871,2.619,874,3.467,927,1.594,958,2.748,959,1.695,960,4.68,961,4.293,962,2.128,963,2.128,964,2.128,965,5.505,966,2.128,967,2.128,968,1.952,969,1.812,970,4.695,971,2.128,972,3.578,973,1.812,974,5.273,975,5.273,976,2.571,977,3.984,978,2.962,979,2.962,980,3.229,981,3.726,982,3.229,983,4.354,984,2.128,985,2.128,986,2.128,987,2.128,988,1.812,989,3.229,990,3.229,991,5.595,992,3.578,993,2.128,994,1.812,995,3.229,996,1.812,997,2.128,998,2.128,999,2.128,1000,2.128,1001,2.128,1002,2.128,1003,3.994,1004,3.229,1005,2.128,1006,2.128,1007,3.229,1008,3.229,1009,2.128,1010,2.128,1011,2.128,1012,2.128,1013,2.128,1014,1.952,1015,2.128,1016,2.128,1017,1.812,1018,2.128,1019,2.128,1020,1.952,1021,2.128,1022,2.128]],["title/interfaces/ISimpleLoggerOptions.html",[50,0.296,1023,2.702]],["body/interfaces/ISimpleLoggerOptions.html",[2,0.015,3,0.229,43,0.303,48,0.264,50,0.418,79,0.01,80,0.01,95,0.835,118,2.495,235,3.008,249,2.737,476,2.193,485,4.271,486,4.11,1023,4.888,1024,3.814,1025,4.481,1026,6.085,1027,5.952,1028,4.481]],["title/interfaces/IStaticSerializeOptions.html",[50,0.296,1029,2.702]],["body/interfaces/IStaticSerializeOptions.html",[2,0.015,3,0.212,36,1.773,43,0.234,48,0.235,50,0.477,79,0.009,80,0.009,104,3.527,110,3.108,112,0.689,113,1.719,122,3.835,147,3.524,188,1.773,244,1.735,247,1.949,366,3.437,398,4.076,399,2.225,529,5.798,538,5.119,1029,4.358,1030,4.149,1031,4.616,1032,3.303,1033,6.44,1034,6.44,1035,5.686,1036,4.149,1037,4.149,1038,4.149]],["title/interfaces/IStaticTypedResolver.html",[50,0.296,1032,2.528]],["body/interfaces/IStaticTypedResolver.html",[2,0.015,3,0.177,36,2.072,43,0.195,48,0.209,50,0.424,79,0.008,80,0.008,104,3.641,110,3.817,112,0.758,113,1.07,122,4.332,147,3.476,188,2.002,244,1.445,247,1.895,366,3.637,398,4.314,399,2.513,529,5.984,538,5.418,1029,2.941,1030,3.455,1031,2.751,1032,3.627,1033,6.647,1034,6.647,1035,6.018,1036,4.555,1037,5.096,1038,4.555,1039,5.06,1040,5.06,1041,4.419,1042,4.419,1043,3.838,1044,4.419,1045,3.838,1046,4.419]],["title/interfaces/IView.html",[50,0.296,1047,3.175]],["body/interfaces/IView.html",[2,0.015,3,0.21,10,1.371,43,0.232,48,0.234,50,0.474,53,0.938,54,1.226,55,1.226,56,1.226,79,0.009,80,0.009,83,2.096,95,0.792,112,0.847,113,1.712,247,1.635,251,2.623,273,3.812,365,2.387,399,1.785,464,3.497,465,3.769,476,2.011,756,3.688,823,5.778,1047,5.528,1048,4.109,1049,6.508,1050,7.39,1051,7.39,1052,7.39,1053,4.109,1054,4.564]],["title/interfaces/IViewEngine.html",[50,0.296,744,2.528]],["body/interfaces/IViewEngine.html",[2,0.015,3,0.224,43,0.247,48,0.201,50,0.408,79,0.01,80,0.01,112,0.827,132,2.699,264,2.208,415,2.815,744,4.213,776,3.679,865,2.795,1055,4.864,1056,5.877,1057,6.767,1058,5.601,1059,6.767,1060,5.601]],["title/interfaces/InnerCmdConfig.html",[50,0.296,201,2.378]],["body/interfaces/InnerCmdConfig.html",[2,0.015,3,0.164,10,1.444,22,2.035,43,0.181,48,0.265,50,0.511,53,0.73,63,0.612,70,1.338,71,3.798,79,0.007,80,0.007,95,0.818,112,0.839,113,1.846,118,1.391,120,1.556,135,1.153,144,2.036,170,3.269,171,2.548,172,3.131,173,2.367,174,3.472,175,3.472,176,2.47,177,3.472,178,2.919,179,3.674,180,4.175,181,4.504,182,2.401,183,1.677,184,2.208,185,2.724,186,2.043,187,1.633,188,1.108,189,2.398,190,2.043,191,2.266,192,2.398,193,2.398,194,1.338,195,1.859,196,1.859,197,1.859,198,1.859,199,2.043,200,2.043,201,3.242,202,1.24,203,2.724,204,2.724,205,4.472,206,1.947,207,1.947,208,5.177,209,3.684,210,3.684,211,3.684,212,2.724,213,2.724,214,4.175,215,4.175,216,2.724,217,2.724,218,2.724,219,2.724,220,2.724]],["title/interfaces/InnerRouterOptions.html",[50,0.296,468,2.378]],["body/interfaces/InnerRouterOptions.html",[2,0.015,3,0.213,43,0.235,48,0.266,50,0.478,70,1.741,79,0.009,80,0.009,95,0.799,112,0.828,113,1.589,144,1.988,195,2.981,196,2.981,197,2.981,198,2.981,199,3.276,202,1.614,249,2.125,468,4.167,469,3.545,470,3.316,476,2.039,832,3.82,847,5.132,848,4.165,879,5.469,881,5.469,1061,3.82,1062,5.102,1063,4.165,1064,3.82,1065,4.165]],["title/classes/JsonResult.html",[57,0.753,1066,2.528]],["body/classes/JsonResult.html",[2,0.015,3,0.16,43,0.317,48,0.222,53,0.972,54,1.27,55,1.27,56,1.27,57,1.011,60,2.002,63,0.839,79,0.007,80,0.007,95,0.754,99,2.002,112,0.733,113,0.968,135,1.291,147,1.816,151,2.366,188,1.082,230,2.212,233,2.474,239,3.859,264,1.957,267,1.47,268,1.53,269,1.737,346,3.19,359,2.488,392,3.625,399,2.105,406,2.212,407,2.867,409,2.66,410,1.737,411,2.488,467,2.66,654,2.66,655,4.428,763,2.66,785,4.444,861,2.867,865,3.321,867,4.845,869,4.334,871,3.492,927,3.19,1031,3.391,1066,4.142,1067,3.125,1068,3.472,1069,3.997,1070,3.472,1071,3.997,1072,5.447,1073,3.997,1074,4.444,1075,3.997,1076,3.472,1077,2.66,1078,3.125,1079,6.654,1080,3.125,1081,3.125,1082,3.125,1083,6.196,1084,3.997,1085,3.125,1086,3.472,1087,5.447,1088,3.997,1089,3.472,1090,3.997,1091,5.447,1092,3.997,1093,3.997,1094,3.997,1095,3.997,1096,4.259]],["title/interfaces/JsonResultOptions.html",[50,0.296,1077,2.702]],["body/interfaces/JsonResultOptions.html",[2,0.015,3,0.185,43,0.205,48,0.253,50,0.438,53,0.827,54,1.081,55,1.081,56,1.081,79,0.008,80,0.008,95,0.732,112,0.789,113,1.615,122,4.135,135,1.252,144,2.021,151,2.898,183,2.367,194,1.516,233,3.031,247,1.511,249,2.398,273,3.522,346,4.389,365,2.106,392,4.441,466,3.326,467,4.002,476,1.775,1031,4.553,1066,3.743,1077,4.698,1078,5.719,1080,5.719,1081,5.719,1082,5.719,1097,3.626]],["title/classes/NormalizedMessage.html",[57,0.753,1098,2.912]],["body/classes/NormalizedMessage.html",[2,0.015,3,0.085,48,0.153,50,0.156,52,3.727,57,0.396,62,2.445,63,0.844,70,0.698,79,0.004,80,0.004,95,0.416,104,3.753,105,2.671,110,2.859,112,0.777,113,1.293,115,1.329,118,2.525,122,1.251,151,2.598,152,0.672,183,1.479,233,2.911,247,1.503,315,3.83,330,1.531,359,3.039,378,2.45,384,1.793,516,2.218,738,2.956,996,1.421,1098,5.33,1099,1.531,1100,4.638,1101,4.947,1102,4.947,1103,5.81,1104,3.71,1105,3.71,1106,3.71,1107,3.71,1108,3.71,1109,3.417,1110,3.417,1111,3.417,1112,3.417,1113,3.417,1114,3.71,1115,4.24,1116,4.24,1117,4.24,1118,4.24,1119,4.24,1120,2.967,1121,4.596,1122,3.417,1123,2.135,1124,2.135,1125,2.135,1126,2.135,1127,2.135,1128,2.135,1129,3.34,1130,2.135,1131,5.503,1132,2.135,1133,3.34,1134,2.135,1135,3.817,1136,2.135,1137,2.135,1138,5.397,1139,2.135,1140,4.638,1141,2.967,1142,5.195,1143,2.135,1144,4.638,1145,2.967,1146,4.947,1147,2.135,1148,4.24,1149,2.967,1150,3.71,1151,2.135,1152,2.967,1153,2.967,1154,3.71,1155,2.135,1156,2.967,1157,2.967,1158,2.135,1159,2.967,1160,2.135,1161,2.135,1162,2.135,1163,2.135,1164,2.135,1165,2.135,1166,2.135,1167,2.135,1168,2.135,1169,2.135,1170,4.24,1171,1.854,1172,4.24,1173,1.854,1174,4.24,1175,1.854,1176,2.967,1177,1.854,1178,2.967,1179,1.854,1180,2.967,1181,1.854,1182,2.967,1183,1.854,1184,1.854,1185,1.854,1186,1.854,1187,1.854,1188,1.854,1189,1.854,1190,1.854,1191,1.854,1192,1.854,1193,1.854,1194,1.854,1195,1.854,1196,1.854,1197,1.854,1198,1.531,1199,1.854,1200,1.854,1201,2.967,1202,1.854,1203,1.854,1204,1.854,1205,1.854,1206,1.854,1207,1.854,1208,1.854,1209,1.854,1210,1.854,1211,2.967,1212,1.854,1213,2.967,1214,2.967,1215,2.967,1216,2.967,1217,2.967,1218,1.854,1219,2.967,1220,2.967,1221,1.854,1222,1.854]],["title/interfaces/NormalizedMessageJson.html",[50,0.296,1121,2.912]],["body/interfaces/NormalizedMessageJson.html",[2,0.015,3,0.116,48,0.186,50,0.212,52,3.456,57,0.539,62,2.403,63,0.877,70,0.95,79,0.005,80,0.005,95,0.528,104,3.5,110,1.702,112,0.807,115,1.809,118,2.571,151,2.907,152,0.914,183,1.743,233,3.193,247,1.728,315,4.631,359,3.582,378,3.11,384,2.276,516,2.357,738,3.574,996,1.934,1098,4.933,1099,2.084,1100,5.608,1101,5.811,1102,5.811,1103,5.96,1104,2.523,1105,2.523,1106,2.523,1107,2.523,1108,2.523,1114,2.523,1115,2.523,1116,2.523,1117,2.523,1118,2.523,1119,2.523,1120,2.523,1121,4.415,1129,3.391,1131,5.497,1133,3.391,1135,4.057,1138,4.997,1140,4.506,1141,2.523,1142,5.347,1144,4.997,1145,2.523,1146,4.997,1148,4.506,1149,2.523,1150,2.523,1152,2.523,1153,2.523,1154,2.523,1156,2.523,1157,2.523,1159,2.523,1170,4.997,1171,2.523,1172,4.997,1173,2.523,1174,4.997,1175,2.523,1176,3.766,1177,2.523,1178,3.766,1179,2.523,1180,3.766,1181,2.523,1182,3.766,1183,2.523,1184,2.523,1185,2.523,1186,2.523,1187,2.523,1188,2.523,1189,2.523,1190,2.523,1191,2.523,1192,2.523,1193,2.523,1194,2.523,1195,2.523,1196,2.523,1197,2.523,1198,2.084,1199,2.523,1200,2.523,1201,3.766,1202,2.523,1203,2.523,1204,2.523,1205,2.523,1206,2.523,1207,2.523,1208,2.523,1209,2.523,1210,2.523,1211,3.766,1212,2.523,1213,3.766,1214,3.766,1215,3.766,1216,3.766,1217,3.766,1218,2.523,1219,3.766,1220,3.766,1221,2.523,1222,2.523]],["title/injectables/NunjunksEngine.html",[0,1.38,480,2.378]],["body/injectables/NunjunksEngine.html",[0,1.879,2,0.015,3,0.163,43,0.319,45,2.545,48,0.147,57,0.758,60,1.503,62,2.191,63,0.776,79,0.007,80,0.007,99,2.88,112,0.761,152,1.74,187,1.63,188,1.107,264,2.271,350,3.196,415,3.009,476,1.564,480,3.239,481,2.545,489,2.72,744,3.443,745,2.931,776,3.44,785,2.931,812,3.933,820,4.813,1056,4.803,1085,4.324,1223,3.55,1224,7.232,1225,5.53,1226,4.087,1227,6.267,1228,4.087,1229,5.53,1230,5.53,1231,4.087,1232,5.53,1233,4.087,1234,5.53,1235,4.087,1236,4.087,1237,6.267,1238,4.087,1239,4.087,1240,4.087,1241,4.087,1242,4.087,1243,5.53,1244,3.55,1245,5.53,1246,4.087,1247,5.53,1248,4.087,1249,4.087,1250,4.087,1251,4.087,1252,4.087,1253,5.53,1254,4.087]],["title/interfaces/ParamsOptions.html",[50,0.296,973,2.702]],["body/interfaces/ParamsOptions.html",[2,0.015,3,0.11,36,1.911,43,0.247,48,0.28,50,0.365,53,1.172,54,1.531,55,1.531,56,1.531,63,0.822,79,0.005,80,0.005,83,2.001,95,0.731,104,1.978,112,0.817,113,1.59,118,2.042,120,0.772,132,2.761,135,1.61,152,0.864,183,2.097,187,1.658,188,1.126,194,0.898,247,1.802,254,1.52,264,0.772,267,2.209,268,2.513,325,1.97,365,1.248,366,1.442,368,1.71,384,3.634,399,1.901,410,1.193,503,2.588,697,4.208,805,4.772,835,1.97,837,1.307,871,2.633,874,2.588,927,1.609,958,1.828,959,1.71,960,3.251,961,2.982,962,2.148,963,2.148,964,2.148,965,5.518,966,2.148,967,2.148,968,1.97,969,1.828,970,4.709,971,2.148,972,4.31,973,2.767,974,5.607,975,5.607,976,2.588,977,4,978,2.982,979,2.982,980,3.251,981,3.741,982,3.251,983,4.374,984,2.148,985,2.148,986,2.148,987,2.148,988,1.828,989,3.251,990,3.251,991,5.607,992,3.598,993,2.148,994,1.828,995,3.251,996,1.828,997,2.148,998,2.148,999,2.148,1000,2.148,1001,2.148,1002,2.148,1003,4.012,1004,3.251,1005,2.148,1006,2.148,1007,3.251,1008,3.251,1009,2.148,1010,2.148,1011,2.148,1012,2.148,1013,2.148,1014,1.97,1015,2.148,1016,2.148,1017,1.828,1018,2.148,1019,2.148,1020,1.97,1021,2.148,1022,2.148]],["title/classes/RealConfigCollection.html",[57,0.753,253,2.378]],["body/classes/RealConfigCollection.html",[2,0.015,3,0.159,36,2.094,43,0.175,48,0.278,49,1.297,50,0.45,51,1.158,53,0.967,54,1.264,55,1.264,56,1.264,57,1.145,58,1.724,60,2.269,62,2.295,63,0.6,79,0.007,80,0.007,95,0.751,99,2.269,112,0.65,120,1.115,152,1.705,194,2.399,202,1.202,236,3.616,237,2.324,238,4.199,239,3.482,240,4.282,241,4.427,242,2.47,243,3.843,244,1.772,245,2.196,246,2.846,247,0.997,248,3.616,249,1.583,250,2.641,251,1.981,252,2.641,253,3.175,254,3.844,255,3.887,256,4.771,257,2.846,258,4.108,259,2.846,260,2.846,261,4.758,262,2.846,263,2.846,264,1.864,265,4.13,266,2.846,267,1.459,268,1.519,269,1.724,406,3,1255,3.968,1256,3.968,1257,3.968,1258,3.968]],["title/injectables/Render.html",[0,1.38,415,1.689]],["body/injectables/Render.html",[0,1.574,1,3.038,2,0.015,3,0.127,17,2.759,18,2.104,22,1.703,43,0.294,48,0.216,49,1.038,50,0.337,51,0.927,52,1.511,53,0.826,54,1.08,55,1.08,56,1.08,57,0.859,60,1.168,62,2.342,63,0.351,69,2.114,79,0.006,80,0.006,95,0.665,99,2.01,112,0.796,113,0.769,120,2.143,144,1.82,146,1.38,183,1.403,188,1.91,194,1.787,247,1.51,269,1.38,273,3.519,360,3.519,365,2.729,371,3.92,372,3.92,373,3.322,393,2.278,394,4.697,395,5.914,396,4.697,398,4.664,399,2.397,401,4.994,404,2.484,405,2.484,406,2.564,407,2.278,408,2.114,409,2.114,410,1.38,411,1.977,412,2.278,413,2.114,414,5.517,415,2.864,416,2.484,417,4.274,418,4.697,419,2.278,420,3.906,421,3.621,422,4.274,423,4.274,424,5.383,425,2.484,426,4.697,427,3.621,1259,3.176,1260,3.176,1261,3.176,1262,3.176,1263,3.176,1264,3.176,1265,3.176,1266,3.176,1267,3.176,1268,3.176]],["title/classes/RenderResult.html",[57,0.753,749,2.247]],["body/classes/RenderResult.html",[2,0.015,3,0.15,6,2.365,18,1.701,43,0.325,46,1.781,47,2.193,48,0.187,53,0.668,54,0.873,55,0.873,56,0.873,57,0.966,59,2.073,60,1.914,63,0.752,79,0.007,80,0.007,95,0.931,99,2.201,112,0.681,132,2.581,138,2.193,140,2.193,173,1.884,188,1.014,194,1.224,225,2.491,232,3.05,239,3.397,264,1.912,399,2.311,415,2.166,450,1.781,451,2.492,471,2.193,484,2.331,487,2.685,488,3.466,489,2.492,494,1.869,516,1.701,738,2.882,739,3.985,741,2.492,749,3.314,750,2.331,751,3.735,756,2.599,759,3.735,761,2.685,765,3.735,775,3.252,776,2.848,777,2.928,778,2.685,779,2.928,780,2.928,782,2.928,783,2.928,791,4.235,793,2.928,812,3.05,861,2.685,865,3.23,867,4.681,869,4.029,871,3.397,1068,4.523,1070,3.252,1085,4.072,1269,3.252,1270,5.207,1271,3.744,1272,3.744,1273,4.523,1274,5.207,1275,6.802,1276,3.744,1277,3.744,1278,3.744,1279,3.744,1280,3.744,1281,3.744,1282,3.744,1283,3.744,1284,3.744,1285,3.744,1286,3.744,1287,3.744,1288,3.744,1289,5.207,1290,5.207,1291,3.744,1292,3.744,1293,3.744,1294,3.744,1295,3.744]],["title/interfaces/RenderResultOptions.html",[50,0.296,750,2.528]],["body/interfaces/RenderResultOptions.html",[2,0.015,3,0.142,36,1.574,43,0.279,48,0.227,50,0.46,53,0.894,54,1.169,55,1.169,56,1.169,63,0.392,79,0.006,80,0.006,83,1.999,95,0.61,112,0.817,113,0.858,132,2.898,135,0.738,144,1.914,147,2.276,183,2.317,225,2.085,244,1.159,247,1.588,249,1.999,264,1.999,273,3.701,312,3.904,337,2.774,365,1.61,399,2.351,415,2.085,471,2.935,472,2.359,476,1.357,480,3.701,483,2.542,494,2.501,516,3.356,714,2.207,736,3.594,737,2.542,738,3.217,739,4.835,740,3.078,741,3.335,744,2.207,745,2.542,746,3.078,747,3.078,748,4.531,749,2.774,750,3.933,751,4.781,752,3.078,753,3.078,754,3.918,755,3.078,756,3.327,757,3.078,758,4.963,759,4.781,760,4.352,761,4.781,762,4.781,763,2.359,764,2.542,765,2.542,766,2.771,767,3.078,768,4.352,769,2.771,1296,3.544,1297,3.544]],["title/interfaces/Request.html",[50,0.296,531,2.912]],["body/interfaces/Request.html",[2,0.015,3,0.121,6,2.981,18,1.38,43,0.324,44,1.78,46,2.534,47,1.78,48,0.191,50,0.221,53,0.542,54,0.709,55,0.709,56,0.709,57,0.564,59,1.682,63,0.83,70,1.465,71,2.353,79,0.011,80,0.005,83,1.212,84,2.639,94,2.639,95,0.949,104,1.445,112,0.619,113,1.085,118,1.032,135,1.451,144,1.614,146,1.947,147,2.849,183,0.92,187,2.779,230,1.682,239,3.657,244,0.993,247,1.126,264,1.26,267,1.117,268,1.163,357,3.12,366,1.595,368,3.316,384,1.595,410,1.32,450,3.384,451,2.022,452,1.78,473,2.179,476,1.163,493,2.639,503,4.429,531,3.215,654,2.022,655,3.914,776,2.132,778,2.179,790,3.505,791,2.791,800,3.893,802,2.639,805,2.022,806,2.639,807,2.639,837,2.798,838,2.022,839,2.376,861,2.179,862,2.376,865,2.237,871,3.292,872,3.215,914,2.984,961,3.215,976,2.791,977,3.914,978,4.218,979,2.179,981,1.891,1003,3.821,1032,3.661,1298,2.376,1299,2.639,1300,2.639,1301,2.639,1302,3.038,1303,3.038,1304,3.505,1305,3.038,1306,3.038,1307,3.038,1308,3.038,1309,5.327,1310,3.038,1311,3.038,1312,3.038,1313,4.483,1314,3.038,1315,3.038,1316,3.038,1317,3.038,1318,3.038,1319,3.038,1320,5.327,1321,3.038,1322,3.038,1323,6.789,1324,3.038,1325,3.893,1326,3.038,1327,3.038,1328,3.038,1329,3.038,1330,3.038,1331,3.038,1332,3.038,1333,3.038,1334,3.038,1335,3.038,1336,3.038,1337,3.038,1338,3.038,1339,5.327,1340,5.881,1341,5.108,1342,3.038,1343,3.038,1344,4.483,1345,4.483,1346,4.483,1347,3.038,1348,2.639,1349,3.038,1350,2.639,1351,3.038,1352,3.038,1353,3.038,1354,2.639,1355,4.483,1356,3.038]],["title/interfaces/RouteArgument.html",[50,0.296,976,2.528]],["body/interfaces/RouteArgument.html",[2,0.015,3,0.106,36,1.893,43,0.242,48,0.279,50,0.358,53,1.158,54,1.513,55,1.513,56,1.513,63,0.816,79,0.005,80,0.005,83,1.959,95,0.72,104,2.815,112,0.814,113,1.571,118,2.205,120,0.746,132,2.734,135,1.602,152,0.835,183,2.255,187,1.615,188,1.096,194,0.867,247,1.854,254,1.469,264,0.746,267,2.176,268,2.483,325,1.903,365,1.205,366,1.393,368,1.652,384,3.785,399,1.867,410,1.153,503,3.684,697,4.152,805,4.733,835,1.903,837,1.262,871,3.106,874,2.521,927,1.554,958,1.766,959,1.652,960,3.166,961,2.904,962,2.075,963,2.075,964,2.075,965,5.468,966,2.075,967,2.075,968,1.903,969,1.766,970,4.653,971,2.075,972,4.244,973,1.766,974,5.231,975,5.231,976,3.057,977,4.318,978,4.244,979,2.904,980,3.166,981,3.684,982,3.166,983,4.297,984,2.075,985,2.075,986,2.075,987,2.075,988,1.766,989,3.166,990,3.166,991,5.56,992,3.522,993,2.075,994,1.766,995,3.166,996,1.766,997,2.075,998,2.075,999,2.075,1000,2.075,1001,2.075,1002,2.075,1003,3.941,1004,3.166,1005,2.075,1006,2.075,1007,3.166,1008,3.166,1009,2.075,1010,2.075,1011,2.075,1012,2.075,1013,2.075,1014,1.903,1015,2.075,1016,2.075,1017,1.766,1018,2.075,1019,2.075,1020,1.903,1021,2.075,1022,2.075]],["title/interfaces/RouterConfig.html",[50,0.296,184,1.62]],["body/interfaces/RouterConfig.html",[2,0.015,3,0.218,10,2.061,43,0.24,48,0.284,49,1.78,50,0.523,63,0.736,79,0.01,80,0.01,135,1.385,170,3.12,173,2.354,176,2.001,182,2.084,184,3.06,202,2.176,206,2.59,207,2.59,221,3.904,222,3.896,223,3.896,224,4.657,225,2.988,226,4.257,227,3.491,228,3.389,229,3.389,230,3.013,231,3.623,232,3.189]],["title/interfaces/RouterConfig-1.html",[50,0.248,184,1.36,233,1.548]],["body/interfaces/RouterConfig-1.html",[2,0.015,3,0.154,10,1.385,22,1.952,43,0.17,48,0.261,50,0.501,53,0.687,63,0.587,70,1.986,71,3.728,79,0.007,80,0.007,95,0.797,112,0.839,113,1.914,118,1.308,120,1.492,135,1.106,144,1.984,170,3.162,171,2.397,172,3.033,173,2.162,174,3.363,175,3.363,176,2.408,177,3.363,178,3.162,179,3.559,180,4.044,181,4.422,182,2.326,183,1.608,184,2.424,185,2.563,186,1.922,187,1.536,188,1.042,189,2.255,190,1.922,191,2.131,192,2.255,193,2.255,194,1.259,195,2.975,196,2.975,197,2.975,198,2.975,199,3.033,200,3.269,201,2.255,202,1.166,203,2.563,204,2.563,205,2.563,206,1.832,207,1.832,208,5.121,209,3.533,210,3.533,211,3.533,212,2.563,213,2.563,214,4.044,215,4.044,216,2.563,217,2.563,218,2.563,219,2.563,220,2.563]],["title/interfaces/RouterConfig-2.html",[50,0.248,184,1.36,346,1.997]],["body/interfaces/RouterConfig-2.html",[2,0.015,3,0.223,10,2.049,43,0.247,48,0.282,49,1.827,50,0.529,63,0.748,79,0.01,80,0.01,135,1.408,170,2.936,173,2.286,176,2.055,182,2.139,184,3.011,202,2.201,206,2.659,207,2.659,222,3.274,223,3.274,224,4.523,225,2.812,227,2.934,228,3.48,229,3.48,234,4.009,235,2.934]],["title/interfaces/RouterOptions.html",[50,0.296,1062,2.912]],["body/interfaces/RouterOptions.html",[2,0.015,3,0.205,43,0.226,48,0.263,50,0.467,70,2.286,79,0.009,80,0.009,95,0.78,112,0.794,113,1.862,144,1.941,195,3.425,196,3.425,197,3.425,198,3.425,199,3.656,202,1.553,249,2.045,468,3.754,469,3.412,470,3.191,476,1.962,831,5.566,832,4.596,833,4.452,847,5.011,848,4.008,879,4.596,881,4.596,1061,3.677,1062,5.015,1063,4.008,1064,3.677,1065,4.008]],["title/injectables/Scope.html",[0,1.38,433,2.131]],["body/injectables/Scope.html",[0,1.965,2,0.015,3,0.175,43,0.255,45,2.72,48,0.233,49,1.428,50,0.318,51,1.275,52,2.078,57,0.811,60,1.606,62,2.09,63,0.794,79,0.008,80,0.008,99,2.91,118,1.965,120,1.625,144,1.752,146,1.898,151,1.898,152,1.819,244,1.428,354,5.192,360,4.525,420,3.387,429,3.416,430,5.764,431,6.232,433,3.402,434,3.795,435,5.629,436,5.629,437,5.764,438,5.629,439,5.022,440,5.022,441,5.022,442,5.991,443,5.629,444,5.991,445,5.629,446,3.795,447,3.795,1357,4.369,1358,4.369,1359,4.369,1360,4.369,1361,4.369,1362,4.369,1363,4.369,1364,4.369,1365,4.369,1366,4.369]],["title/injectables/SimpleLogger.html",[0,1.38,484,2.528]],["body/injectables/SimpleLogger.html",[0,1.778,2,0.015,3,0.151,22,2.209,43,0.301,45,2.347,48,0.135,57,0.7,62,2.342,63,0.579,79,0.007,80,0.007,95,0.459,99,2.594,112,0.814,120,2.034,135,1.09,152,1.186,172,3.612,188,1.021,200,3.24,230,2.087,235,1.979,247,0.947,264,1.983,350,2.948,437,4.699,476,1.443,484,3.257,485,2.347,516,1.713,654,2.509,655,4.539,659,5.075,748,4.655,1023,3.999,1024,5.049,1026,4.091,1027,5.332,1028,2.948,1367,3.274,1368,6.009,1369,5.232,1370,6.286,1371,3.77,1372,5.232,1373,5.232,1374,3.77,1375,3.77,1376,3.77,1377,3.77,1378,5.232,1379,5.232,1380,3.77,1381,5.232,1382,3.77,1383,3.77,1384,3.77,1385,3.77,1386,4.544,1387,3.77,1388,3.77,1389,3.77,1390,3.77,1391,3.77,1392,3.77,1393,7.057,1394,7.057,1395,3.77,1396,3.77,1397,3.274,1398,3.274,1399,3.274,1400,3.77,1401,3.274,1402,3.274,1403,3.77,1404,3.274,1405,3.274,1406,3.77,1407,3.77,1408,3.77]],["title/classes/TypedSerializerCreator.html",[57,0.753,1409,2.912]],["body/classes/TypedSerializerCreator.html",[2,0.015,3,0.164,36,2.122,43,0.277,48,0.199,53,0.73,54,0.955,55,0.955,56,0.955,57,1.027,60,2.035,62,2.374,63,0.743,79,0.007,80,0.007,110,3.674,112,0.739,122,3.242,144,1.677,147,3.36,151,1.778,183,1.677,188,2.087,244,1.338,247,1.937,359,2.548,398,4.183,399,2.458,862,3.201,863,3.555,864,3.201,1029,2.724,1031,3.446,1032,4.183,1036,4.328,1037,4.904,1038,4.328,1039,4.808,1040,4.808,1043,3.555,1045,3.555,1089,3.555,1409,4.499,1410,5.489,1411,3.555,1412,4.093,1413,4.093,1414,4.093,1415,4.093,1416,4.093,1417,3.201,1418,5.536,1419,5.536,1420,4.093,1421,4.093,1422,4.093,1423,4.093,1424,4.093]],["title/changelog.html",[1425,2.665,1426,2.665,1427,2.96]],["body/changelog.html",[0,1.764,1,2.842,2,0.015,6,1.694,8,2.321,10,1.685,18,2.359,49,1.219,51,1.088,57,0.692,70,1.697,79,0.007,80,0.007,83,2.071,176,1.909,178,2.256,199,1.861,200,1.861,227,2.725,244,1.697,264,1.048,362,4.52,415,2.16,420,2.184,450,1.774,464,2.482,494,1.861,609,2.674,714,2.321,726,4.3,749,3.307,756,1.861,758,3.724,837,2.47,914,3.456,981,2.321,1053,2.916,1064,2.674,1066,2.321,1427,3.239,1428,5.974,1429,5.192,1430,3.729,1431,3.239,1432,3.729,1433,3.729,1434,5.611,1435,7.474,1436,7.474,1437,5.192,1438,6.46,1439,5.192,1440,3.239,1441,3.239,1442,5.974,1443,3.729,1444,3.729,1445,5.974,1446,5.192,1447,5.192,1448,7.474,1449,3.729,1450,5.192,1451,3.729,1452,3.729,1453,3.729,1454,5.192,1455,7.716,1456,3.729,1457,3.729,1458,6.108,1459,3.729,1460,3.729,1461,3.729,1462,3.729,1463,6.792,1464,3.729,1465,3.729,1466,5.192,1467,5.192,1468,3.239,1469,3.729,1470,6.108,1471,3.729,1472,3.729,1473,3.729,1474,3.729,1475,3.729]],["title/coverage.html",[1476,5.505]],["body/coverage.html",[0,1.989,1,0.791,2,0.015,4,2.177,10,0.726,46,0.791,50,0.575,51,1.476,57,1.045,79,0.003,80,0.003,81,1.3,82,2.177,96,1.3,97,1.193,98,2.808,123,1.193,135,1.708,151,3.617,152,0.523,170,0.722,171,3.344,173,1.13,177,0.92,178,0.722,182,1.066,184,1.432,186,0.83,188,0.754,201,0.974,221,3.354,222,0.974,223,0.974,231,1.853,232,1.631,234,3.354,236,0.974,237,2.962,240,0.92,249,0.663,251,0.83,253,0.974,270,1.3,271,3.648,276,1.444,297,1.444,347,1.444,353,5.25,370,4.665,393,2.576,409,1.107,411,1.035,413,1.107,415,0.692,429,2.177,433,0.873,448,1.3,449,3.012,450,0.791,455,1.107,456,1.444,463,1.193,464,1.107,465,1.193,466,1.193,467,1.107,468,0.974,469,1.107,470,1.035,471,0.974,472,1.107,473,1.193,474,1.193,475,1.193,477,1.193,480,0.974,481,1.035,482,1.193,484,1.035,485,1.035,486,1.193,490,1.193,494,0.83,531,1.193,572,1.3,609,1.193,694,1.3,695,1.444,709,1.3,710,2.177,730,2.808,736,1.193,737,3.354,744,1.035,749,0.92,750,1.035,764,1.193,770,1.193,771,2.808,798,1.3,799,4.061,809,1.3,810,2.177,811,1.444,816,1.444,820,1.107,821,2.808,829,1.3,830,3.648,838,1.107,839,1.3,842,1.3,865,0.83,866,1.997,869,1.035,874,1.035,875,4.892,896,1.444,910,1.444,914,1.107,920,1.444,944,1.3,945,2.177,958,1.107,959,4.409,968,1.193,969,1.107,973,1.107,976,1.035,988,2.39,992,1.193,994,2.39,1014,1.193,1017,1.107,1020,1.193,1023,1.107,1024,3.366,1025,2.808,1029,1.107,1030,2.177,1032,1.035,1047,1.3,1048,2.808,1055,1.444,1061,3.012,1062,1.193,1066,1.035,1067,3.656,1074,1.193,1077,1.107,1096,1.3,1097,2.808,1098,1.193,1099,1.997,1121,1.193,1223,1.444,1269,1.444,1298,4.577,1299,1.444,1300,1.444,1301,1.444,1304,1.3,1325,1.444,1348,1.444,1350,1.444,1354,1.444,1367,3.119,1409,1.193,1410,4.969,1411,1.444,1468,1.444,1477,6.698,1478,8.25,1479,1.663,1480,1.663,1481,1.663,1482,2.784,1483,3.591,1484,3.591,1485,2.784,1486,1.663,1487,1.663,1488,3.119,1489,1.663,1490,7.707,1491,3.591,1492,1.663,1493,1.663,1494,1.444,1495,3.119,1496,1.444,1497,1.663,1498,1.663,1499,1.663,1500,1.663,1501,1.663,1502,1.663,1503,5.371,1504,1.663,1505,2.784,1506,2.784,1507,7.54,1508,7.411,1509,1.663,1510,1.663,1511,1.663,1512,1.663,1513,1.663,1514,1.663,1515,3.591,1516,3.591,1517,2.784,1518,2.784,1519,3.648,1520,1.663,1521,1.663,1522,1.663,1523,1.3,1524,1.663,1525,1.663,1526,1.663,1527,1.444,1528,1.444,1529,2.784,1530,1.663,1531,1.663,1532,1.663,1533,1.663,1534,6.045,1535,4.676,1536,4.676,1537,1.444,1538,1.663,1539,1.444,1540,1.663,1541,1.663,1542,1.663,1543,1.663,1544,1.663,1545,1.663,1546,1.663,1547,1.663,1548,1.663,1549,1.663,1550,1.663,1551,1.663,1552,1.663,1553,1.663,1554,1.663,1555,5.309,1556,1.663,1557,1.663,1558,1.663,1559,1.663,1560,1.663,1561,1.663,1562,1.663,1563,1.444,1564,3.591,1565,3.591,1566,1.663,1567,1.663]],["title/dependencies.html",[294,4.233,1441,2.96]],["body/dependencies.html",[2,0.015,79,0.01,80,0.01,83,2.716,133,4.425,178,2.458,244,1.85,837,3.239,877,4.915,1074,4.059,1076,4.915,1244,4.915,1386,4.915,1417,4.425,1431,4.915,1434,4.915,1440,4.915,1568,6.809,1569,5.659,1570,5.659,1571,5.659,1572,5.659,1573,5.659,1574,5.659,1575,5.659,1576,6.809,1577,5.659,1578,5.659,1579,5.659,1580,5.659,1581,5.659,1582,5.659,1583,5.659,1584,5.659,1585,5.659,1586,5.659,1587,5.659,1588,5.659,1589,5.659,1590,5.659,1591,5.659]],["title/miscellaneous/enumerations.html",[1592,2.665,1593,4.874]],["body/miscellaneous/enumerations.html",[2,0.015,79,0.011,80,0.011,151,2.622,172,3.012,233,2.741,346,3.535,352,4.719,392,4.017,428,4.719,516,2.741,1024,4.017,1027,5.532,1370,5.242,1399,5.242,1402,5.242,1594,6.035,1595,6.035,1596,6.035]],["title/index.html",[384,1.789,1425,2.665,1426,2.665]],["body/index.html",[0,1.575,1,1.794,2,0.015,5,3.838,6,1.713,8,1.506,10,1.365,18,1.099,42,1.339,43,0.301,46,1.151,48,0.216,50,0.338,51,0.706,57,0.86,62,1.586,63,0.513,70,0.791,71,1.27,79,0.004,80,0.004,83,2.771,95,0.812,99,1.704,112,0.597,118,1.575,132,2.263,141,1.892,144,1.143,146,2.82,147,1.099,152,1.458,172,1.208,173,1.187,174,2.565,175,1.339,176,1.924,177,1.339,178,2.014,179,1.417,181,1.506,187,2.59,190,1.208,195,1.713,196,1.713,197,1.713,198,1.713,200,1.208,232,1.417,233,2.105,235,3.155,239,1.27,244,0.791,245,1.339,247,1.577,251,1.208,264,1.689,291,2.705,300,1.892,312,1.417,330,1.735,337,2.088,346,2.209,352,2.949,362,3.085,363,2.348,392,1.61,408,1.61,420,1.417,430,4.908,450,1.151,494,1.883,521,3.624,527,2.102,561,2.102,572,1.892,606,2.705,622,1.892,639,2.102,697,1.61,714,2.348,716,1.735,722,1.892,726,3.085,729,2.949,776,1.151,788,1.735,791,1.506,832,2.705,837,3.088,842,1.892,864,1.892,865,1.208,871,2.433,914,1.61,952,1.892,977,4,981,1.506,988,2.51,994,2.51,1017,2.51,1066,2.885,1086,3.276,1198,1.735,1273,3.276,1341,2.102,1458,2.102,1470,2.102,1523,2.949,1597,2.42,1598,2.42,1599,2.42,1600,2.42,1601,4.635,1602,2.42,1603,2.42,1604,2.42,1605,2.42,1606,2.42,1607,2.42,1608,2.42,1609,2.42,1610,2.42,1611,2.42,1612,2.42,1613,2.42,1614,2.42,1615,2.42,1616,2.42,1617,2.42,1618,2.42,1619,2.42,1620,2.42,1621,2.42,1622,2.42,1623,2.42,1624,2.42,1625,5.234,1626,2.42,1627,2.42,1628,2.42,1629,3.772,1630,4.635,1631,3.772,1632,3.772,1633,3.772,1634,2.42,1635,2.42,1636,5.234,1637,2.42,1638,4.635,1639,2.42,1640,2.42,1641,4.635,1642,3.772,1643,2.42,1644,3.772,1645,2.42,1646,2.42,1647,2.42,1648,2.42,1649,2.42,1650,2.42,1651,2.42,1652,2.42,1653,2.42,1654,2.42,1655,2.42,1656,3.772,1657,2.42,1658,3.772,1659,2.42,1660,2.42,1661,2.42,1662,2.42,1663,2.42,1664,2.42,1665,2.42,1666,2.42,1667,2.42,1668,2.42,1669,2.42,1670,2.42,1671,2.42,1672,2.42,1673,2.42,1674,2.42,1675,2.42,1676,2.42,1677,2.42,1678,2.42,1679,3.772,1680,3.772,1681,2.42,1682,2.42,1683,2.42,1684,2.42,1685,2.42,1686,2.42,1687,2.42,1688,2.42,1689,2.42,1690,2.42,1691,2.42,1692,2.42,1693,2.42,1694,2.42,1695,2.42,1696,2.42,1697,2.102,1698,1.892,1699,4.025,1700,2.102,1701,2.102,1702,2.42,1703,3.276,1704,2.102,1705,2.102,1706,2.102,1707,2.102,1708,2.102,1709,2.102,1710,3.276,1711,5.793,1712,2.102,1713,2.102,1714,2.102,1715,2.102,1716,3.276,1717,2.102,1718,2.102,1719,2.102,1720,2.102,1721,2.102,1722,2.102,1723,2.102,1724,2.102,1725,3.276,1726,2.102,1727,2.102,1728,2.102,1729,2.102,1730,2.102,1731,2.102,1732,3.276,1733,3.276,1734,2.102,1735,2.102,1736,2.102,1737,2.102,1738,2.102,1739,2.102,1740,2.102,1741,2.102,1742,2.102,1743,2.102,1744,2.102,1745,2.102,1746,2.102,1747,2.102,1748,2.102,1749,2.102,1750,2.102,1751,2.102,1752,2.102,1753,2.102,1754,2.102,1755,2.102,1756,2.102,1757,2.102,1758,2.102,1759,2.102,1760,2.102,1761,2.102]],["title/license.html",[1425,2.665,1426,2.665,1698,2.665]],["body/license.html",[2,0.013,42,2.948,51,1.554,79,0.009,80,0.009,190,2.659,232,3.12,300,4.165,337,3.633,521,5.562,788,3.82,1198,3.82,1697,4.626,1698,4.165,1699,6.178,1700,4.626,1701,4.626,1703,5.7,1704,4.626,1705,4.626,1706,4.626,1707,4.626,1708,4.626,1709,4.626,1710,5.7,1711,6.956,1712,4.626,1713,4.626,1714,4.626,1715,4.626,1716,5.7,1717,4.626,1718,4.626,1719,4.626,1720,4.626,1721,4.626,1722,4.626,1723,4.626,1724,4.626,1725,5.7,1726,4.626,1727,4.626,1728,4.626,1729,4.626,1730,4.626,1731,4.626,1732,5.7,1733,5.7,1734,4.626,1735,4.626,1736,4.626,1737,4.626,1738,4.626,1739,4.626,1740,4.626,1741,4.626,1742,4.626,1743,4.626,1744,4.626,1745,4.626,1746,4.626,1747,4.626,1748,4.626,1749,4.626,1750,4.626,1751,4.626,1752,4.626,1753,4.626,1754,4.626,1755,4.626,1756,4.626,1757,4.626,1758,4.626,1759,4.626,1760,4.626,1761,4.626]],["title/modules.html",[1762,5.505]],["body/modules.html",[2,0.014,79,0.011,80,0.011]],["title/overview.html",[1763,5.505]],["body/overview.html",[2,0.014,79,0.011,80,0.011,428,4.996,1539,5.549,1764,6.389]],["title/miscellaneous/typealiases.html",[1592,2.665,1765,4.874]],["body/miscellaneous/typealiases.html",[2,0.014,36,1.498,79,0.01,80,0.01,112,0.582,120,1.555,135,1.567,237,3.241,248,3.934,449,3.968,457,6.282,458,5.252,492,5.834,516,2.513,684,5.252,685,5.252,776,3.441,810,4.326,812,3.241,813,5.834,865,2.761,866,3.968,872,4.818,873,5.252,959,3.444,970,4.818,972,4.818,1099,3.968,1103,5.252,1129,4.326,1131,5.252,1133,4.326,1135,4.326,1555,4.326,1766,7.233,1767,5.834,1768,6.282,1769,6.717,1770,5.834,1771,5.532,1772,4.805]],["title/miscellaneous/variables.html",[1592,2.665,1773,4.874]],["body/miscellaneous/variables.html",[2,0.015,5,2.195,6,1.513,10,1.25,22,0.76,36,0.902,42,2.315,46,0.984,53,0.594,58,0.899,63,0.53,70,1.089,79,0.006,80,0.004,82,1.617,83,0.825,95,0.792,96,2.604,112,0.505,132,2.24,138,1.951,140,1.951,144,1.789,145,1.288,146,1.817,152,1.767,172,2.623,173,1.933,174,2.315,175,2.909,176,1.932,177,1.844,178,2.44,182,0.792,183,2.116,186,1.663,187,1.329,188,1.599,190,1.663,191,1.844,192,1.951,193,1.951,194,1.567,195,1.513,196,2.178,197,2.178,198,2.387,199,1.032,200,1.032,225,1.994,227,1.086,237,1.212,248,1.951,249,2.355,250,1.377,251,1.663,252,1.377,254,1.844,264,1.347,291,2.389,312,2.449,337,1.844,346,1.212,362,1.377,363,1.288,366,1.748,399,0.703,406,2.653,411,2.074,415,1.994,433,1.086,449,1.484,450,2.809,455,2.217,458,1.617,462,1.797,463,2.389,464,2.217,465,2.389,466,2.389,467,2.783,468,1.212,469,2.217,470,2.074,471,2.449,472,2.217,473,2.999,474,2.389,475,2.389,477,2.389,480,1.212,481,2.603,482,2.389,485,2.603,486,2.389,488,2.783,494,1.663,513,1.797,516,2.88,559,1.797,566,1.797,569,1.797,603,2.999,604,1.617,606,1.484,609,4.405,653,1.617,684,3.748,685,1.617,686,1.797,687,1.797,688,1.797,689,1.797,690,1.797,691,1.797,692,1.797,693,1.797,694,2.604,710,1.617,711,3.632,712,2.604,714,4.22,715,2.604,716,2.389,717,2.604,718,1.797,719,3.632,720,1.797,721,1.797,722,2.604,723,1.797,724,5.882,725,2.604,726,4.706,727,1.797,728,1.797,729,1.617,730,1.617,733,1.797,737,1.484,738,2.315,739,3.191,741,2.217,748,2.999,749,1.145,750,1.288,751,1.484,754,1.617,756,2.087,758,2.389,759,1.484,761,1.484,762,2.999,763,2.783,764,1.484,765,1.484,766,1.617,769,1.617,770,1.484,771,1.617,772,2.893,776,1.585,777,1.617,778,1.484,779,1.617,780,1.617,781,1.797,782,1.617,783,1.617,784,2.893,785,2.999,786,2.893,787,1.797,788,1.484,789,1.797,790,2.604,791,2.603,792,1.797,793,1.617,794,1.797,795,1.797,796,1.797,797,1.797,812,1.212,820,1.377,821,1.617,822,1.797,823,1.617,824,1.797,825,1.797,826,1.797,827,1.797,828,1.797,837,2.5,838,2.217,850,1.484,879,1.484,881,1.484,927,1.212,945,1.617,946,1.797,947,1.797,948,1.797,949,1.797,950,1.797,951,1.797,952,1.617,953,1.797,954,1.797,955,1.797,956,1.797,957,1.797,959,1.288,969,2.217,1023,1.377,1024,1.377,1025,1.617,1026,1.617,1028,1.617,1031,1.288,1048,1.617,1053,1.617,1054,1.797,1061,1.484,1063,1.617,1064,1.484,1065,1.617,1067,1.617,1074,2.389,1077,1.377,1078,1.617,1080,1.617,1081,1.617,1082,1.617,1096,2.604,1097,1.617,1298,1.617,1304,3.27,1397,1.797,1398,1.797,1401,1.797,1404,1.797,1405,1.797,1409,1.484,1410,1.617,1417,1.617,1488,1.797,1494,1.797,1495,1.797,1496,2.893,1519,1.797,1523,2.604,1527,1.797,1528,2.893,1537,1.797,1555,1.617,1563,2.893,1767,3.632,1768,2.893,1770,1.797,1772,2.893,1774,3.331,1775,2.069,1776,3.331,1777,3.331,1778,3.331,1779,2.069,1780,3.331,1781,2.069,1782,5.616,1783,3.331,1784,3.331,1785,2.069,1786,3.331,1787,2.069,1788,4.182,1789,2.069,1790,2.069,1791,2.069,1792,2.069,1793,2.069,1794,2.069,1795,2.069,1796,2.069,1797,2.069,1798,2.069,1799,2.069,1800,3.331,1801,2.069,1802,2.069,1803,2.069,1804,2.069,1805,2.069,1806,2.069,1807,2.069,1808,2.069,1809,2.069]]],"invertedIndex":[["",{"_index":2,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":151,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/IRouter.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.37",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1627,"title":{},"body":{"index.html":{}}}],["0.1.18",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["0.cli",{"_index":1634,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":233,"title":{"interfaces/Config-1.html":{},"interfaces/Contract-1.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/RouterConfig-1.html":{}},"body":{"interfaces/IRouter.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.1",{"_index":1470,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.0.11",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["1.0.5",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["1.0.6",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["1.0.7",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["1.0.8",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["1.0.9",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["1.02",{"_index":1469,"title":{},"body":{"changelog.html":{}}}],["1.18.8",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1431,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.9.3",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":160,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["10.12.10",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["10ms",{"_index":164,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["12",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["12345",{"_index":1683,"title":{},"body":{"index.html":{}}}],["16",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":346,"title":{"interfaces/Contract-2.html":{},"interfaces/RouterConfig-2.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0.47",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["2.0的routers，默认：`false",{"_index":847,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{}}}],["2.0的routers，默认：false",{"_index":831,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/RouterOptions.html":{}}}],["2.19.0",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1540,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1700,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["26/55",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":352,"title":{"interfaces/Contract-3.html":{}},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["3.1.6",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":392,"title":{"interfaces/Contract-4.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["4.1.0",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1541,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":428,"title":{"interfaces/Contract-5.html":{}},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["50",{"_index":1539,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["500",{"_index":1288,"title":{},"body":{"classes/RenderResult.html":{}}}],["6/6",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["7.0.35",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1764,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["8201",{"_index":719,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["98765",{"_index":1670,"title":{},"body":{"index.html":{}}}],["_",{"_index":763,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/JsonResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["__base_route_deco_factory",{"_index":1468,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["__base_route_deco_factory(configs",{"_index":1009,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["__route_custom",{"_index":1010,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["__transpile",{"_index":204,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["__tsconfig",{"_index":203,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["_ctx",{"_index":351,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["_init",{"_index":435,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["_innerbundle",{"_index":694,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_innerbundle[\"@options\"].foreach(args",{"_index":617,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_innerbundle[\"@scopeds\"].foreach(args",{"_index":613,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_innerbundle[\"@singletons\"].foreach(args",{"_index":611,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_innerbundle[\"@uniques\"].foreach(args",{"_index":615,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["_path",{"_index":921,"title":{},"body":{"interfaces/IRouter.html":{}}}],["_views",{"_index":417,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["above",{"_index":1731,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":265,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"classes/RealConfigCollection.html":{}}}],["abstracttype",{"_index":460,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["action",{"_index":190,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":713,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{}}}],["add",{"_index":1612,"title":{},"body":{"index.html":{}}}],["add(v",{"_index":1671,"title":{},"body":{"index.html":{}}}],["addmagicforroute",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["addmagicforroute(\"delete",{"_index":1022,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"get",{"_index":1013,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"post",{"_index":1019,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(\"put",{"_index":1016,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["addmagicforroute(method",{"_index":1001,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["always",{"_index":196,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1723,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":3,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{}}}],["api/post/:type?id=xxxx&name=xxxx",{"_index":1653,"title":{},"body":{"index.html":{}}}],["api/test/testget/:type?id=xxxx&name=xxxx",{"_index":1645,"title":{},"body":{"index.html":{}}}],["apifactory",{"_index":962,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["apifactory(method",{"_index":1005,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["app",{"_index":8,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"changelog.html":{},"index.html":{}}}],["app.configs",{"_index":594,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["app.env",{"_index":602,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["app.ts",{"_index":1613,"title":{},"body":{"index.html":{}}}],["app/app.ts",{"_index":1664,"title":{},"body":{"index.html":{}}}],["app/controllers",{"_index":1063,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["app/controllers/test.ts",{"_index":1640,"title":{},"body":{"index.html":{}}}],["app/middleware/server",{"_index":1622,"title":{},"body":{"index.html":{}}}],["app/middlewares/demo.ts",{"_index":1688,"title":{},"body":{"index.html":{}}}],["app/routers",{"_index":1064,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app/routers/test.ts",{"_index":1657,"title":{},"body":{"index.html":{}}}],["app/services/test.ts",{"_index":1668,"title":{},"body":{"index.html":{}}}],["app/tsconfig.json",{"_index":729,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app/views",{"_index":828,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["appbuilder",{"_index":498,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["appconfigs",{"_index":499,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["application/json",{"_index":1650,"title":{},"body":{"index.html":{}}}],["approot",{"_index":197,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["args",{"_index":22,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/InnerCmdConfig.html":{},"injectables/Render.html":{},"interfaces/RouterConfig-1.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["args.path",{"_index":784,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["args.tplstr",{"_index":786,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["args[0",{"_index":658,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["args[1",{"_index":657,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["arising",{"_index":1758,"title":{},"body":{"index.html":{},"license.html":{}}}],["array",{"_index":189,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["array.from(this.map.entries()).map(([sb",{"_index":262,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["associated",{"_index":1712,"title":{},"body":{"index.html":{},"license.html":{}}}],["astconf",{"_index":751,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["astconf.configs",{"_index":1279,"title":{},"body":{"classes/RenderResult.html":{}}}],["astconf.state",{"_index":1278,"title":{},"body":{"classes/RenderResult.html":{}}}],["astconf.use",{"_index":1276,"title":{},"body":{"classes/RenderResult.html":{}}}],["astroboy",{"_index":83,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Contract-2.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["astroboy)(this.appconfigs",{"_index":640,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["astroboy.ts",{"_index":5,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["astroboy.tsyarn",{"_index":1611,"title":{},"body":{"index.html":{}}}],["astroboycontext",{"_index":1,"title":{"injectables/AstroboyContext.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["astroboycontext.contract",{"_index":61,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["astroboy渲染时的`config`字段，默认：`undefined",{"_index":752,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["astroboy渲染时的`state`字段，默认：`undefined",{"_index":753,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["astroboy的配置的view",{"_index":1049,"title":{},"body":{"interfaces/IView.html":{}}}],["astrpboy.ts",{"_index":1632,"title":{},"body":{"index.html":{}}}],["astt",{"_index":1463,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":776,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["atc",{"_index":726,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atc.config.js",{"_index":716,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atccli",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["atcconfig",{"_index":715,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":54,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["authors",{"_index":1749,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":947,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["autoescape",{"_index":822,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":791,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1079,"title":{},"body":{"classes/JsonResult.html":{}}}],["base",{"_index":235,"title":{},"body":{"interfaces/Config-1.html":{},"interfaces/Env-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/RouterConfig-2.html":{},"injectables/SimpleLogger.html":{},"index.html":{}}}],["baseclass",{"_index":81,"title":{"classes/BaseClass.html":{}},"body":{"classes/BaseClass.html":{},"coverage.html":{}}}],["baseclass.app",{"_index":39,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["baseclass.config",{"_index":41,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["baseclass.ctx",{"_index":35,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["based",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baserouter",{"_index":898,"title":{},"body":{"interfaces/IRouter.html":{}}}],["bc",{"_index":96,"title":{},"body":{"classes/BaseClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["begin",{"_index":442,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["big",{"_index":55,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["bigmogician@outlook.com",{"_index":1702,"title":{},"body":{"index.html":{}}}],["blue",{"_index":1401,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":871,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["bonbons/di",{"_index":244,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["bonbonsserver",{"_index":511,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["bonbonsserver.use",{"_index":520,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["boolean",{"_index":113,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-4.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{}}}],["break",{"_index":659,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"injectables/SimpleLogger.html":{}}}],["breaking",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":948,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["builders",{"_index":491,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["building",{"_index":955,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["buildrouter",{"_index":842,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{},"index.html":{}}}],["buildrouter(test",{"_index":1661,"title":{},"body":{"index.html":{}}}],["bunddle",{"_index":814,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["bundles",{"_index":609,"title":{},"body":{"interfaces/FactoryContext.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@options\"].push(args",{"_index":690,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@scopeds\"].push(args",{"_index":691,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@singletons\"].push(args",{"_index":692,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["bundles[\"@uniques\"].push(args",{"_index":693,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":42,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":823,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"interfaces/IView.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":519,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["callservice",{"_index":11,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["callservice(...args",{"_index":20,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{}}}],["callservice(service",{"_index":696,"title":{},"body":{"interfaces/IContext.html":{}}}],["camel",{"_index":1073,"title":{},"body":{"classes/JsonResult.html":{}}}],["camel(key",{"_index":1093,"title":{},"body":{"classes/JsonResult.html":{}}}],["camelcase",{"_index":1074,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["camelcase(key",{"_index":1092,"title":{},"body":{"classes/JsonResult.html":{}}}],["cancellationfilename",{"_index":100,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["cancellationtoken",{"_index":97,"title":{"classes/CancellationToken.html":{}},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["cancellationtokendata",{"_index":123,"title":{"interfaces/CancellationTokenData.html":{}},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["careful",{"_index":554,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["case",{"_index":655,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{},"injectables/SimpleLogger.html":{}}}],["catch",{"_index":140,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["cater",{"_index":1199,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["ccccc",{"_index":1678,"title":{},"body":{"index.html":{}}}],["cerialize",{"_index":1417,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cfg",{"_index":1229,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["chalk",{"_index":1386,"title":{},"body":{"injectables/SimpleLogger.html":{},"dependencies.html":{}}}],["chalk.cyan",{"_index":1389,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["chalk[color](tps",{"_index":1406,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["change",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":552,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["changelog",{"_index":1427,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changereturn",{"_index":458,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1100,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["charge",{"_index":1707,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":161,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{}}}],["checkcustomerror",{"_index":764,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkcustomerror(error",{"_index":767,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["checkifonlydeclares",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["checkifonlydeclares(p",{"_index":912,"title":{},"body":{"interfaces/IRouter.html":{}}}],["checkifonlydeclares(path",{"_index":909,"title":{},"body":{"interfaces/IRouter.html":{}}}],["checkrouterfolders",{"_index":896,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["claim",{"_index":1752,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":57,"title":{"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"classes/TypedSerializerCreator.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["cleanupcancellation",{"_index":103,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["cli",{"_index":1458,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cli监控的文件修改列表，自动重启node",{"_index":1637,"title":{},"body":{"index.html":{}}}],["cmd",{"_index":227,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cmd.ts",{"_index":221,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{}}}],["cmdconfig",{"_index":170,"title":{"interfaces/CmdConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["code",{"_index":1101,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["color",{"_index":1393,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["colors",{"_index":1563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commander",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["commandplugin",{"_index":186,"title":{"interfaces/CommandPlugin.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonname",{"_index":915,"title":{},"body":{"interfaces/IRouter.html":{}}}],["compare",{"_index":1108,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compare(messagea",{"_index":1137,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparenumbers",{"_index":1109,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparenumbers(numbera",{"_index":1141,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compareoptionalstrings",{"_index":1110,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["compareoptionalstrings(stringa",{"_index":1145,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compareseverities",{"_index":1111,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["compareseverities(severitya",{"_index":1149,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["comparetypes",{"_index":1112,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["comparetypes(typea",{"_index":1153,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["compileroptions",{"_index":278,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["conditions",{"_index":1730,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":10,"title":{"interfaces/Config.html":{},"interfaces/Config-1.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config.debug",{"_index":217,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.ignore",{"_index":215,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.inspect",{"_index":213,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.mock",{"_index":218,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.transpile",{"_index":220,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.tsconfig",{"_index":212,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.typecheck",{"_index":219,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.verbose",{"_index":216,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config.watch",{"_index":214,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["config/config.default.js",{"_index":1629,"title":{},"body":{"index.html":{}}}],["config/middleware.default.js",{"_index":1624,"title":{},"body":{"index.html":{}}}],["config/options/demo.ts",{"_index":1676,"title":{},"body":{"index.html":{}}}],["config_view",{"_index":464,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IView.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configentry",{"_index":236,"title":{"interfaces/ConfigEntry.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["configfile",{"_index":277,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configs",{"_index":264,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IViewEngine.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"injectables/SimpleLogger.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configs.contract",{"_index":266,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["configs.get(env",{"_index":779,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["configs.get(json_result_options",{"_index":1084,"title":{},"body":{"classes/JsonResult.html":{}}}],["configs.get(render_result_options",{"_index":780,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["configs/env.config",{"_index":775,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{}}}],["configs/options",{"_index":1606,"title":{},"body":{"index.html":{}}}],["configs[regexp.$1",{"_index":600,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["configscollection",{"_index":242,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RealConfigCollection.html":{}}}],["configs字段下传，默认：`undefined",{"_index":757,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["configs字段下传，默认：undefined",{"_index":1296,"title":{},"body":{"interfaces/RenderResultOptions.html":{}}}],["configtoken",{"_index":240,"title":{"interfaces/ConfigToken.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["configurable",{"_index":1315,"title":{},"body":{"interfaces/Request.html":{}}}],["configuration",{"_index":274,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configuration.iconfigurationfile",{"_index":287,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["configurationfile",{"_index":270,"title":{"interfaces/ConfigurationFile.html":{}},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["confs",{"_index":1275,"title":{},"body":{"classes/RenderResult.html":{}}}],["connection",{"_index":1760,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.log",{"_index":724,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["console.log(\"fuck",{"_index":1696,"title":{},"body":{"index.html":{}}}],["console.log(\"hello",{"_index":1617,"title":{},"body":{"index.html":{}}}],["console.log(`oh",{"_index":1619,"title":{},"body":{"index.html":{}}}],["console.log(configs.get(env).showtrace",{"_index":1692,"title":{},"body":{"index.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"injectables/SimpleLogger.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/JsonResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["constructor(...args",{"_index":502,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["constructor(appbuilder",{"_index":500,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["constructor(appconfigs",{"_index":501,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["constructor(cfg",{"_index":1226,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["constructor(configs",{"_index":1371,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["constructor(context",{"_index":17,"title":{},"body":{"injectables/AstroboyContext.html":{},"injectables/Render.html":{}}}],["constructor(ctx",{"_index":84,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Request.html":{}}}],["constructor(data",{"_index":1120,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["constructor(private",{"_index":350,"title":{},"body":{"interfaces/Contract-2.html":{},"injectables/NunjunksEngine.html":{},"injectables/SimpleLogger.html":{}}}],["constructor(protected",{"_index":69,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["constructor(typescript",{"_index":111,"title":{},"body":{"classes/CancellationToken.html":{}}}],["constructor(value",{"_index":1068,"title":{},"body":{"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["content",{"_index":738,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["content(e",{"_index":1295,"title":{},"body":{"classes/RenderResult.html":{}}}],["content[1",{"_index":931,"title":{},"body":{"interfaces/IRouter.html":{}}}],["content[3",{"_index":933,"title":{},"body":{"interfaces/IRouter.html":{}}}],["context",{"_index":18,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"index.html":{}}}],["context(ctx",{"_index":676,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["context.contract",{"_index":348,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["contract",{"_index":51,"title":{"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["controller",{"_index":914,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/Request.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["controller(\"test",{"_index":1643,"title":{},"body":{"index.html":{}}}],["controller(prefix",{"_index":1307,"title":{},"body":{"interfaces/Request.html":{}}}],["controller.prototype[\"@router",{"_index":918,"title":{},"body":{"interfaces/IRouter.html":{}}}],["controller[internal_injector",{"_index":1312,"title":{},"body":{"interfaces/Request.html":{}}}],["controllerconstructor",{"_index":834,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["controllername",{"_index":940,"title":{},"body":{"interfaces/IRouter.html":{}}}],["controllers/test",{"_index":1659,"title":{},"body":{"index.html":{}}}],["convert",{"_index":1033,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["copies",{"_index":1725,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":1710,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyprototype",{"_index":839,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["copyprototype(ctor",{"_index":846,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["copyprototype(di_controller",{"_index":1328,"title":{},"body":{"interfaces/Request.html":{}}}],["copyright",{"_index":1699,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":1605,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1476,"title":{"coverage.html":{}},"body":{}}],["create",{"_index":231,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/FactoryContext.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{}}}],["create(config",{"_index":228,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["create(configs",{"_index":509,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["create(ctor",{"_index":508,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["createcmdconfig",{"_index":222,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["createcmdconfig(config",{"_index":206,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}}}],["createconfig",{"_index":251,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IENV.html":{},"interfaces/IPreProcess.html":{},"interfaces/IView.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createconfig(\"@astroboy.ts",{"_index":733,"title":{},"body":{"interfaces/IENV.html":{},"miscellaneous/variables.html":{}}}],["createconfig(\"demo",{"_index":1682,"title":{},"body":{"index.html":{}}}],["createconfig(\"view",{"_index":1054,"title":{},"body":{"interfaces/IView.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":528,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["createenv",{"_index":1225,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["createenv(configs",{"_index":1230,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["createfile",{"_index":920,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["createfromjson",{"_index":105,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"classes/NormalizedMessage.html":{}}}],["createfromjson(json",{"_index":1157,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["createfromjson(typescript",{"_index":121,"title":{},"body":{"classes/CancellationToken.html":{}}}],["createinjectmixin",{"_index":370,"title":{},"body":{"interfaces/Contract-3.html":{},"coverage.html":{}}}],["createinjectmixin(...args",{"_index":375,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createinstance",{"_index":1299,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["createinstance(target",{"_index":1311,"title":{},"body":{"interfaces/Request.html":{}}}],["createjsfile",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["createmiddleware",{"_index":816,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["createoptions",{"_index":249,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createoptions(\"global_error",{"_index":797,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["createoptions(\"router_options",{"_index":1065,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["createprogram",{"_index":297,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["createproxybydepts",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["createproxybydepts(target",{"_index":380,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createproxybykeys",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["createproxybykeys(target",{"_index":379,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["createrouter",{"_index":836,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["createrouter(sourcector",{"_index":845,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["createstamp",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["createstamp(date",{"_index":1387,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["createtsfile",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["createtsrouterfile",{"_index":910,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["createtype",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["createtype(type",{"_index":1392,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["ctor",{"_index":503,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["ctor(value",{"_index":1351,"title":{},"body":{"interfaces/Request.html":{}}}],["ctor.prototype",{"_index":505,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["ctorfolder",{"_index":879,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["ctorpath",{"_index":889,"title":{},"body":{"interfaces/IRouter.html":{}}}],["ctorpath}/${path",{"_index":905,"title":{},"body":{"interfaces/IRouter.html":{}}}],["ctx",{"_index":6,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ctx.body",{"_index":790,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["ctx.params",{"_index":1346,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.query",{"_index":1345,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.render(xpath",{"_index":1277,"title":{},"body":{"classes/RenderResult.html":{}}}],["ctx.request.body",{"_index":1342,"title":{},"body":{"interfaces/Request.html":{}}}],["ctx.status",{"_index":1287,"title":{},"body":{"classes/RenderResult.html":{}}}],["ctx.type",{"_index":1649,"title":{},"body":{"index.html":{}}}],["ctx.url",{"_index":1652,"title":{},"body":{"index.html":{}}}],["customroutefactory",{"_index":963,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["customroutefactory(configs)(prototype",{"_index":1011,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["cyan",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":717,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1753,"title":{},"body":{"index.html":{},"license.html":{}}}],["data",{"_index":330,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"index.html":{}}}],["data.character",{"_index":1183,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.code",{"_index":1173,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.content",{"_index":1177,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.file",{"_index":1179,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.line",{"_index":1181,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.setstamp(new",{"_index":1694,"title":{},"body":{"index.html":{}}}],["data.severity",{"_index":1175,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["data.source",{"_index":331,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["data.type",{"_index":1171,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["dataservice",{"_index":1689,"title":{},"body":{"index.html":{}}}],["date",{"_index":437,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{}}}],["date().gettime",{"_index":1695,"title":{},"body":{"index.html":{}}}],["date.now",{"_index":157,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["deal",{"_index":1714,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":1761,"title":{},"body":{"index.html":{},"license.html":{}}}],["debug",{"_index":172,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug(...msg",{"_index":1376,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["debug(title",{"_index":1373,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["debugname",{"_index":718,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["decamel",{"_index":1075,"title":{},"body":{"classes/JsonResult.html":{}}}],["decamel(key",{"_index":1095,"title":{},"body":{"classes/JsonResult.html":{}}}],["decamelize",{"_index":1076,"title":{},"body":{"classes/JsonResult.html":{},"dependencies.html":{}}}],["decidewhitespace",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["decidewhitespace(format",{"_index":1091,"title":{},"body":{"classes/JsonResult.html":{}}}],["declare",{"_index":94,"title":{},"body":{"classes/BaseClass.html":{},"interfaces/Request.html":{}}}],["decorated",{"_index":526,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["decorators",{"_index":408,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/Render.html":{},"index.html":{}}}],["decorators/controller",{"_index":840,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["decorators/injectable",{"_index":45,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-5.html":{},"injectables/NunjunksEngine.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{}}}],["deduplicate",{"_index":1113,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["deduplicate(messages",{"_index":1159,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["default",{"_index":230,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig.html":{},"injectables/SimpleLogger.html":{}}}],["defaultenv",{"_index":463,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultenv.routeralwaysbuild",{"_index":853,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultenv.routerautobuild",{"_index":851,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultenv.routerroot",{"_index":855,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["defaultextension",{"_index":1050,"title":{},"body":{"interfaces/IView.html":{}}}],["defaultglobalerror",{"_index":474,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultjsonresultoptions",{"_index":466,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultnunjunksoptions",{"_index":482,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/INunjunksRenderOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultrender",{"_index":781,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["defaultrender(error",{"_index":796,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["defaultrenderresultoptions",{"_index":472,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteroptions",{"_index":470,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultsimpleloggeroptions",{"_index":486,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultview",{"_index":465,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultviewengine",{"_index":1051,"title":{},"body":{"interfaces/IView.html":{}}}],["defineunit",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["delete",{"_index":1020,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["delete(path",{"_index":1021,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["deleteproperty`,`defineproperty",{"_index":364,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["demo",{"_index":1601,"title":{},"body":{"index.html":{}}}],["demo1",{"_index":1602,"title":{},"body":{"index.html":{}}}],["demo2",{"_index":1603,"title":{},"body":{"index.html":{}}}],["demo3",{"_index":1604,"title":{},"body":{"index.html":{}}}],["demo_options",{"_index":1681,"title":{},"body":{"index.html":{}}}],["demooptions",{"_index":1677,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":294,"title":{"dependencies.html":{}},"body":{"interfaces/ConfigurationFile.html":{}}}],["depts",{"_index":369,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["depts.map(i",{"_index":390,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["description",{"_index":53,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1003,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["descriptor.value",{"_index":1321,"title":{},"body":{"interfaces/Request.html":{}}}],["deserialize",{"_index":864,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["deserialize(json",{"_index":1423,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["deserialize(json.parse(json",{"_index":1421,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["deserializedefine",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["details",{"_index":200,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"injectables/SimpleLogger.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":714,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":603,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"miscellaneous/variables.html":{}}}],["df",{"_index":878,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.always",{"_index":885,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.approot",{"_index":886,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.ctorfolder",{"_index":880,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.enabled",{"_index":884,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.filetype",{"_index":887,"title":{},"body":{"interfaces/IRouter.html":{}}}],["df.routerfolder",{"_index":883,"title":{},"body":{"interfaces/IRouter.html":{}}}],["di",{"_index":362,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["di_controller",{"_index":1309,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.__proto__",{"_index":1336,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.prototype",{"_index":1332,"title":{},"body":{"interfaces/Request.html":{}}}],["di_controller.prototype.__proto__",{"_index":1334,"title":{},"body":{"interfaces/Request.html":{}}}],["diagnostic",{"_index":1133,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["dicontainer",{"_index":462,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["dicontainer.isfactory(inject",{"_index":667,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["different",{"_index":530,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["dipair",{"_index":492,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{}}}],["diration",{"_index":431,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["directinject",{"_index":663,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["directinject(type",{"_index":662,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["disposerequestscope",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["disposerequestscope(scope",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1721,"title":{},"body":{"index.html":{},"license.html":{}}}],["ditype",{"_index":606,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["di列表，可以动态merge",{"_index":760,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["di容器的注册api",{"_index":689,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["di解析的模式，默认：'native",{"_index":731,"title":{},"body":{"interfaces/IENV.html":{}}}],["di解析的模式，默认：`'native",{"_index":732,"title":{},"body":{"interfaces/IENV.html":{}}}],["documentation",{"_index":1713,"title":{},"body":{"index.html":{},"license.html":{}}}],["duration",{"_index":158,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["dynamic_params",{"_index":990,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["e",{"_index":225,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"miscellaneous/variables.html":{}}}],["e.name",{"_index":765,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["e.stack",{"_index":766,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["e1",{"_index":514,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["e2",{"_index":515,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["effects",{"_index":548,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["empty",{"_index":517,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["enable",{"_index":1628,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":195,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":444,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["endregion",{"_index":628,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["engine",{"_index":759,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["engine.render(errorpath",{"_index":1293,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.render(path",{"_index":1282,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.renderstring(errortpl",{"_index":1294,"title":{},"body":{"classes/RenderResult.html":{}}}],["engine.renderstring(tplstr",{"_index":1283,"title":{},"body":{"classes/RenderResult.html":{}}}],["engines",{"_index":761,"title":{},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["enoent",{"_index":143,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["entry",{"_index":256,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"classes/RealConfigCollection.html":{}}}],["entry.value",{"_index":260,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["enumerable",{"_index":1316,"title":{},"body":{"interfaces/Request.html":{}}}],["enumerations",{"_index":1593,"title":{"miscellaneous/enumerations.html":{}},"body":{}}],["env",{"_index":173,"title":{"interfaces/Env.html":{},"interfaces/Env-1.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/InnerCmdConfig.html":{},"classes/RenderResult.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":1243,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["equals",{"_index":1114,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["equals(messagea",{"_index":1162,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["equalto",{"_index":1206,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["err",{"_index":141,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"index.html":{}}}],["err.code",{"_index":142,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["error",{"_index":516,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error(\"no",{"_index":787,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["error.name",{"_index":768,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["errorpath",{"_index":1289,"title":{},"body":{"classes/RenderResult.html":{}}}],["errortpl",{"_index":1290,"title":{},"body":{"classes/RenderResult.html":{}}}],["errortype",{"_index":1131,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["errrotitle",{"_index":1285,"title":{},"body":{"classes/RenderResult.html":{}}}],["event",{"_index":1748,"title":{},"body":{"index.html":{},"license.html":{}}}],["events",{"_index":571,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["examples",{"_index":725,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["exclude",{"_index":288,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["exec",{"_index":205,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["exists",{"_index":323,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["existssync",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["existssync(filepath",{"_index":136,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["existssync(this.getcancellationfilepath",{"_index":165,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["export",{"_index":48,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["express",{"_index":1739,"title":{},"body":{"index.html":{},"license.html":{}}}],["extends",{"_index":202,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{}}}],["f",{"_index":951,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":545,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["factorycontext",{"_index":448,"title":{"interfaces/FactoryContext.html":{}},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{}}}],["failed",{"_index":795,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":1197,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["false",{"_index":144,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fatal",{"_index":1596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":315,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouter.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["file.join(\"\\n",{"_index":936,"title":{},"body":{"interfaces/IRouter.html":{}}}],["file[1",{"_index":932,"title":{},"body":{"interfaces/IRouter.html":{}}}],["file[3",{"_index":934,"title":{},"body":{"interfaces/IRouter.html":{}}}],["filepath",{"_index":310,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files",{"_index":300,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"index.html":{},"license.html":{}}}],["files.getdata(filepath).source",{"_index":328,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.has(filepath",{"_index":327,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.mutatedata(filepath",{"_index":329,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.remove(filepath",{"_index":324,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["files.setmtime(filepath",{"_index":320,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["filesregister",{"_index":301,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["fileswatcher",{"_index":303,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["filesystemloader",{"_index":1237,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["filesystemloader(this.configs.root",{"_index":1248,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["filetype",{"_index":198,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["final",{"_index":1340,"title":{},"body":{"interfaces/Request.html":{}}}],["finalinjectionsinit",{"_index":634,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["finally",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":313,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["fitness",{"_index":1744,"title":{},"body":{"index.html":{},"license.html":{}}}],["flag",{"_index":926,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fn",{"_index":712,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["folders",{"_index":899,"title":{},"body":{"interfaces/IRouter.html":{}}}],["folders.foreach(path",{"_index":901,"title":{},"body":{"interfaces/IRouter.html":{}}}],["following",{"_index":1198,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"index.html":{},"license.html":{}}}],["format",{"_index":1031,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":983,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["free",{"_index":1706,"title":{},"body":{"index.html":{},"license.html":{}}}],["frombody",{"_index":994,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["frombody(options",{"_index":995,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["fromjson",{"_index":1039,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromjson(json",{"_index":1036,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromobject",{"_index":1040,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromobject(json",{"_index":1038,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["fromparams",{"_index":988,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["fromparams(options",{"_index":989,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["fs",{"_index":130,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IRouter.html":{}}}],["fs.appendfilesync(_path",{"_index":935,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(_path",{"_index":923,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(routerfolder",{"_index":906,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.existssync(routerpath",{"_index":895,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.mkdirsync(routerfolder",{"_index":907,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.mkdirsync(routerpath",{"_index":894,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.pathlike",{"_index":137,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fs.readdirsync(ctorfolder",{"_index":908,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.readdirsync(ctorpath",{"_index":900,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.readfilesync(_path",{"_index":925,"title":{},"body":{"interfaces/IRouter.html":{}}}],["fs.statsync(filepath",{"_index":139,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{}}}],["fs.unlinksync(this.getcancellationfilepath",{"_index":169,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["fs.writefilesync(this.getcancellationfilepath",{"_index":168,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["function",{"_index":135,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract-3.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"injectables/SimpleLogger.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function(target",{"_index":802,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["functions",{"_index":1607,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1728,"title":{},"body":{"index.html":{},"license.html":{}}}],["genericdeserialize",{"_index":1416,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["genericdeserialize(json",{"_index":1424,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["genericdeserialize(json.parse(json",{"_index":1422,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["get(\"testget/:type",{"_index":1646,"title":{},"body":{"index.html":{}}}],["get(config",{"_index":211,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["get(merge",{"_index":208,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["get(path",{"_index":1012,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["get(target",{"_index":382,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["get(token",{"_index":258,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"classes/RealConfigCollection.html":{}}}],["getapp",{"_index":37,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["getcancellationfilepath",{"_index":106,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["getconfig",{"_index":12,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getconfig(...args",{"_index":23,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getconfigs",{"_index":1239,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["getctx",{"_index":33,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["getformattedcode",{"_index":1115,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["getid",{"_index":1365,"title":{},"body":{"injectables/Scope.html":{}}}],["getinjector",{"_index":1300,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["getinjector(ctx",{"_index":1310,"title":{},"body":{"interfaces/Request.html":{}}}],["getlib",{"_index":13,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getlib(...args",{"_index":25,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getloader",{"_index":1241,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["getmethodparamstype",{"_index":968,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["getmethodparamstype(prototype",{"_index":997,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["getpropertytype",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["getprototypeconstructor",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["getquery",{"_index":1641,"title":{},"body":{"index.html":{}}}],["getscopeid",{"_index":811,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["getscopeid(ctx",{"_index":817,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["getservice",{"_index":14,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getservice(...args",{"_index":27,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getserviceclass",{"_index":15,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getserviceclass(...args",{"_index":29,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["getshortscopeid",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1425,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getviews",{"_index":1267,"title":{},"body":{"injectables/Render.html":{}}}],["global",{"_index":789,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["global_error",{"_index":475,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globaldi",{"_index":455,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globaldi.get(configs",{"_index":818,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["globaldi.get(injectservice",{"_index":819,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["globaldi.register(token",{"_index":808,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["globalimplements",{"_index":838,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalimplements.get(controller",{"_index":919,"title":{},"body":{"interfaces/IRouter.html":{}}}],["globalimplements.get(ctor",{"_index":844,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["globalimplements.set(di_controller",{"_index":1329,"title":{},"body":{"interfaces/Request.html":{}}}],["granted",{"_index":1705,"title":{},"body":{"index.html":{},"license.html":{}}}],["green",{"_index":1404,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["handler",{"_index":772,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["has(target",{"_index":391,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["help",{"_index":191,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":558,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["hereby",{"_index":1704,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":1750,"title":{},"body":{"index.html":{},"license.html":{}}}],["host",{"_index":306,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["host.getsourcefile",{"_index":309,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["http://127.0.0.1:8001",{"_index":722,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ibaseinjectable",{"_index":800,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["ibodyresult",{"_index":873,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"miscellaneous/typealiases.html":{}}}],["icommonresulttype",{"_index":872,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{},"miscellaneous/typealiases.html":{}}}],["iconfigcollection",{"_index":241,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["icontext",{"_index":46,"title":{"interfaces/IContext.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{},"interfaces/IMiddlewaresScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":430,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"index.html":{}}}],["id2",{"_index":1656,"title":{},"body":{"index.html":{}}}],["idevcmdoptions",{"_index":709,"title":{"interfaces/IDevCmdOptions.html":{}},"body":{"interfaces/IDevCmdOptions.html":{},"coverage.html":{}}}],["ienv",{"_index":182,"title":{"interfaces/IENV.html":{},"interfaces/IENV-1.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ierrorhandler",{"_index":736,"title":{"interfaces/IErrorHandler.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{}}}],["iglobalerrorhandler",{"_index":770,"title":{"interfaces/IGlobalErrorHandler.html":{}},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iglobalsetoptions",{"_index":413,"title":{"interfaces/IGlobalSetOptions.html":{}},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["ignore",{"_index":71,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-1.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["iinjectableconfigs",{"_index":798,"title":{"interfaces/IInjectableConfigs.html":{}},"body":{"interfaces/IInjectableConfigs.html":{},"coverage.html":{}}}],["imiddlewaresscope",{"_index":809,"title":{"interfaces/IMiddlewaresScope.html":{}},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{}}}],["implement",{"_index":540,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["implements",{"_index":60,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"injectables/Scope.html":{},"classes/TypedSerializerCreator.html":{}}}],["implementtoken",{"_index":544,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["implementtype",{"_index":461,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["implicit",{"_index":293,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["implied",{"_index":1740,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["included",{"_index":1734,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":1716,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":384,"title":{"index.html":{}},"body":{"interfaces/Contract-3.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["indexable",{"_index":734,"title":{},"body":{"interfaces/IENV-1.html":{},"interfaces/IRouter.html":{}}}],["indexof(type",{"_index":1215,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["inend",{"_index":857,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["info",{"_index":1402,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/enumerations.html":{}}}],["init",{"_index":420,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"changelog.html":{},"index.html":{}}}],["init(id",{"_index":440,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["init.ts",{"_index":1623,"title":{},"body":{"index.html":{}}}],["initcommand",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["initconfigcollection",{"_index":681,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initcontextprovider",{"_index":673,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initinjections",{"_index":589,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initinjectservice",{"_index":677,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initoptions",{"_index":578,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["initrequestscope",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["initrequestscope(ctx",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initrouters",{"_index":490,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"coverage.html":{}}}],["initrouters(configs",{"_index":858,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["initrouters(this.configs.get(router_options",{"_index":633,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["inject",{"_index":665,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AstroboyContext.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{}},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["injectable(config",{"_index":801,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["injectabletoken",{"_index":543,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["injectditoken",{"_index":355,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["injecting",{"_index":550,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["injector",{"_index":450,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injector.get(configs",{"_index":1356,"title":{},"body":{"interfaces/Request.html":{}}}],["injector.get(configs).get(static_resolver",{"_index":1324,"title":{},"body":{"interfaces/Request.html":{}}}],["injector.get(context",{"_index":778,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["injector.get(dataservice",{"_index":1693,"title":{},"body":{"index.html":{}}}],["injector.get(engines[key",{"_index":1280,"title":{},"body":{"classes/RenderResult.html":{}}}],["injector.get(render",{"_index":777,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["injector.get(simplelogger",{"_index":793,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["injector.get>(context",{"_index":1284,"title":{},"body":{"classes/RenderResult.html":{}}}],["injectscope",{"_index":245,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"index.html":{}}}],["injectscope(async",{"_index":1691,"title":{},"body":{"index.html":{}}}],["injectscope.new",{"_index":626,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["injectscope.scope",{"_index":624,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["injectscope.singleton",{"_index":622,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"index.html":{}}}],["injectservice",{"_index":357,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{}}}],["injectservice.contract",{"_index":358,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["injecttoken",{"_index":459,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{}}}],["innerbundle",{"_index":685,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["innercmdconfig",{"_index":201,"title":{"interfaces/InnerCmdConfig.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["innerrouteroptions",{"_index":468,"title":{"interfaces/InnerRouterOptions.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inspect",{"_index":174,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inspector",{"_index":723,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":1610,"title":{},"body":{"index.html":{}}}],["instance",{"_index":529,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["instanceof",{"_index":378,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["interface",{"_index":50,"title":{"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{}},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":1608,"title":{},"body":{"index.html":{}}}],["internal",{"_index":741,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["internal_dispose",{"_index":361,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{}}}],["internal_injector",{"_index":1304,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inunjunksrenderoptions",{"_index":820,"title":{"interfaces/INunjunksRenderOptions.html":{}},"body":{"interfaces/INunjunksRenderOptions.html":{},"injectables/NunjunksEngine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":675,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["invokeservicemethod",{"_index":16,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/IContext.html":{}}}],["invokeservicemethod(...args",{"_index":31,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{}}}],["invokeservicemethod(pkgname",{"_index":703,"title":{},"body":{"interfaces/IContext.html":{}}}],["ioc",{"_index":1667,"title":{},"body":{"index.html":{}}}],["ipreprocess",{"_index":829,"title":{"interfaces/IPreProcess.html":{}},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["iresult",{"_index":865,"title":{"interfaces/IResult.html":{}},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IViewEngine.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["iresultscope",{"_index":869,"title":{"interfaces/IResultScope.html":{}},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"coverage.html":{}}}],["iroutefactory",{"_index":965,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["irouter",{"_index":874,"title":{"interfaces/IRouter.html":{}},"body":{"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["iroutercmdoptions",{"_index":944,"title":{"interfaces/IRouterCmdOptions.html":{}},"body":{"interfaces/IRouterCmdOptions.html":{},"coverage.html":{}}}],["iroutermagic",{"_index":958,"title":{"interfaces/IRouterMagic.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["isalways",{"_index":949,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["iscancellationrequested",{"_index":107,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["iscancelled",{"_index":101,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["iscustomclassinstance",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["isdiagnostictype",{"_index":1116,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isenabled",{"_index":946,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["iserrorseverity",{"_index":1117,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isimpleloggeroptions",{"_index":1023,"title":{"interfaces/ISimpleLoggerOptions.html":{}},"body":{"interfaces/ISimpleLoggerOptions.html":{},"injectables/SimpleLogger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isindex",{"_index":1008,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["islinttype",{"_index":1118,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["isobj",{"_index":422,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["isplainobject",{"_index":404,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["isplainobject(p1",{"_index":425,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["istaticserializeoptions",{"_index":1029,"title":{"interfaces/IStaticSerializeOptions.html":{}},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["istatictypedresolver",{"_index":1032,"title":{"interfaces/IStaticTypedResolver.html":{}},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["iswarningseverity",{"_index":1119,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["it's",{"_index":316,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["iview",{"_index":1047,"title":{"interfaces/IView.html":{}},"body":{"interfaces/IView.html":{},"coverage.html":{}}}],["iviewengine",{"_index":744,"title":{"interfaces/IViewEngine.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{}}}],["javascript",{"_index":538,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["js",{"_index":199,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":122,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"classes/TypedSerializerCreator.html":{}}}],["json.cancellationfilename",{"_index":153,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["json.iscancelled",{"_index":154,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["json.stringify",{"_index":1089,"title":{},"body":{"classes/JsonResult.html":{},"classes/TypedSerializerCreator.html":{}}}],["json_result_options",{"_index":467,"title":{},"body":{"interfaces/FactoryContext.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresolvers",{"_index":411,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresult",{"_index":1066,"title":{"classes/JsonResult.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["jsonresultoptions",{"_index":1077,"title":{"interfaces/JsonResultOptions.html":{}},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonresult实现了iresult接口，提供将json内容编程化写入body的能力，同时提供了configs",{"_index":1651,"title":{},"body":{"index.html":{}}}],["jsontemplate",{"_index":1081,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["jsontplkey",{"_index":1082,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["json对象序列化写入body",{"_index":1072,"title":{},"body":{"classes/JsonResult.html":{}}}],["key",{"_index":194,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["key01",{"_index":1679,"title":{},"body":{"index.html":{}}}],["key02",{"_index":1680,"title":{},"body":{"index.html":{}}}],["keyresolver",{"_index":1080,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["keystr",{"_index":423,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["kind",{"_index":1738,"title":{},"body":{"index.html":{},"license.html":{}}}],["koa",{"_index":44,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/Request.html":{}}}],["koa.application",{"_index":9,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["koa.context",{"_index":7,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/IContext.html":{}}}],["koa:application",{"_index":727,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["languageversion",{"_index":311,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["lastcancellationchecktime",{"_index":102,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["level",{"_index":1026,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1754,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":1751,"title":{},"body":{"index.html":{},"license.html":{}}}],["license",{"_index":1698,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":1717,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":1741,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":1102,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["line:no",{"_index":292,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["lint",{"_index":1135,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["linteroptions",{"_index":272,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["literal",{"_index":273,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/Contract-4.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{}}}],["loadconfig",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["loader",{"_index":1224,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["loadlinterconfig",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["loadlinterconfig(configfile",{"_index":289,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["loadprogramconfig",{"_index":276,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["lodash",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["lodash/get",{"_index":185,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["lodash/isplainobject",{"_index":405,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["lodash/merge",{"_index":1272,"title":{},"body":{"classes/RenderResult.html":{}}}],["lodash/set",{"_index":407,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{}}}],["log",{"_index":1369,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["log(level",{"_index":1379,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger",{"_index":488,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["logger.debug(errrotitle",{"_index":1286,"title":{},"body":{"classes/RenderResult.html":{}}}],["logger.trace(\"global_error",{"_index":794,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["logger/base.ts",{"_index":1595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger/logger.ts",{"_index":1367,"title":{},"body":{"injectables/SimpleLogger.html":{},"coverage.html":{}}}],["logger/logger.ts:39",{"_index":1372,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:45",{"_index":1380,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:54",{"_index":1382,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:55",{"_index":1383,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:56",{"_index":1385,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:60",{"_index":1374,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:61",{"_index":1375,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/logger.ts:62",{"_index":1377,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["logger/options.ts",{"_index":1025,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lstripblocks",{"_index":824,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":720,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["magenta",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["magic_content",{"_index":969,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["magic_content.get(prototype",{"_index":984,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["magic_content.set",{"_index":985,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["map",{"_index":254,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":1052,"title":{},"body":{"interfaces/IView.html":{}}}],["matching",{"_index":80,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(time",{"_index":159,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["means",{"_index":551,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["memberof",{"_index":269,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{}}}],["merchantability",{"_index":1743,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":232,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"classes/RenderResult.html":{},"interfaces/RouterConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["merge(merge",{"_index":229,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["mergecmdconfig",{"_index":223,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["mergecmdconfig(merge",{"_index":207,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}}}],["messagea",{"_index":1140,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.character",{"_index":1195,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.code",{"_index":1202,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.content",{"_index":1204,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messagea.severity",{"_index":1190,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb",{"_index":1138,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.character",{"_index":1196,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.code",{"_index":1203,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.content",{"_index":1205,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.file",{"_index":1188,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.line",{"_index":1193,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.severity",{"_index":1191,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messageb.type",{"_index":1186,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messages",{"_index":1161,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["messages.sort(normalizedmessage.compare).filter((message",{"_index":1208,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["messages[index",{"_index":1210,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["metadata",{"_index":670,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["method",{"_index":697,"title":{},"body":{"interfaces/IContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["methodget(@fromparams",{"_index":1647,"title":{},"body":{"index.html":{}}}],["methodname",{"_index":708,"title":{},"body":{"interfaces/IContext.html":{}}}],["methodpost",{"_index":1655,"title":{},"body":{"index.html":{}}}],["middleware",{"_index":815,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{}}}],["middlewares",{"_index":859,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["miscellaneous",{"_index":1592,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":1697,"title":{},"body":{"index.html":{},"license.html":{}}}],["mock",{"_index":175,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1719,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":493,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/Request.html":{}}}],["module.exports",{"_index":1625,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1762,"title":{"modules.html":{}},"body":{}}],["mogician",{"_index":56,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{}}}],["more",{"_index":162,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["ms",{"_index":388,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["msg",{"_index":1378,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["mtime",{"_index":317,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["n",{"_index":1087,"title":{},"body":{"classes/JsonResult.html":{}}}],["name",{"_index":187,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":49,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{},"injectables/Scope.html":{},"changelog.html":{}}}],["native",{"_index":604,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":152,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RouteArgument.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newenvs",{"_index":210,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["next",{"_index":291,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IMiddlewaresScope.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nocache",{"_index":1249,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["node",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.mogician",{"_index":1701,"title":{},"body":{"index.html":{},"license.html":{}}}],["node_env",{"_index":192,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["node_modules/.bin/atc",{"_index":1633,"title":{},"body":{"index.html":{}}}],["node_port",{"_index":193,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"miscellaneous/variables.html":{}}}],["nodemon",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["noninfringement",{"_index":1747,"title":{},"body":{"index.html":{},"license.html":{}}}],["normalizedmessage",{"_index":1098,"title":{"classes/NormalizedMessage.html":{}},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{}}}],["normalizedmessage(json",{"_index":1184,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparenumbers",{"_index":1194,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparenumbers(messagea.line",{"_index":1192,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareoptionalstrings",{"_index":1201,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareoptionalstrings(messagea.file",{"_index":1187,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.compareseverities",{"_index":1189,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.comparetypes(messagea.type",{"_index":1185,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.equals(message",{"_index":1209,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.severity_error",{"_index":1220,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.severity_warning",{"_index":1219,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.type_diagnostic",{"_index":1214,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessage.type_lint",{"_index":1213,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["normalizedmessagejson",{"_index":1121,"title":{"interfaces/NormalizedMessageJson.html":{}},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{}}}],["notice",{"_index":1732,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":1609,"title":{},"body":{"index.html":{}}}],["null",{"_index":359,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/TypedSerializerCreator.html":{}}}],["number",{"_index":118,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-5.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/InnerCmdConfig.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/Scope.html":{},"index.html":{}}}],["numbera",{"_index":1144,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["numberb",{"_index":1142,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["nunjucks",{"_index":1244,"title":{},"body":{"injectables/NunjunksEngine.html":{},"dependencies.html":{}}}],["nunjunks",{"_index":758,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["nunjunks_options",{"_index":481,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nunjunksengine",{"_index":480,"title":{"injectables/NunjunksEngine.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":398,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"injectables/Render.html":{},"classes/TypedSerializerCreator.html":{}}}],["object",{"_index":366,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":389,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["object.defineproperty",{"_index":1331,"title":{},"body":{"interfaces/Request.html":{}}}],["object.defineproperty(prototype",{"_index":1313,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertydescriptor(prototype",{"_index":1319,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertydescriptor(target.prototype",{"_index":1333,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertynames(prototype).foreach(name",{"_index":1318,"title":{},"body":{"interfaces/Request.html":{}}}],["object.getownpropertynames(target.prototype).foreach(name",{"_index":1330,"title":{},"body":{"interfaces/Request.html":{}}}],["object.keys(ms",{"_index":386,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["obtaining",{"_index":1709,"title":{},"body":{"index.html":{},"license.html":{}}}],["old",{"_index":338,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["oldenvs",{"_index":209,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["oldfile",{"_index":924,"title":{},"body":{"interfaces/IRouter.html":{}}}],["oldfile.tostring",{"_index":928,"title":{},"body":{"interfaces/IRouter.html":{}}}],["oldprogram",{"_index":304,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["on(\"error",{"_index":648,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["on(\"start",{"_index":641,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["once",{"_index":163,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["ondeverror",{"_index":762,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["onend",{"_index":888,"title":{},"body":{"interfaces/IRouter.html":{}}}],["onerror",{"_index":312,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["onerror(error",{"_index":649,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["onstart",{"_index":639,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{}}}],["onstart(app",{"_index":647,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["open",{"_index":850,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["option(...args",{"_index":513,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["option(router_options",{"_index":1666,"title":{},"body":{"index.html":{}}}],["option(token",{"_index":512,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["optionassign",{"_index":456,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{}}}],["optionassign(this.configs",{"_index":523,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["options",{"_index":188,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.format",{"_index":1420,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["options.type",{"_index":1419,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["options/typed",{"_index":1302,"title":{},"body":{"interfaces/Request.html":{}}}],["opts",{"_index":1273,"title":{},"body":{"classes/RenderResult.html":{},"index.html":{}}}],["opts.ondeverror",{"_index":1292,"title":{},"body":{"classes/RenderResult.html":{}}}],["opts.onerror",{"_index":1291,"title":{},"body":{"classes/RenderResult.html":{}}}],["os",{"_index":131,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["others",{"_index":376,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["others[0",{"_index":377,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["otherwise",{"_index":1757,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":1759,"title":{},"body":{"index.html":{},"license.html":{}}}],["override",{"_index":72,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["overview",{"_index":1763,"title":{"overview.html":{}},"body":{}}],["ownkeys(target",{"_index":387,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["p",{"_index":653,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["p.endswith(\".d.ts",{"_index":913,"title":{},"body":{"interfaces/IRouter.html":{}}}],["p1",{"_index":371,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p2",{"_index":372,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p3",{"_index":373,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["p4",{"_index":374,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["package",{"_index":1441,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["packagename",{"_index":706,"title":{},"body":{"interfaces/IContext.html":{}}}],["param",{"_index":267,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["params",{"_index":977,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"index.html":{}}}],["params[index",{"_index":1347,"title":{},"body":{"interfaces/Request.html":{}}}],["paramsfactory",{"_index":970,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/typealiases.html":{}}}],["paramsoptions",{"_index":973,"title":{"interfaces/ParamsOptions.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["paramsresolver",{"_index":972,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/typealiases.html":{}}}],["parsed",{"_index":283,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["partial",{"_index":399,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1745,"title":{},"body":{"index.html":{},"license.html":{}}}],["partreset",{"_index":457,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{}}}],["path",{"_index":132,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IViewEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["path)(prototype",{"_index":1006,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["path.dirname(configfile",{"_index":286,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["path.indexof",{"_index":902,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.join(__dirname",{"_index":1638,"title":{},"body":{"index.html":{}}}],["path.join(os.tmpdir",{"_index":155,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["path.resolve(__dirname",{"_index":1616,"title":{},"body":{"index.html":{}}}],["path.resolve(base",{"_index":890,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.resolve(process.cwd",{"_index":827,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["path.resolve(routerbase",{"_index":892,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path.split(\".\")[0",{"_index":916,"title":{},"body":{"interfaces/IRouter.html":{}}}],["path`或`tplstr",{"_index":747,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["paths",{"_index":1440,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined",{"_index":755,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["path将会拼装成绝对路径下到对应的渲染引擎。默认：undefined",{"_index":1297,"title":{},"body":{"interfaces/RenderResultOptions.html":{}}}],["path或tplstr",{"_index":742,"title":{},"body":{"interfaces/IErrorHandler.html":{}}}],["path，默认：`undefined",{"_index":746,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["path，默认：undefined",{"_index":743,"title":{},"body":{"interfaces/IErrorHandler.html":{}}}],["permission",{"_index":1703,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":1726,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":1708,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":1727,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":532,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["pipes",{"_index":564,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["pkgenv",{"_index":1368,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["pkgname",{"_index":705,"title":{},"body":{"interfaces/IContext.html":{}}}],["please",{"_index":553,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["plugins",{"_index":1639,"title":{},"body":{"index.html":{}}}],["plugins/nunjunks",{"_index":483,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"interfaces/RenderResultOptions.html":{}}}],["plugins/simple",{"_index":487,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{}}}],["plugins/typed",{"_index":478,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["port",{"_index":711,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1736,"title":{},"body":{"index.html":{},"license.html":{}}}],["post",{"_index":1017,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"index.html":{}}}],["post(\"post/:type",{"_index":1654,"title":{},"body":{"index.html":{}}}],["post(path",{"_index":1018,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["postdata",{"_index":1642,"title":{},"body":{"index.html":{}}}],["pre",{"_index":728,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":1306,"title":{},"body":{"interfaces/Request.html":{}}}],["preinit",{"_index":629,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["preinitfn",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["preinitfn(configs",{"_index":856,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["preinject",{"_index":651,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["preinject(type",{"_index":650,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["prescopeds",{"_index":496,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["presingletons",{"_index":495,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["preuniques",{"_index":497,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["prevent",{"_index":556,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["priorities",{"_index":1211,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priorities[0",{"_index":1216,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priorities[1",{"_index":1217,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["priority",{"_index":1626,"title":{},"body":{"index.html":{}}}],["private",{"_index":99,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"index.html":{}}}],["probably",{"_index":322,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["process.env",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.__transpile",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.__tsconfig",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":740,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{}}}],["production",{"_index":782,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":339,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig",{"_index":298,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig.filenames",{"_index":334,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["programconfig.options",{"_index":335,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["promise",{"_index":812,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":365,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propertydescriptor",{"_index":1004,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propertykey",{"_index":971,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propkey",{"_index":991,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["propkey).params.push",{"_index":998,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["protected",{"_index":360,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["prototype",{"_index":805,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["prototype.__valid",{"_index":807,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["prototype[\"@router",{"_index":1317,"title":{},"body":{"interfaces/Request.html":{}}}],["provided",{"_index":788,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideinvoker",{"_index":813,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"miscellaneous/typealiases.html":{}}}],["proxy",{"_index":363,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["proxy(target",{"_index":381,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["proxyurl",{"_index":721,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":62,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["publish",{"_index":1720,"title":{},"body":{"index.html":{},"license.html":{}}}],["pure",{"_index":546,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["purpose",{"_index":1746,"title":{},"body":{"index.html":{},"license.html":{}}}],["put",{"_index":1014,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["put(path",{"_index":1015,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["r",{"_index":927,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"miscellaneous/variables.html":{}}}],["rc",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1434,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["rc.12",{"_index":1451,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":1475,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":1474,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["rc.18",{"_index":1467,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["rc.20",{"_index":1466,"title":{},"body":{"changelog.html":{}}}],["rc.21",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["rc.22",{"_index":1473,"title":{},"body":{"changelog.html":{}}}],["rc.23",{"_index":1465,"title":{},"body":{"changelog.html":{}}}],["rc.24",{"_index":1464,"title":{},"body":{"changelog.html":{}}}],["rc.27",{"_index":1662,"title":{},"body":{"index.html":{}}}],["rc.28",{"_index":1462,"title":{},"body":{"changelog.html":{}}}],["rc.29",{"_index":1461,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["rc.30",{"_index":1471,"title":{},"body":{"changelog.html":{}}}],["rc.31",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["rc.35",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["rc.37",{"_index":1457,"title":{},"body":{"changelog.html":{}}}],["rc.39",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["rconfig",{"_index":224,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-2.html":{}}}],["re",{"_index":336,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["readconfigs(configs",{"_index":595,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/Render.html":{},"injectables/Scope.html":{}}}],["readonlyconfigs",{"_index":243,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"classes/RealConfigCollection.html":{}}}],["readruntimeenv(app",{"_index":601,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["realconfigcollection",{"_index":253,"title":{"classes/RealConfigCollection.html":{}},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{}}}],["realgetsourcefile",{"_index":308,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["realgetsourcefile(filepath",{"_index":332,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["rebuild",{"_index":950,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":1397,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["region",{"_index":575,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["register",{"_index":326,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["rename",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":415,"title":{"injectables/Render.html":{}},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render(name",{"_index":1232,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["render(path",{"_index":1057,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["render.contract",{"_index":416,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["render.options",{"_index":774,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{}}}],["render.setview(\"__viewerror",{"_index":783,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["render_result_options",{"_index":471,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresult",{"_index":749,"title":{"classes/RenderResult.html":{}},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresultoptions",{"_index":750,"title":{"interfaces/RenderResultOptions.html":{}},"body":{"interfaces/IErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderresult配置token",{"_index":769,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["renderstring",{"_index":1056,"title":{},"body":{"interfaces/IViewEngine.html":{},"injectables/NunjunksEngine.html":{}}}],["renderstring(path",{"_index":1059,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["renderstring(tpl",{"_index":1234,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["replace(/\\//g",{"_index":942,"title":{},"body":{"interfaces/IRouter.html":{}}}],["replace(`${baserouter",{"_index":941,"title":{},"body":{"interfaces/IRouter.html":{}}}],["request",{"_index":531,"title":{"interfaces/Request.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["requestcancellation",{"_index":108,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["request中获取body",{"_index":993,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["request中获取params和query",{"_index":987,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["require(\"path",{"_index":1630,"title":{},"body":{"index.html":{}}}],["require(\"ts",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require(\"tslint",{"_index":295,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["require(\"uuid/v4",{"_index":134,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["require(`${ctorpath}/${commonname",{"_index":917,"title":{},"body":{"interfaces/IRouter.html":{}}}],["reset",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resetdiresolver",{"_index":605,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["resolvebundles",{"_index":610,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["resolvedepts",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["resolveinjections",{"_index":619,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["resolvekeys",{"_index":409,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"classes/JsonResult.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["resolvekeys(jsonresolvers.snakecase",{"_index":427,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["resolvekeys(r",{"_index":1090,"title":{},"body":{"classes/JsonResult.html":{}}}],["resolvemethodresult",{"_index":1354,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvemethodresult(result",{"_index":1327,"title":{},"body":{"interfaces/Request.html":{}}}],["resolveparamtype",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["resolveparamtype(type",{"_index":1000,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["resolveparamtype(types[index",{"_index":999,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["resolver",{"_index":978,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["resolver(ctx.request.body",{"_index":1343,"title":{},"body":{"interfaces/Request.html":{}}}],["resolveroutemethodparams",{"_index":1325,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvestatictype",{"_index":1348,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["resolvestatictype(stac",{"_index":1344,"title":{},"body":{"interfaces/Request.html":{}}}],["restriction",{"_index":1715,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":79,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"interfaces/RouterOptions.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result).toresult",{"_index":1355,"title":{},"body":{"interfaces/Request.html":{}}}],["result.toresult",{"_index":792,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":956,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["results/json",{"_index":412,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IPreProcess.html":{},"injectables/Render.html":{}}}],["results/render",{"_index":773,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"classes/JsonResult.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":268,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["rights",{"_index":1718,"title":{},"body":{"index.html":{},"license.html":{}}}],["rimraf",{"_index":877,"title":{},"body":{"interfaces/IRouter.html":{},"dependencies.html":{}}}],["rimraf.sync(routerpath",{"_index":893,"title":{},"body":{"interfaces/IRouter.html":{}}}],["root",{"_index":756,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IView.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root_path",{"_index":1615,"title":{},"body":{"index.html":{}}}],["root}/${xpath",{"_index":1281,"title":{},"body":{"classes/RenderResult.html":{}}}],["route",{"_index":981,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"index.html":{}}}],["route_magic",{"_index":1002,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["route_query",{"_index":992,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["routeargument",{"_index":976,"title":{"interfaces/RouteArgument.html":{}},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{}}}],["routeparams",{"_index":1320,"title":{},"body":{"interfaces/Request.html":{}}}],["routeparams.foreach(i",{"_index":1338,"title":{},"body":{"interfaces/Request.html":{}}}],["router",{"_index":837,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router(prefix)(target",{"_index":1308,"title":{},"body":{"interfaces/Request.html":{}}}],["router.js",{"_index":930,"title":{},"body":{"interfaces/IRouter.html":{}}}],["router.routes[key",{"_index":982,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router.ts",{"_index":1472,"title":{},"body":{"changelog.html":{}}}],["router/dist/decorators/route.factory",{"_index":964,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router/dist/decorators/utils",{"_index":967,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router/dist/metadata",{"_index":835,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["router_options",{"_index":469,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeralwaysbuild",{"_index":852,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routerautobuild",{"_index":849,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routerbase",{"_index":882,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerconfig",{"_index":184,"title":{"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{}},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["routerfolder",{"_index":881,"title":{},"body":{"interfaces/IRouter.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["routermeta",{"_index":960,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["routeroptions",{"_index":1062,"title":{"interfaces/RouterOptions.html":{}},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{}}}],["routerpath",{"_index":891,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerpath}/${commonname}.${filetype",{"_index":922,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerpath}/${path",{"_index":904,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routerroot",{"_index":854,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routers",{"_index":176,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Config.html":{},"interfaces/Config-1.html":{},"interfaces/Env.html":{},"interfaces/Env-1.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterConfig-2.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routers[`${commonname}.${filetype",{"_index":938,"title":{},"body":{"interfaces/IRouter.html":{}}}],["routers[path",{"_index":903,"title":{},"body":{"interfaces/IRouter.html":{}}}],["router文件的文件类型，默认：'js",{"_index":833,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/RouterOptions.html":{}}}],["router文件的文件类型，默认：`'js",{"_index":848,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{}}}],["router的createrouter",{"_index":841,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["routes",{"_index":961,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["routes部分由astroboy",{"_index":1305,"title":{},"body":{"interfaces/Request.html":{}}}],["rs",{"_index":1227,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["run",{"_index":572,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{},"index.html":{}}}],["runtime",{"_index":539,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["sb",{"_index":263,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["scope",{"_index":433,"title":{"injectables/Scope.html":{}},"body":{"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"injectables/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope.contract",{"_index":434,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["scoped",{"_index":524,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["scoped(...args",{"_index":559,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["scoped(srv",{"_index":535,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["scopeds",{"_index":687,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["scoped），简单的描述来说，一个服务在同一个请求流程中总是保持单例状态，并在请求结束后释放。scoped",{"_index":1674,"title":{},"body":{"index.html":{}}}],["scopeid",{"_index":354,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/Contract-5.html":{},"interfaces/FactoryContext.html":{},"interfaces/IMiddlewaresScope.html":{},"injectables/Scope.html":{}}}],["sell",{"_index":1724,"title":{},"body":{"index.html":{},"license.html":{}}}],["sendinjection(token",{"_index":666,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["serialize",{"_index":863,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/TypedSerializerCreator.html":{}}}],["serialize(obj",{"_index":1418,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serialize.options",{"_index":1303,"title":{},"body":{"interfaces/Request.html":{}}}],["serialize.options.ts",{"_index":1528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serializedefine",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["serializer",{"_index":479,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["serializer/core.ts",{"_index":1411,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{}}}],["serializer/core.ts:17",{"_index":1414,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:29",{"_index":1412,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:35",{"_index":1415,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/core.ts:43",{"_index":1413,"title":{},"body":{"classes/TypedSerializerCreator.html":{}}}],["serializer/defines.ts",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["serializer/index.ts",{"_index":1537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":494,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server(ctor",{"_index":510,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["server.create",{"_index":1665,"title":{},"body":{"index.html":{}}}],["server.create(astroboy",{"_index":1614,"title":{},"body":{"index.html":{}}}],["server.prototype.initinjections",{"_index":577,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["server.prototype.initoptions",{"_index":588,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["serverbundle",{"_index":684,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["serverinit",{"_index":1523,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":525,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IContext.html":{}}}],["servicename",{"_index":707,"title":{},"body":{"interfaces/IContext.html":{}}}],["services",{"_index":527,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{}}}],["services/astroboycontext",{"_index":453,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{}}}],["services/baseclass",{"_index":860,"title":{},"body":{"interfaces/IPreProcess.html":{}}}],["services/configs",{"_index":476,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IENV.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"interfaces/IView.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/JsonResultOptions.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouterOptions.html":{},"injectables/SimpleLogger.html":{}}}],["services/context",{"_index":451,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["services/data",{"_index":1690,"title":{},"body":{"index.html":{}}}],["services/injector",{"_index":452,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/Request.html":{}}}],["services/render",{"_index":489,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{}}}],["services/scope",{"_index":454,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["set",{"_index":406,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IRouterCmdOptions.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"miscellaneous/variables.html":{}}}],["set(n",{"_index":1088,"title":{},"body":{"classes/JsonResult.html":{}}}],["set(token",{"_index":255,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["setcolor",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["setscopeid",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["setview",{"_index":395,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(...args",{"_index":421,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(key",{"_index":401,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["setview(obj",{"_index":396,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["severity",{"_index":1103,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["severity_error",{"_index":1104,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severity_warning",{"_index":1105,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severitya",{"_index":1152,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severityb",{"_index":1150,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["severityb].map(type",{"_index":1218,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["shall",{"_index":1733,"title":{},"body":{"index.html":{},"license.html":{}}}],["shit",{"_index":1620,"title":{},"body":{"index.html":{}}}],["shouldn't",{"_index":518,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["show",{"_index":954,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["showrouters",{"_index":953,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["showroutes",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["showtrace",{"_index":1631,"title":{},"body":{"index.html":{}}}],["showvalue",{"_index":1672,"title":{},"body":{"index.html":{}}}],["side",{"_index":547,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["simple_logger_options",{"_index":485,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"interfaces/ISimpleLoggerOptions.html":{},"injectables/SimpleLogger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["simplelogger",{"_index":484,"title":{"injectables/SimpleLogger.html":{}},"body":{"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"injectables/SimpleLogger.html":{},"coverage.html":{}}}],["simpleloglevel",{"_index":1027,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/enumerations.html":{}}}],["simpleloglevel.debug",{"_index":1403,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["simpleloglevel.error",{"_index":1396,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["simpleloglevel.fatal",{"_index":1395,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["simpleloglevel.info",{"_index":1400,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["simpleloglevel.warn",{"_index":1028,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":561,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{}}}],["singleton(...args",{"_index":566,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["singleton(srv",{"_index":565,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["singletons",{"_index":686,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["situation",{"_index":557,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["snakecase",{"_index":1096,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snakecase(key",{"_index":1094,"title":{},"body":{"classes/JsonResult.html":{}}}],["software",{"_index":1711,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":325,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["sourcector",{"_index":843,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{}}}],["split(\"\\n",{"_index":929,"title":{},"body":{"interfaces/IRouter.html":{}}}],["src/.../base.ts",{"_index":1594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../baseclass.ts",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../check.ts",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configs.ts",{"_index":1772,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../controller.ts",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../core.ts",{"_index":1771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../env.config.ts",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.options.ts",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../init.ts",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iresult.ts",{"_index":1766,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../json.options.ts",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json.ts",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../normalizedmessage.ts",{"_index":1769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../options.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.ts",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../render.options.ts",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route.ts",{"_index":1770,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../router.options.ts",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1768,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../typed",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1767,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../view.config.ts",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/builders.ts",{"_index":875,"title":{},"body":{"interfaces/IRouter.html":{},"coverage.html":{}}}],["src/builders.ts:7",{"_index":876,"title":{},"body":{"interfaces/IRouter.html":{}}}],["src/cmd/base",{"_index":226,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Env.html":{},"interfaces/RouterConfig.html":{}}}],["src/cmd/base.ts",{"_index":171,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{}}}],["src/cmd/base.ts:13",{"_index":735,"title":{},"body":{"interfaces/IENV-1.html":{}}}],["src/cmd/cmd.ts",{"_index":234,"title":{},"body":{"interfaces/Config-1.html":{},"interfaces/Env-1.html":{},"interfaces/RouterConfig-2.html":{},"coverage.html":{}}}],["src/cmd/dev/actions.ts",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["src/cmd/dev/check.ts",{"_index":1488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/dev/options.ts",{"_index":710,"title":{},"body":{"interfaces/IDevCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/index.ts",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["src/cmd/init.ts",{"_index":1494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/register.ts",{"_index":1495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/router/actions.ts",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["src/cmd/router/options.ts",{"_index":945,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cmd/utils/cancellationtoken.ts",{"_index":98,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"coverage.html":{}}}],["src/cmd/utils/cancellationtoken.ts:26",{"_index":117,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:27",{"_index":116,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:28",{"_index":114,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:39",{"_index":124,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:50",{"_index":129,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:57",{"_index":125,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:61",{"_index":126,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:78",{"_index":128,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:84",{"_index":127,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/cancellationtoken.ts:89",{"_index":119,"title":{},"body":{"classes/CancellationToken.html":{}}}],["src/cmd/utils/loadconfig.ts",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["src/cmd/utils/normalizedmessage.ts",{"_index":1099,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cmd/utils/normalizedmessage.ts:106",{"_index":1151,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:117",{"_index":1147,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:131",{"_index":1143,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:144",{"_index":1169,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:15",{"_index":1134,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:156",{"_index":1165,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:16",{"_index":1136,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:160",{"_index":1167,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:164",{"_index":1164,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:168",{"_index":1166,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:172",{"_index":1168,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:19",{"_index":1128,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:20",{"_index":1130,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:22",{"_index":1132,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:23",{"_index":1123,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:24",{"_index":1127,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:25",{"_index":1124,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:26",{"_index":1125,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:27",{"_index":1126,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:28",{"_index":1122,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:40",{"_index":1158,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:44",{"_index":1139,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:80",{"_index":1163,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:87",{"_index":1160,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/normalizedmessage.ts:95",{"_index":1155,"title":{},"body":{"classes/NormalizedMessage.html":{}}}],["src/cmd/utils/typecheck.ts",{"_index":271,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"coverage.html":{}}}],["src/configs/env.config.ts",{"_index":730,"title":{},"body":{"interfaces/IENV.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configs/view.config.ts",{"_index":1048,"title":{},"body":{"interfaces/IView.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/controller.ts",{"_index":1298,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/injectable.ts",{"_index":799,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"coverage.html":{}}}],["src/decorators/route.ts",{"_index":959,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/index.ts",{"_index":830,"title":{},"body":{"interfaces/IPreProcess.html":{},"coverage.html":{}}}],["src/middlewares/core.ts",{"_index":810,"title":{},"body":{"interfaces/IMiddlewaresScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/middlewares/index.ts",{"_index":1519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/errors.options.ts",{"_index":771,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/json.options.ts",{"_index":1097,"title":{},"body":{"interfaces/JsonResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/render.options.ts",{"_index":737,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/router.options.ts",{"_index":1061,"title":{},"body":{"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/options/typed",{"_index":1527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/nunjunks/core.ts",{"_index":1223,"title":{},"body":{"injectables/NunjunksEngine.html":{},"coverage.html":{}}}],["src/plugins/nunjunks/core.ts:10",{"_index":1236,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:11",{"_index":1238,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:13",{"_index":1240,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:19",{"_index":1242,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:28",{"_index":1231,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:33",{"_index":1228,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:37",{"_index":1233,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/core.ts:41",{"_index":1235,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["src/plugins/nunjunks/options.ts",{"_index":821,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/simple",{"_index":1024,"title":{},"body":{"interfaces/ISimpleLoggerOptions.html":{},"injectables/SimpleLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/typed",{"_index":1410,"title":{},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/results/json.ts",{"_index":1067,"title":{},"body":{"classes/JsonResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/results/json.ts:17",{"_index":1069,"title":{},"body":{"classes/JsonResult.html":{}}}],["src/results/json.ts:32",{"_index":1071,"title":{},"body":{"classes/JsonResult.html":{}}}],["src/results/render.ts",{"_index":1269,"title":{},"body":{"classes/RenderResult.html":{},"coverage.html":{}}}],["src/results/render.ts:20",{"_index":1270,"title":{},"body":{"classes/RenderResult.html":{}}}],["src/results/render.ts:27",{"_index":1271,"title":{},"body":{"classes/RenderResult.html":{}}}],["src/server.ts",{"_index":449,"title":{},"body":{"interfaces/FactoryContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/astroboycontext.ts",{"_index":4,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"coverage.html":{}}}],["src/services/astroboycontext.ts:11",{"_index":341,"title":{},"body":{"interfaces/Contract-1.html":{}}}],["src/services/astroboycontext.ts:12",{"_index":344,"title":{},"body":{"interfaces/Contract-1.html":{}}}],["src/services/astroboycontext.ts:13",{"_index":343,"title":{},"body":{"interfaces/Contract-1.html":{}}}],["src/services/astroboycontext.ts:14",{"_index":340,"title":{},"body":{"interfaces/Contract-1.html":{}}}],["src/services/astroboycontext.ts:15",{"_index":345,"title":{},"body":{"interfaces/Contract-1.html":{}}}],["src/services/astroboycontext.ts:16",{"_index":342,"title":{},"body":{"interfaces/Contract-1.html":{}}}],["src/services/astroboycontext.ts:37",{"_index":34,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:41",{"_index":38,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:45",{"_index":40,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:47",{"_index":19,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:51",{"_index":24,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:56",{"_index":30,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:61",{"_index":28,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:66",{"_index":21,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:71",{"_index":32,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/astroboycontext.ts:76",{"_index":26,"title":{},"body":{"injectables/AstroboyContext.html":{}}}],["src/services/baseclass.ts",{"_index":82,"title":{},"body":{"classes/BaseClass.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/baseclass.ts:14",{"_index":87,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:15",{"_index":86,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:16",{"_index":85,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:18",{"_index":89,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:19",{"_index":92,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:20",{"_index":91,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:21",{"_index":88,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:22",{"_index":93,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/baseclass.ts:23",{"_index":90,"title":{},"body":{"classes/BaseClass.html":{}}}],["src/services/configs.ts",{"_index":237,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/configs.ts:27",{"_index":1255,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:29",{"_index":1257,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:33",{"_index":1256,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/configs.ts:38",{"_index":1258,"title":{},"body":{"classes/RealConfigCollection.html":{}}}],["src/services/context.ts",{"_index":347,"title":{},"body":{"interfaces/Contract-2.html":{},"coverage.html":{}}}],["src/services/injector.ts",{"_index":353,"title":{},"body":{"interfaces/Contract-3.html":{},"coverage.html":{}}}],["src/services/injector.ts:6",{"_index":356,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["src/services/render.ts",{"_index":393,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{},"coverage.html":{}}}],["src/services/render.ts:15",{"_index":397,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:16",{"_index":400,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:20",{"_index":402,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:21",{"_index":403,"title":{},"body":{"interfaces/Contract-4.html":{}}}],["src/services/render.ts:34",{"_index":1266,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:36",{"_index":1268,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:38",{"_index":1259,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:52",{"_index":1260,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:54",{"_index":1261,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:55",{"_index":1262,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:59",{"_index":1263,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:60",{"_index":1264,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/render.ts:65",{"_index":1265,"title":{},"body":{"injectables/Render.html":{}}}],["src/services/scope.ts",{"_index":429,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{},"coverage.html":{}}}],["src/services/scope.ts:13",{"_index":1361,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:14",{"_index":1362,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:15",{"_index":1363,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:16",{"_index":1364,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:18",{"_index":1366,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:22",{"_index":1360,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:29",{"_index":1357,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:35",{"_index":1359,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:41",{"_index":1358,"title":{},"body":{"injectables/Scope.html":{}}}],["src/services/scope.ts:7",{"_index":432,"title":{},"body":{"interfaces/Contract-5.html":{}}}],["src/typings/icontext.ts",{"_index":695,"title":{},"body":{"interfaces/IContext.html":{},"coverage.html":{}}}],["src/typings/icontext.ts:12",{"_index":701,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:19",{"_index":698,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:27",{"_index":704,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:33",{"_index":700,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:5",{"_index":699,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/icontext.ts:6",{"_index":702,"title":{},"body":{"interfaces/IContext.html":{}}}],["src/typings/iresult.ts",{"_index":866,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/typings/iresult.ts:29",{"_index":870,"title":{},"body":{"interfaces/IResult.html":{}}}],["src/typings/istatictyperesolver.ts",{"_index":1030,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"coverage.html":{}}}],["src/typings/istatictyperesolver.ts:10",{"_index":1044,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:15",{"_index":1041,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:17",{"_index":1046,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/istatictyperesolver.ts:22",{"_index":1042,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{}}}],["src/typings/iviewengine.ts",{"_index":1055,"title":{},"body":{"interfaces/IViewEngine.html":{},"coverage.html":{}}}],["src/typings/iviewengine.ts:4",{"_index":1058,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["src/typings/iviewengine.ts:5",{"_index":1060,"title":{},"body":{"interfaces/IViewEngine.html":{}}}],["src/utils.ts",{"_index":1555,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["srv",{"_index":534,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["stac",{"_index":1339,"title":{},"body":{"interfaces/Request.html":{}}}],["start",{"_index":436,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["startapp",{"_index":638,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["started",{"_index":1426,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttypecheck",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["state",{"_index":754,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":104,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/FactoryContext.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["static_resolver",{"_index":473,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["staticresolver",{"_index":1323,"title":{},"body":{"interfaces/Request.html":{}}}],["staticresolver.fromobject(value",{"_index":1353,"title":{},"body":{"interfaces/Request.html":{}}}],["stats",{"_index":319,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["stats.mtime.valueof",{"_index":321,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["stop",{"_index":438,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["string",{"_index":112,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/IContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/INunjunksRenderOptions.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/IViewEngine.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"injectables/NunjunksEngine.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(err",{"_index":1621,"title":{},"body":{"index.html":{}}}],["string(value",{"_index":1352,"title":{},"body":{"interfaces/Request.html":{}}}],["stringa",{"_index":1148,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stringa.tostring().localecompare(stringb.tostring",{"_index":1221,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stringb",{"_index":1146,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["stropt",{"_index":1685,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1729,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicense",{"_index":1722,"title":{},"body":{"index.html":{},"license.html":{}}}],["substantial",{"_index":1735,"title":{},"body":{"index.html":{},"license.html":{}}}],["success",{"_index":939,"title":{},"body":{"interfaces/IRouter.html":{}}}],["such",{"_index":536,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["switch",{"_index":654,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/JsonResult.html":{},"interfaces/Request.html":{},"injectables/SimpleLogger.html":{}}}],["symbol",{"_index":246,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["symbol(`config::${key",{"_index":252,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["symbol(key",{"_index":250,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["symbol\\(config::(.+)\\)$/.test(key",{"_index":598,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/RouteArgument.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":368,"title":{},"body":{"interfaces/Contract-3.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["target.__proto__",{"_index":1337,"title":{},"body":{"interfaces/Request.html":{}}}],["target.prototype",{"_index":806,"title":{},"body":{"interfaces/IInjectableConfigs.html":{},"interfaces/Request.html":{}}}],["target.prototype.__proto__",{"_index":1335,"title":{},"body":{"interfaces/Request.html":{}}}],["target[i",{"_index":385,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["target[key",{"_index":383,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["tdata",{"_index":1388,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["tdata.tolocaledatestring",{"_index":1390,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["tdata.tolocaletimestring()}:${tdata.getmilliseconds",{"_index":1391,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["template",{"_index":58,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":1658,"title":{},"body":{"index.html":{}}}],["test/unit.ts",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["test02service",{"_index":1675,"title":{},"body":{"index.html":{}}}],["test_string_config",{"_index":1686,"title":{},"body":{"index.html":{}}}],["testcontroller",{"_index":1644,"title":{},"body":{"index.html":{}}}],["testservice",{"_index":1669,"title":{},"body":{"index.html":{}}}],["testservice;astroboy.ts",{"_index":1673,"title":{},"body":{"index.html":{}}}],["test”代表controllers",{"_index":1660,"title":{},"body":{"index.html":{}}}],["text",{"_index":1035,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["there's",{"_index":537,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this._ctx",{"_index":349,"title":{},"body":{"interfaces/Contract-2.html":{}}}],["this._init",{"_index":441,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this._views",{"_index":418,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["this.app",{"_index":67,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.app[\"config",{"_index":68,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.appbuilder",{"_index":504,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.appconfigs",{"_index":506,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.base",{"_index":1648,"title":{},"body":{"index.html":{}}}],["this.cancellationfilename",{"_index":149,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.cfg.get(nunjunks_options",{"_index":1246,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.character",{"_index":1182,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.code",{"_index":1172,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.compare(messagea",{"_index":1207,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.configs",{"_index":1085,"title":{},"body":{"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"classes/RenderResult.html":{}}}],["this.configs.cache",{"_index":1250,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.configs.get(demo_options);4",{"_index":1687,"title":{},"body":{"index.html":{}}}],["this.configs.get(env",{"_index":607,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.configs.get(simple_logger_options",{"_index":1408,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["this.configs.get.bind(this.configs",{"_index":683,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.configs.set(e1",{"_index":522,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.configs.toarray().foreach",{"_index":596,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.content",{"_index":1176,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.context.ctx",{"_index":64,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.createenv(configs).render(name",{"_index":1252,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.createenv(configs).renderstring(tpl",{"_index":1254,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.ctx",{"_index":65,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx).app",{"_index":66,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx.callservice(...args",{"_index":76,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx.getconfig(...args",{"_index":73,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx.getlib(...args",{"_index":78,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx.getservice(...args",{"_index":75,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx.getserviceclass(...args",{"_index":74,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.ctx.invokeservicemethod(...args",{"_index":77,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{}}}],["this.di.complete",{"_index":627,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.dispose(scopeid",{"_index":680,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.get(configs",{"_index":672,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.get(injectservice",{"_index":671,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.get(token",{"_index":679,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.register",{"_index":669,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.register(token",{"_index":668,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.di.resetconfigs",{"_index":608,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.directinject(injectscope.scope",{"_index":593,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.file",{"_index":1178,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.finalinjectionsinit",{"_index":573,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.init",{"_index":419,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["this.initconfigcollection",{"_index":635,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initcontextprovider",{"_index":637,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initinjections",{"_index":631,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initinjectservice",{"_index":636,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initoptions",{"_index":630,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.initrouters",{"_index":632,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.iscancellationrequested",{"_index":166,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.iscancelled",{"_index":148,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.isdiagnostictype",{"_index":1222,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.lastcancellationchecktime",{"_index":150,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.line",{"_index":1180,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.loader",{"_index":1251,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.map.get(token.key",{"_index":259,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["this.map.set(token.key",{"_index":257,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["this.option(...args",{"_index":618,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(config_view",{"_index":580,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(env",{"_index":579,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(global_error",{"_index":587,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(json_result_options",{"_index":581,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(nunjunks_options",{"_index":585,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(render_result_options",{"_index":582,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(router_options",{"_index":584,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(simple_logger_options",{"_index":586,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(static_resolver",{"_index":583,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.option(token",{"_index":599,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.pkgenv",{"_index":1407,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["this.preinit",{"_index":507,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinject(injectscope.new",{"_index":570,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinject(injectscope.scope",{"_index":560,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preinject(injectscope.singleton",{"_index":567,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.prescopeds.foreach(([token",{"_index":623,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.prescopeds.push([args[0",{"_index":656,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.presingletons.foreach(([token",{"_index":620,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.presingletons.push([args[0",{"_index":660,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preuniques.foreach(([token",{"_index":625,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.preuniques.push([args[0",{"_index":661,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.readconfigs(app[\"config",{"_index":642,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.readruntimeenv(app",{"_index":643,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.resetdiresolver",{"_index":644,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.resolvebundles",{"_index":645,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.resolveinjections",{"_index":646,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.rs.views",{"_index":1253,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this.scoped(...args",{"_index":614,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(astroboycontext",{"_index":590,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(context",{"_index":674,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(injectservice",{"_index":678,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scoped(scope",{"_index":591,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.scopeid",{"_index":439,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.sendinjection(args[0",{"_index":664,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.sendinjection(token",{"_index":621,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.severity",{"_index":1174,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.singleton(...args",{"_index":612,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.singleton(configs",{"_index":682,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.singleton(simplelogger",{"_index":592,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.start",{"_index":443,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.start.gettime",{"_index":447,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.startapp(events",{"_index":574,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.stop",{"_index":445,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.stop.gettime",{"_index":446,"title":{},"body":{"interfaces/Contract-5.html":{},"injectables/Scope.html":{}}}],["this.type",{"_index":1170,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["this.typescript.operationcanceledexception",{"_index":167,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["this.unique(...args",{"_index":616,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["this.value",{"_index":1086,"title":{},"body":{"classes/JsonResult.html":{},"index.html":{}}}],["this[\"@configs",{"_index":1245,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this[\"@loader",{"_index":1247,"title":{},"body":{"injectables/NunjunksEngine.html":{}}}],["this[$$injector",{"_index":1322,"title":{},"body":{"interfaces/Request.html":{}}}],["this[internal_injector",{"_index":1314,"title":{},"body":{"interfaces/Request.html":{}}}],["throught",{"_index":563,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["throw",{"_index":145,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"miscellaneous/variables.html":{}}}],["throwifcancellationrequested",{"_index":109,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["throwonundefined",{"_index":825,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":156,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{}}}],["timplement",{"_index":542,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["tinject",{"_index":533,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["title",{"_index":748,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/RenderResultOptions.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["tk",{"_index":803,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["toarray",{"_index":261,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"classes/RealConfigCollection.html":{}}}],["tojson",{"_index":110,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"classes/TypedSerializerCreator.html":{}}}],["tojson(obj",{"_index":1043,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["token",{"_index":238,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/Contract-3.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"classes/RealConfigCollection.html":{}}}],["token.key.tostring",{"_index":597,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["token_implement",{"_index":652,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["tokengenerator",{"_index":248,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/IPreProcess.html":{},"classes/RealConfigCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toobject",{"_index":1037,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["toobject(obj",{"_index":1045,"title":{},"body":{"interfaces/IStaticTypedResolver.html":{},"classes/TypedSerializerCreator.html":{}}}],["toresult",{"_index":867,"title":{},"body":{"interfaces/IResult.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["toresult(scope",{"_index":868,"title":{},"body":{"interfaces/IResult.html":{},"interfaces/IResultScope.html":{}}}],["toresult(undefined",{"_index":1070,"title":{},"body":{"classes/JsonResult.html":{},"classes/RenderResult.html":{}}}],["tort",{"_index":1756,"title":{},"body":{"index.html":{},"license.html":{}}}],["tos",{"_index":426,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tosave",{"_index":424,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tosnake",{"_index":414,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["tostring",{"_index":367,"title":{},"body":{"interfaces/Contract-3.html":{}}}],["tp",{"_index":804,"title":{},"body":{"interfaces/IInjectableConfigs.html":{}}}],["tpl",{"_index":785,"title":{},"body":{"interfaces/IGlobalErrorHandler.html":{},"classes/JsonResult.html":{},"injectables/NunjunksEngine.html":{},"miscellaneous/variables.html":{}}}],["tplkey",{"_index":1083,"title":{},"body":{"classes/JsonResult.html":{}}}],["tpls",{"_index":1007,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["tplstr",{"_index":739,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"classes/RenderResult.html":{},"interfaces/RenderResultOptions.html":{},"miscellaneous/variables.html":{}}}],["tps",{"_index":1394,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["trace",{"_index":1370,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/enumerations.html":{}}}],["trace(...msg",{"_index":1384,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["trace(title",{"_index":1381,"title":{},"body":{"injectables/SimpleLogger.html":{}}}],["transform",{"_index":974,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["transpile",{"_index":177,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trimblocks",{"_index":826,"title":{},"body":{"interfaces/INunjunksRenderOptions.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":146,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/Contract-5.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/INunjunksRenderOptions.html":{},"injectables/Render.html":{},"interfaces/Request.html":{},"injectables/Scope.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":138,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IRouter.html":{},"classes/RenderResult.html":{},"miscellaneous/variables.html":{}}}],["trycatchglobalerror",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["trycatchglobalerror(injector",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trygetroutemagic",{"_index":1301,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["trygetroutemagic(prototype",{"_index":979,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["trygetrouter",{"_index":966,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["trygetrouter(prototype",{"_index":986,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["trygetroutermagic",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["trygetroutermagic(prototype",{"_index":980,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["ts",{"_index":70,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-1.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/InnerRouterOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/Request.html":{},"interfaces/RouterConfig-1.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts2",{"_index":1663,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":178,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IDevCmdOptions.html":{},"interfaces/IENV-1.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.compileroptions",{"_index":282,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tsconfig.json",{"_index":952,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":275,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tslint.configuration.loadconfigurationfrompath",{"_index":296,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tslint:disable",{"_index":290,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["tsnode",{"_index":1496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ttoken",{"_index":541,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["turn",{"_index":897,"title":{},"body":{"interfaces/IRouter.html":{}}}],["turnlod",{"_index":943,"title":{},"body":{"interfaces/IRouter.html":{}}}],["type",{"_index":247,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/Contract.html":{},"interfaces/Contract-2.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouterMagic.html":{},"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{},"interfaces/IView.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"injectables/SimpleLogger.html":{},"classes/TypedSerializerCreator.html":{},"index.html":{}}}],["type_diagnostic",{"_index":1106,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["type_lint",{"_index":1107,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typea",{"_index":1156,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typealiases",{"_index":1765,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeb",{"_index":1154,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typeb].map(type",{"_index":1212,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typecheck",{"_index":179,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["typed",{"_index":1034,"title":{},"body":{"interfaces/IStaticSerializeOptions.html":{},"interfaces/IStaticTypedResolver.html":{}}}],["typedserializer",{"_index":477,"title":{},"body":{"interfaces/FactoryContext.html":{},"interfaces/IPreProcess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedserializercreator",{"_index":1409,"title":{"classes/TypedSerializerCreator.html":{}},"body":{"classes/TypedSerializerCreator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":59,"title":{},"body":{"injectables/AstroboyContext.html":{},"classes/BaseClass.html":{},"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["types",{"_index":996,"title":{},"body":{"interfaces/IRouterMagic.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["types/koa",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":115,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"interfaces/ConfigurationFile.html":{},"interfaces/FactoryContext.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["typescript.compileroptions",{"_index":279,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.createcompilerhost(programconfig.options",{"_index":307,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.createprogram",{"_index":333,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.parsedcommandline",{"_index":299,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.parsejsonconfigfilecontent",{"_index":284,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.program",{"_index":305,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.readconfigfile",{"_index":280,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.sys",{"_index":285,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript.sys.readfile",{"_index":281,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["typescript3.2",{"_index":1598,"title":{},"body":{"index.html":{}}}],["typetransform",{"_index":1350,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["typetransform(staticresolver",{"_index":1349,"title":{},"body":{"interfaces/Request.html":{}}}],["typings/icontext",{"_index":47,"title":{},"body":{"injectables/AstroboyContext.html":{},"interfaces/Contract-1.html":{},"interfaces/Contract-2.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["typings/iresult",{"_index":861,"title":{},"body":{"interfaces/IPreProcess.html":{},"classes/JsonResult.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{}}}],["typings/istatictyperesolver",{"_index":862,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/Request.html":{},"classes/TypedSerializerCreator.html":{}}}],["typings/iviewengine",{"_index":745,"title":{},"body":{"interfaces/IErrorHandler.html":{},"interfaces/IPreProcess.html":{},"injectables/NunjunksEngine.html":{},"interfaces/RenderResultOptions.html":{}}}],["undefined",{"_index":183,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/JsonResultOptions.html":{},"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/RenderResultOptions.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"classes/TypedSerializerCreator.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":562,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["unique(...args",{"_index":569,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["unique(srv",{"_index":568,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["uniques",{"_index":688,"title":{},"body":{"interfaces/FactoryContext.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":832,"title":{},"body":{"interfaces/IPreProcess.html":{},"interfaces/InnerRouterOptions.html":{},"interfaces/RouterOptions.html":{},"index.html":{}}}],["urlroot",{"_index":911,"title":{},"body":{"interfaces/IRouter.html":{}}}],["use",{"_index":337,"title":{},"body":{"interfaces/ConfigurationFile.html":{},"interfaces/FactoryContext.html":{},"interfaces/IErrorHandler.html":{},"interfaces/IRouterCmdOptions.html":{},"interfaces/RenderResultOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usestatic",{"_index":975,"title":{},"body":{"interfaces/IRouterMagic.html":{},"interfaces/ParamsOptions.html":{},"interfaces/RouteArgument.html":{}}}],["ut",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["utils",{"_index":410,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IInjectableConfigs.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"classes/JsonResult.html":{},"interfaces/ParamsOptions.html":{},"injectables/Render.html":{},"interfaces/Request.html":{},"interfaces/RouteArgument.html":{}}}],["uuid",{"_index":133,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CancellationTokenData.html":{},"dependencies.html":{}}}],["v",{"_index":1341,"title":{},"body":{"interfaces/Request.html":{},"index.html":{}}}],["v1",{"_index":1636,"title":{},"body":{"index.html":{}}}],["v1/prj",{"_index":957,"title":{},"body":{"interfaces/IRouterCmdOptions.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["value",{"_index":239,"title":{},"body":{"interfaces/ConfigEntry.html":{},"interfaces/ConfigToken.html":{},"interfaces/Contract.html":{},"interfaces/FactoryContext.html":{},"classes/JsonResult.html":{},"classes/RealConfigCollection.html":{},"classes/RenderResult.html":{},"interfaces/Request.html":{},"index.html":{}}}],["value.bind(this)(...params",{"_index":1326,"title":{},"body":{"interfaces/Request.html":{}}}],["variable",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1773,"title":{"miscellaneous/variables.html":{}},"body":{}}],["verbose",{"_index":180,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{}}}],["view",{"_index":1053,"title":{},"body":{"interfaces/IView.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":394,"title":{},"body":{"interfaces/Contract-4.html":{},"interfaces/IGlobalSetOptions.html":{},"injectables/Render.html":{}}}],["void",{"_index":120,"title":{},"body":{"classes/CancellationToken.html":{},"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/Contract-3.html":{},"interfaces/Contract-4.html":{},"interfaces/FactoryContext.html":{},"interfaces/IENV-1.html":{},"interfaces/IGlobalErrorHandler.html":{},"interfaces/IGlobalSetOptions.html":{},"interfaces/IMiddlewaresScope.html":{},"interfaces/IPreProcess.html":{},"interfaces/IResult.html":{},"interfaces/IResultScope.html":{},"interfaces/IRouter.html":{},"interfaces/IRouterMagic.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/ParamsOptions.html":{},"classes/RealConfigCollection.html":{},"injectables/Render.html":{},"interfaces/RouteArgument.html":{},"interfaces/RouterConfig-1.html":{},"injectables/Scope.html":{},"injectables/SimpleLogger.html":{},"miscellaneous/typealiases.html":{}}}],["w",{"_index":937,"title":{},"body":{"interfaces/IRouter.html":{}}}],["want",{"_index":555,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["warn",{"_index":1399,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":1129,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{},"miscellaneous/typealiases.html":{}}}],["warranties",{"_index":1742,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":1737,"title":{},"body":{"index.html":{},"license.html":{}}}],["watch",{"_index":181,"title":{},"body":{"interfaces/CmdConfig.html":{},"interfaces/CommandPlugin.html":{},"interfaces/IENV-1.html":{},"interfaces/InnerCmdConfig.html":{},"interfaces/RouterConfig-1.html":{},"index.html":{}}}],["watcher",{"_index":302,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["watcher.iswatchingfile(filepath",{"_index":318,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["watching",{"_index":314,"title":{},"body":{"interfaces/ConfigurationFile.html":{}}}],["way",{"_index":1200,"title":{},"body":{"classes/NormalizedMessage.html":{},"interfaces/NormalizedMessageJson.html":{}}}],["webpack",{"_index":1635,"title":{},"body":{"index.html":{}}}],["well",{"_index":549,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["whether",{"_index":1755,"title":{},"body":{"index.html":{},"license.html":{}}}],["white",{"_index":1405,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}],["whitespace",{"_index":1078,"title":{},"body":{"classes/JsonResult.html":{},"interfaces/JsonResultOptions.html":{},"miscellaneous/variables.html":{}}}],["wiki",{"_index":1600,"title":{},"body":{"index.html":{}}}],["without",{"_index":521,"title":{},"body":{"interfaces/FactoryContext.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":1618,"title":{},"body":{"index.html":{}}}],["woshinidie",{"_index":1684,"title":{},"body":{"index.html":{}}}],["x1b[0m",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[31m\\x1b[1m",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[32m",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[33m",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[34m",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[35m",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[36m",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1b[37m",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f31f",{"_index":576,"title":{},"body":{"interfaces/FactoryContext.html":{}}}],["x1f31f;astroboy.ts",{"_index":1597,"title":{},"body":{"index.html":{}}}],["x1f628",{"_index":1599,"title":{},"body":{"index.html":{}}}],["xpath",{"_index":1274,"title":{},"body":{"classes/RenderResult.html":{}}}],["yellow",{"_index":1398,"title":{},"body":{"injectables/SimpleLogger.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AstroboyContext.html":{"url":"injectables/AstroboyContext.html","title":"injectable - AstroboyContext","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  AstroboyContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/AstroboyContext.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy.ts基础上下文服务\n\nctx 承载Koa.Context，可定制类型\napp 承载Koa.Application，可定制类型\nconfig 承载业务config，可定制类型\n\n\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                callService\n                            \n                            \n                                getConfig\n                            \n                            \n                                getLib\n                            \n                            \n                                getService\n                            \n                            \n                                getServiceClass\n                            \n                            \n                                invokeServiceMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ctx\n                                \n                                \n                                    app\n                                \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: Context)\n                    \n                \n                        \n                            \n                                被定义在 src/services/AstroboyContext.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    Context\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        ctx\n                    \n                \n\n                \n                    \n                        getctx()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:37\n                                \n                            \n                    \n                        \n                                BaseClass.ctx \n\n\n                                \n                                    返回 :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        app\n                    \n                \n\n                \n                    \n                        getapp()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:41\n                                \n                            \n                    \n                        \n                                BaseClass.app \n\n\n                                \n                                    返回 :     A\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/AstroboyContext.ts:45\n                                \n                            \n                    \n                        \n                                BaseClass.config \n\n\n                                \n                                    返回 :     C\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import Koa from \"koa\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { IContext } from \"../typings/IContext\";\nimport { Context } from \"./Context\";\n\nexport namespace AstroboyContext {\n  export interface Contract {\n    readonly ctx: T;\n    readonly app: A;\n    readonly config: C;\n    getConfig(...args: any[]): any;\n    getServiceClass(...args: any[]): any;\n    getService(...args: any[]): any;\n    callService(...args: any[]): any;\n    invokeServiceMethod(...args: any[]): any;\n    getLib(...args: any[]): any;\n  }\n}\n\n/**\n * ## Astroboy.ts基础上下文服务\n * * `ctx` 承载Koa.Context，可定制类型\n * * `app` 承载Koa.Application，可定制类型\n * * `config` 承载业务config，可定制类型\n * @description\n * @author Big Mogician\n * @export\n * @class AstroboyContext\n * @template T typeof `ctx` 类型\n * @template A typeof `app` 类型\n * @template C typeof `config` 类型\n */\n@Injectable()\nexport class AstroboyContext\n  implements AstroboyContext.Contract {\n  /** BaseClass.ctx */\n  public get ctx(): T {\n    return this.context.ctx || {};\n  }\n  /** BaseClass.app */\n  public get app(): A {\n    return (this.ctx && (this.ctx).app) || {};\n  }\n  /** BaseClass.config */\n  public get config(): C {\n    return (this.app && this.app[\"config\"]) || {};\n  }\n\n  constructor(protected context: Context) {}\n\n  getConfig(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getConfig(...args);\n  }\n\n  getServiceClass(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getServiceClass(...args);\n  }\n\n  getService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getService(...args);\n  }\n\n  callService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.callService(...args);\n  }\n\n  invokeServiceMethod(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.invokeServiceMethod(...args);\n  }\n\n  getLib(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getLib(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/BaseClass.html":{"url":"classes/BaseClass.html","title":"class - BaseClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  BaseClass\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/BaseClass.ts\n        \n\n            \n                描述\n            \n            \n                基础astroboy类\n\n不建议在astroboy.ts的体系中使用\n完整功能替代：AstroboyContext服务\n\n\n            \n\n\n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                ctx\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                callService\n                            \n                            \n                                getConfig\n                            \n                            \n                                getLib\n                            \n                            \n                                getService\n                            \n                            \n                                getServiceClass\n                            \n                            \n                                invokeServiceMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(ctx: Koa.Context)\n                    \n                \n                        \n                            \n                                被定义在 src/services/BaseClass.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                    Koa.Context\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Koa\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     any\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Koa.Context\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/BaseClass.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import Koa from \"koa\";\nimport { BaseClass as C } from \"astroboy\";\n\n/**\n * ## 基础astroboy类\n * * 不建议在astroboy.ts的体系中使用\n * * 完整功能替代：AstroboyContext服务\n * @description\n * @author Big Mogician\n * @export\n * @class BaseClass\n */\ndeclare class BaseClass {\n  public ctx: Koa.Context;\n  public app: Koa;\n  public config: any;\n  constructor(ctx: Koa.Context);\n  getConfig(...args): any;\n  getServiceClass(...args): any;\n  getService(...args): any;\n  callService(...args): any;\n  invokeServiceMethod(...args): any;\n  getLib(...args): any;\n}\n\nconst BC: typeof BaseClass = C;\n\nexport { BC as BaseClass };\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/CancellationToken.html":{"url":"classes/CancellationToken.html","title":"class - CancellationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  CancellationToken\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/CancellationToken.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancellationFileName\n                            \n                            \n                                    Private\n                                isCancelled\n                            \n                            \n                                    Private\n                                lastCancellationCheckTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cleanupCancellation\n                            \n                            \n                                    Static\n                                createFromJSON\n                            \n                            \n                                    Public\n                                getCancellationFilePath\n                            \n                            \n                                    Public\n                                isCancellationRequested\n                            \n                            \n                                    Public\n                                requestCancellation\n                            \n                            \n                                    Public\n                                throwIfCancellationRequested\n                            \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(typescript, cancellationFileName?: string, isCancelled?: boolean)\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/utils/CancellationToken.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typescript\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancellationFileName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                                \n                                                        isCancelled\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cancellationFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isCancelled\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     boolean\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastCancellationCheckTime\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cleanupCancellation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanupCancellation()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createFromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFromJSON(typescript, json: CancellationTokenData)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typescript\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        json\n                                                        \n                                                                    CancellationTokenData\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     CancellationToken\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCancellationFilePath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCancellationFilePath()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isCancellationRequested\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isCancellationRequested()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestCancellation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        requestCancellation()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            throwIfCancellationRequested\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        throwIfCancellationRequested()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toJSON()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/CancellationToken.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     { cancellationFileName: string; isCancelled: boolean; }\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as ts from \"typescript\";\nimport uuid = require(\"uuid/v4\");\n\nfunction existsSync(filePath: fs.PathLike) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === \"ENOENT\") {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return true;\n}\n\ninterface CancellationTokenData {\n  isCancelled: boolean;\n  cancellationFileName: string;\n}\n\nexport class CancellationToken {\n  private isCancelled: boolean;\n  private cancellationFileName: string;\n  private lastCancellationCheckTime: number;\n  constructor(\n    private typescript: typeof ts,\n    cancellationFileName?: string,\n    isCancelled?: boolean\n  ) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || uuid();\n    this.lastCancellationCheckTime = 0;\n  }\n\n  public static createFromJSON(\n    typescript: typeof ts,\n    json: CancellationTokenData\n  ) {\n    return new CancellationToken(\n      typescript,\n      json.cancellationFileName,\n      json.isCancelled\n    );\n  }\n\n  public toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  public getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  public isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  public throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  public requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), \"\");\n    this.isCancelled = true;\n  }\n\n  public cleanupCancellation() {\n    if (this.isCancelled && existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CancellationTokenData.html":{"url":"interfaces/CancellationTokenData.html","title":"interface - CancellationTokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CancellationTokenData\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/CancellationToken.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cancellationFileName\n                                \n                                \n                                        isCancelled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        cancellationFileName\n                                    \n                                \n                                \n                                    \n                                        cancellationFileName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCancelled\n                                    \n                                \n                                \n                                    \n                                        isCancelled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as ts from \"typescript\";\nimport uuid = require(\"uuid/v4\");\n\nfunction existsSync(filePath: fs.PathLike) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === \"ENOENT\") {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return true;\n}\n\ninterface CancellationTokenData {\n  isCancelled: boolean;\n  cancellationFileName: string;\n}\n\nexport class CancellationToken {\n  private isCancelled: boolean;\n  private cancellationFileName: string;\n  private lastCancellationCheckTime: number;\n  constructor(\n    private typescript: typeof ts,\n    cancellationFileName?: string,\n    isCancelled?: boolean\n  ) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || uuid();\n    this.lastCancellationCheckTime = 0;\n  }\n\n  public static createFromJSON(\n    typescript: typeof ts,\n    json: CancellationTokenData\n  ) {\n    return new CancellationToken(\n      typescript,\n      json.cancellationFileName,\n      json.isCancelled\n    );\n  }\n\n  public toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  public getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  public isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  public throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  public requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), \"\");\n    this.isCancelled = true;\n  }\n\n  public cleanupCancellation() {\n    if (this.isCancelled && existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CmdConfig.html":{"url":"interfaces/CmdConfig.html","title":"interface - CmdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CmdConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        debug\n                                \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        ignore\n                                \n                                \n                                            可选的\n                                        inspect\n                                \n                                \n                                            可选的\n                                        mock\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                                \n                                            可选的\n                                        transpile\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                                \n                                            可选的\n                                        typeCheck\n                                \n                                \n                                            可选的\n                                        verbose\n                                \n                                \n                                            可选的\n                                        watch\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     IENV\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     IENV\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignore\n                                    \n                                \n                                \n                                    \n                                        ignore:     string[] | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[] | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inspect\n                                    \n                                \n                                \n                                    \n                                        inspect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     boolean | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transpile\n                                    \n                                \n                                \n                                    \n                                        transpile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeCheck\n                                    \n                                \n                                \n                                    \n                                        typeCheck:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        verbose:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watch\n                                    \n                                \n                                \n                                    \n                                        watch:     string[] | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string[] | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/CommandPlugin.html":{"url":"interfaces/CommandPlugin.html","title":"interface - CommandPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  CommandPlugin\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        description\n                                \n                                \n                                        help\n                                \n                                \n                                        name\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        help\n                                    \n                                \n                                \n                                    \n                                        help:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Array<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Array<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Config\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     Env\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Env\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Config-1.html":{"url":"interfaces/Config-1.html","title":"interface - Config-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Config\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        routers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     Env\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Env\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routers\n                                    \n                                \n                                \n                                    \n                                        routers:     RouterConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     RouterConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigEntry.html":{"url":"interfaces/ConfigEntry.html","title":"interface - ConfigEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigEntry\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     ConfigToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ConfigToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigToken.html":{"url":"interfaces/ConfigToken.html","title":"interface - ConfigToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigToken\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     symbol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     symbol\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ConfigurationFile.html":{"url":"interfaces/ConfigurationFile.html","title":"interface - ConfigurationFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ConfigurationFile\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/typeCheck.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        linterOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        linterOptions\n                                    \n                                \n                                \n                                    \n                                        linterOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as typescript from \"typescript\";\nimport { Configuration } from \"tslint\";\nimport path from \"path\";\n\nexport function loadProgramConfig(\n  configFile: string,\n  compilerOptions: typescript.CompilerOptions\n) {\n  const tsconfig = typescript.readConfigFile(\n    configFile,\n    typescript.sys.readFile\n  ).config;\n\n  tsconfig.compilerOptions = tsconfig.compilerOptions || {};\n  tsconfig.compilerOptions = {\n    ...tsconfig.compilerOptions,\n    ...compilerOptions\n  };\n\n  const parsed = typescript.parseJsonConfigFileContent(\n    tsconfig,\n    typescript.sys,\n    path.dirname(configFile)\n  );\n\n  return parsed;\n}\n\ninterface ConfigurationFile extends Configuration.IConfigurationFile {\n  linterOptions?: {\n    typeCheck?: boolean;\n    exclude?: string[];\n  };\n}\n\nexport function loadLinterConfig(configFile: string): ConfigurationFile {\n  // tslint:disable-next-line:no-implicit-dependencies\n  const tslint = require(\"tslint\");\n\n  return tslint.Configuration.loadConfigurationFromPath(\n    configFile\n  ) as ConfigurationFile;\n}\n\nexport function createProgram(\n  programConfig: typescript.ParsedCommandLine,\n  //   files: FilesRegister,\n  //   watcher: FilesWatcher,\n  oldProgram?: typescript.Program\n) {\n  const host = typescript.createCompilerHost(programConfig.options);\n  //   const realGetSourceFile = host.getSourceFile;\n\n  //   host.getSourceFile = (filePath, languageVersion, onError) => {\n  // first check if watcher is watching file - if not - check it's mtime\n  // if (!watcher.isWatchingFile(filePath)) {\n  //   try {\n  //     const stats = fs.statSync(filePath);\n\n  //     files.setMtime(filePath, stats.mtime.valueOf());\n  //   } catch (e) {\n  //     // probably file does not exists\n  //     files.remove(filePath);\n  //   }\n  // }\n\n  // // get source file only if there is no source in files register\n  // if (!files.has(filePath) || !files.getData(filePath).source) {\n  //   files.mutateData(filePath, data => {\n  //     data.source = realGetSourceFile(filePath, languageVersion, onError);\n  //   });\n  // }\n\n  // return files.getData(filePath).source;\n  //   };\n\n  return typescript.createProgram(\n    programConfig.fileNames,\n    programConfig.options,\n    host,\n    oldProgram // re-use old program\n  );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract.html":{"url":"interfaces/Contract.html","title":"interface - Contract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n            \n                继承\n            \n            \n                    ReadonlyConfigs\n            \n\n\n\n\n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-1.html":{"url":"interfaces/Contract-1.html","title":"interface - Contract-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/AstroboyContext.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app\n                                \n                                \n                                        config\n                                \n                                \n                                        ctx\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    callService\n                                \n                                \n                                    getConfig\n                                \n                                \n                                    getLib\n                                \n                                \n                                    getService\n                                \n                                \n                                    getServiceClass\n                                \n                                \n                                    invokeServiceMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/AstroboyContext.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:     A\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     A\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     C\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport { Injectable } from \"../decorators/injectable\";\nimport { IContext } from \"../typings/IContext\";\nimport { Context } from \"./Context\";\n\nexport namespace AstroboyContext {\n  export interface Contract {\n    readonly ctx: T;\n    readonly app: A;\n    readonly config: C;\n    getConfig(...args: any[]): any;\n    getServiceClass(...args: any[]): any;\n    getService(...args: any[]): any;\n    callService(...args: any[]): any;\n    invokeServiceMethod(...args: any[]): any;\n    getLib(...args: any[]): any;\n  }\n}\n\n/**\n * ## Astroboy.ts基础上下文服务\n * * `ctx` 承载Koa.Context，可定制类型\n * * `app` 承载Koa.Application，可定制类型\n * * `config` 承载业务config，可定制类型\n * @description\n * @author Big Mogician\n * @export\n * @class AstroboyContext\n * @template T typeof `ctx` 类型\n * @template A typeof `app` 类型\n * @template C typeof `config` 类型\n */\n@Injectable()\nexport class AstroboyContext\n  implements AstroboyContext.Contract {\n  /** BaseClass.ctx */\n  public get ctx(): T {\n    return this.context.ctx || {};\n  }\n  /** BaseClass.app */\n  public get app(): A {\n    return (this.ctx && (this.ctx).app) || {};\n  }\n  /** BaseClass.config */\n  public get config(): C {\n    return (this.app && this.app[\"config\"]) || {};\n  }\n\n  constructor(protected context: Context) {}\n\n  getConfig(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getConfig(...args);\n  }\n\n  getServiceClass(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getServiceClass(...args);\n  }\n\n  getService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getService(...args);\n  }\n\n  callService(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.callService(...args);\n  }\n\n  invokeServiceMethod(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.invokeServiceMethod(...args);\n  }\n\n  getLib(...args: any[]) {\n    // @ts-ignore 参数定义override忽略\n    return this.ctx.getLib(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-2.html":{"url":"interfaces/Contract-2.html","title":"interface - Contract-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Context.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctx\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport { IContext } from \"../typings/IContext\";\n\nexport namespace Context {\n  export interface Contract {\n    ctx: T;\n  }\n}\n\n/**\n * ## 基础上下文服务\n * @description\n * @author Big Mogician\n * @export\n * @class Context\n * @template T typeof `ctx` 类型\n */\nexport class Context implements Context.Contract {\n  /**\n   * ### Koa上下文对象\n   * * 有可能被astroboy和后续框架扩展\n   * @description\n   * @readonly\n   * @type {T} 聚合类型\n   * @memberof Context\n   */\n  public get ctx(): T {\n    return this._ctx;\n  }\n  constructor(private _ctx: Koa.Context) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-3.html":{"url":"interfaces/Contract-3.html","title":"interface - Contract-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Injector.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scopeId\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(token: InjectDIToken)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Injector.ts:6\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    InjectDIToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        scopeId\n                                    \n                                \n                                \n                                    \n                                        scopeId:     ScopeID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ScopeID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectDIToken, ScopeID } from \"@bonbons/di\";\n\nexport namespace InjectService {\n  export interface Contract {\n    readonly scopeId: ScopeID;\n    get(token: InjectDIToken): T;\n  }\n}\n\n/**\n * ## 依赖注入服务\n * * 手动注入器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class InjectService\n */\nexport abstract class InjectService implements InjectService.Contract {\n  abstract readonly scopeId: ScopeID;\n  /**\n   * ### 解析并获得类型实例\n   * * 有可能为null\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {InjectDIToken} token\n   * @returns {T}\n   * @memberof InjectService\n   */\n  abstract get(token: InjectDIToken): T;\n  protected abstract INTERNAL_dispose(): void;\n}\n\n/**\n * ## 创建DI多重继承\n * * Proxy实现，只适合作为顶层服务存在\n * * 自定义多重先祖的优先级顺序\n * * 手动实现重载逻辑(如有必要)\n * * 不支持`deleteProperty`,`defineProperty`\n * * 不要使用`prop in object`来检查属性\n * * 不支持`toString`\n * * 不支持序列化\n * @description\n * @author Big Mogician\n * @export\n * @template T 对象DI类型\n * @param {T} target 当前对象\n * @param {string[]} depts 所有祖先实例在内部的字段名\n */\nexport function createInjectMixin(\n  target: T,\n  depts: string[]\n): T;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1]\n): T & P1;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2]\n): T & P1 & P2;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2, P3]\n): T & P1 & P2 & P3;\nexport function createInjectMixin(\n  target: T,\n  ...depts: [P1, P2, P3, P4]\n): T & P1 & P2 & P3 & P4;\nexport function createInjectMixin(\n  target: T,\n  ...depts: any[]\n): T;\nexport function createInjectMixin(...args: any[]) {\n  const [target, ...others] = args;\n  if (others[0] instanceof Array) {\n    return createProxyByKeys(target, others[0]);\n  } else {\n    return createProxyByDepts(target, others);\n  }\n}\n\nfunction createProxyByDepts(target: T, depts: any[]) {\n  return new Proxy(target, {\n    get(target, key) {\n      if (target[key]) return target[key];\n      for (let index = 0; index (target: T, depts: string[]) {\n  return new Proxy(target, {\n    get(target, key) {\n      if (target[key]) return target[key];\n      for (let index = 0; index  target[i]));\n      return Object.keys(ms);\n    },\n    ownKeys(target) {\n      const ms = Object.assign({}, target, ...depts.map(i => target[i]));\n      return Object.keys(ms);\n    },\n    has(target, key) {\n      let has = key in target;\n      if (has) return true;\n      for (let index = 0; index \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-4.html":{"url":"interfaces/Contract-4.html","title":"interface - Contract-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        views\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                                \n                                    setView\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(obj: literal type, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(key: string, obj: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetView(key: string, obj: any, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        views\n                                    \n                                \n                                \n                                    \n                                        views:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Contract-5.html":{"url":"interfaces/Contract-5.html","title":"interface - Contract-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Contract\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Scope.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    diration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diration\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiration()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ScopeID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ScopeID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"../decorators/injectable\";\nimport { ScopeID } from \"@bonbons/di\";\n\nexport namespace Scope {\n  export interface Contract {\n    readonly id: ScopeID;\n    diration(): number;\n  }\n}\n\n@Injectable()\nexport class Scope implements Scope.Contract {\n  private _init = false;\n  private scopeId!: ScopeID;\n  private start!: Date;\n  private stop!: Date;\n\n  public get id() {\n    return this.scopeId;\n  }\n\n  protected init(id: ScopeID) {\n    if (this._init) return this;\n    this._init = true;\n    this.scopeId = id;\n    return this;\n  }\n\n  protected begin() {\n    if (!this.start) {\n      this.start = new Date();\n    }\n  }\n\n  protected end() {\n    if (!this.stop) {\n      this.stop = new Date();\n    }\n  }\n\n  public diration() {\n    if (this.start && this.stop) {\n      return this.stop.getTime() - this.start.getTime();\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Env\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    E\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Env-1.html":{"url":"interfaces/Env-1.html","title":"interface - Env-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Env\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    E\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/FactoryContext.html":{"url":"interfaces/FactoryContext.html","title":"interface - FactoryContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  FactoryContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/server.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        injector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Configs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Configs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\nimport Astroboy from \"astroboy\";\nimport { Context } from \"./services/Context\";\nimport { InjectService } from \"./services/Injector\";\nimport { AstroboyContext } from \"./services/AstroboyContext\";\nimport { Scope } from \"./services/Scope\";\nimport { GlobalDI, optionAssign, PartReset, ChangeReturn } from \"./utils\";\nimport {\n  Constructor,\n  InjectScope,\n  ScopeID,\n  InjectToken,\n  AbstractType,\n  ImplementType,\n  DIContainer\n} from \"@bonbons/di\";\nimport { ENV, defaultEnv, CONFIG_VIEW, defaultView } from \"./configs\";\nimport {\n  defaultJsonResultOptions,\n  JSON_RESULT_OPTIONS,\n  InnerRouterOptions,\n  ROUTER_OPTIONS,\n  defaultRouterOptions,\n  RENDER_RESULT_OPTIONS,\n  defaultRenderResultOptions,\n  STATIC_RESOLVER,\n  defaultGlobalError,\n  GLOBAL_ERROR\n} from \"./options\";\nimport { RealConfigCollection, ConfigToken, Configs } from \"./services/Configs\";\nimport { TypedSerializer } from \"./plugins/typed-serializer\";\nimport {\n  NunjunksEngine,\n  NUNJUNKS_OPTIONS,\n  defaultNunjunksOptions\n} from \"./plugins/nunjunks\";\nimport {\n  SimpleLogger,\n  SIMPLE_LOGGER_OPTIONS,\n  defaultSimpleLoggerOptions\n} from \"./plugins/simple-logger\";\nimport { Render } from \"./services/Render\";\nimport { initRouters } from \"./builders\";\n\ntype DIPair = [any, any];\n\nexport interface FactoryContext {\n  injector: InjectService;\n  configs: Configs;\n}\n\n/**\n * ## astroboy.ts服务\n * @description\n * @module Server\n * @author Big Mogician\n * @export\n * @class Server\n */\nexport class Server {\n  private di = GlobalDI;\n  private configs = new RealConfigCollection();\n\n  private preSingletons: DIPair[] = [];\n  private preScopeds: DIPair[] = [];\n  private preUniques: DIPair[] = [];\n\n  private appBuilder!: Constructor;\n  private appConfigs!: any;\n\n  constructor();\n  constructor(appBuilder: Constructor);\n  constructor(appConfigs: any);\n  constructor(appBuilder: Constructor, appConfigs: any);\n  constructor(...args: any[]) {\n    const [ctor, configs] = args;\n    if (!ctor) {\n      this.appBuilder = Astroboy;\n    } else if (ctor.prototype === undefined) {\n      this.appBuilder = Astroboy;\n      this.appConfigs = ctor;\n    } else {\n      this.appBuilder = ctor;\n      this.appConfigs = configs;\n    }\n    this.preInit();\n  }\n\n  /**\n   * ### 创建一个新的应用\n   * @description\n   * @author Big Mogician\n   * @static\n   * @param {Constructor?} ctor astroboy或者其继承\n   * @param {*?} [configs] astroboy启动配置\n   * @returns\n   * @memberof Server\n   */\n  public static Create(): Server;\n  public static Create(ctor: Constructor): Server;\n  public static Create(configs: any): Server;\n  public static Create(ctor: Constructor, configs: any): Server;\n  public static Create(ctor?: Constructor, configs?: any) {\n    return new Server(ctor, configs);\n  }\n\n  /**\n   * ### 声明一个配置项\n   * * 仅声明，不设置默认值\n   * @description\n   * @author Big Mogician\n   * @template T\n   * @param {token: ConfigToken} token\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public option(token: ConfigToken): this;\n  /**\n   * ### 注入一个配置项\n   * * 需要设置默认值\n   * @description\n   * @author Big Mogician\n   * @template T\n   * @param {ConfigToken} token\n   * @param {Partial} value\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public option(token: ConfigToken, value: Partial): this;\n  public option(...args: any[]): this {\n    const [e1, e2] = args;\n    if (!e1) {\n      throw new Error(\n        \"DI token or entry is empty, you shouldn't call BonbonsServer.use(...) without any param.\"\n      );\n    }\n    this.configs.set(e1, optionAssign(this.configs, e1, e2 || {}));\n    return this;\n  }\n\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with constructor.\n   * All scoped services will be created new instance in different request pipe\n   *\n   * @description\n   * @author Big Mogician\n   * @template TInject\n   * @param {Constructor} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(srv: Constructor): this;\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service constructor. All\n   * scoped services will be created new instance in different request pipe.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {ImplementToken} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(\n    token: AbstractType,\n    srv: ImplementType\n  ): this;\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service instance factory\n   * ( pure function with no side effects).\n   * All scoped services will be created new instance in different request pipe.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {(context: FactoryContext) => TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(\n    token: AbstractType,\n    srv: (context: FactoryContext) => TImplement\n  ): this;\n  /**\n   * Set a scoped service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a scoped service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and a well-created implement service instance.\n   * All scoped services will be created new\n   * instance in different request pipe (but injecting by instance means\n   * the instance may be changed in runtime, so please be careful. If you\n   * want to prevent this situation, use a service factory here).\n   *\n   * @description\n   * @author Big Mogician\n   * @template TInject\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public scoped(\n    token: AbstractType,\n    srv: TImplement\n  ): this;\n  public scoped(...args: any[]): this {\n    return this.preInject(InjectScope.Scope, args);\n  }\n\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with constructor.\n   * All singleton services will use unique instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TInject\n   * @param {Constructor} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(srv: Constructor): this;\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service constructor.\n   * All singleton services will use unique\n   * instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {ImplementToken} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(\n    token: AbstractType,\n    srv: ImplementType\n  ): this;\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and implement service factory ( pure function with no side effects).\n   * All singleton services will use unique\n   * instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {(context: FactoryContext) => TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(\n    token: AbstractType,\n    srv: (context: FactoryContext) => TImplement\n  ): this;\n  /**\n   * Set a singleton service\n   * ---\n   * * service should be decorated by @Injectable(...)\n   *\n   * Set a singleton service with injectable token (such abstract class,\n   * but not the typescript interface because there's no interface in\n   * the javascript runtime) and a well-created implement service instance.\n   * All singleton services will use unique\n   * instance throught different request pipes.\n   *\n   * @description\n   * @author Big Mogician\n   * @template TToken\n   * @template TImplement\n   * @param {InjectableToken} token\n   * @param {TImplement} srv\n   * @returns {BonbonsServer}\n   * @memberof BonbonsServer\n   */\n  public singleton(\n    token: AbstractType,\n    srv: TImplement\n  ): this;\n  public singleton(...args: any[]): this {\n    return this.preInject(InjectScope.Singleton, args);\n  }\n\n  public unique(srv: Constructor): this;\n  public unique(\n    token: AbstractType,\n    srv: ImplementType\n  ): this;\n  public unique(\n    token: AbstractType,\n    srv: (context: FactoryContext) => TImplement\n  ): this;\n  public unique(\n    token: AbstractType,\n    srv: TImplement\n  ): this;\n  public unique(...args: any[]): this {\n    return this.preInject(InjectScope.New, args);\n  }\n\n  /**\n   * ### 启动app\n   * @description\n   * @author Big Mogician\n   * @param {Partial void;\n   *     onError: (error, ctx) => void;\n   *   }>} [events]\n   * @memberof Server\n   */\n  public run(\n    events?: Partial void;\n      onError: (error, ctx) => void;\n    }>\n  ) {\n    this.init();\n    this.finalInjectionsInit();\n    this.startApp(events);\n  }\n\n  //#region 支持继承树覆写和扩展\n\n  /**\n   * ## 初始化Configs配置\n   * * &#x1F31F; 在继承树中重载此方法以进行框架扩展\n   * * 在 `Server.prototype.initInjections` 函数之前执行\n   *\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected initOptions() {\n    this.option(ENV, defaultEnv);\n    this.option(CONFIG_VIEW, defaultView);\n    this.option(JSON_RESULT_OPTIONS, defaultJsonResultOptions);\n    this.option(RENDER_RESULT_OPTIONS, defaultRenderResultOptions);\n    this.option(STATIC_RESOLVER, TypedSerializer);\n    this.option(ROUTER_OPTIONS, defaultRouterOptions);\n    this.option(NUNJUNKS_OPTIONS, defaultNunjunksOptions);\n    this.option(SIMPLE_LOGGER_OPTIONS, defaultSimpleLoggerOptions);\n    this.option(GLOBAL_ERROR, defaultGlobalError);\n  }\n\n  /**\n   * ## 初始化DI注入关系配置\n   * * &#x1F31F; 在继承树中重载此方法以进行框架扩展\n   * * 在 `Server.prototype.initOptions` 函数之后执行\n   *\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected initInjections() {\n    // 不允许装饰器复写\n    this.scoped(AstroboyContext);\n    this.scoped(Scope);\n    this.singleton(SimpleLogger);\n    // 允许被装饰器复写\n    this.directInject(InjectScope.Scope, [NunjunksEngine]);\n    this.directInject(InjectScope.Scope, [Render]);\n  }\n\n  /**\n   * ## 处理合并与接受configs配置\n   *\n   * @author Big Mogician\n   * @protected\n   * @param {any} [configs={}] app.configs\n   * @memberof Server\n   */\n  protected readConfigs(configs: any = {}) {\n    this.configs.toArray().forEach(({ token }) => {\n      const key = token.key.toString();\n      if (/Symbol\\(config::(.+)\\)$/.test(key)) {\n        this.option(token, configs[RegExp.$1] || {});\n      }\n    });\n  }\n\n  /**\n   * ## 处理运行时参数\n   *\n   * @author Big Mogician\n   * @protected\n   * @template A extends Koa\n   * @param {Koa} app\n   * @memberof Server\n   */\n  protected readRuntimeEnv(app: A) {\n    this.option(ENV, { env: app.env || \"development\" });\n  }\n\n  /**\n   * ## 按照配置设置DI的解析方式\n   * - `native` : 原生模式，最高的还原度，没有黑盒\n   * - `proxy` : Proxy代理模式，追求更高性能的惰性解析\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected resetDIResolver() {\n    const { diType } = this.configs.get(ENV);\n    this.di.resetConfigs({ type: diType });\n  }\n\n  /**\n   * ## 解析Bundles\n   *\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected resolveBundles() {\n    _innerBundle[\"@singletons\"].forEach(args => this.singleton(...args));\n    _innerBundle[\"@scopeds\"].forEach(args => this.scoped(...args));\n    _innerBundle[\"@uniques\"].forEach(args => this.unique(...args));\n    _innerBundle[\"@options\"].forEach(args => this.option(...args));\n  }\n\n  /**\n   * ## 完成DI容器初始化并锁定\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Server\n   */\n  protected resolveInjections() {\n    this.preSingletons.forEach(([token, srv]) =>\n      this.sendInjection(token, srv, InjectScope.Singleton)\n    );\n    this.preScopeds.forEach(([token, srv]) =>\n      this.sendInjection(token, srv, InjectScope.Scope)\n    );\n    this.preUniques.forEach(([token, srv]) =>\n      this.sendInjection(token, srv, InjectScope.New)\n    );\n    this.di.complete();\n  }\n\n  //#endregion\n\n  private preInit() {\n    this.initOptions();\n    this.initInjections();\n  }\n\n  private init() {\n    this.initRouters();\n  }\n\n  private initRouters() {\n    initRouters(this.configs.get(ROUTER_OPTIONS));\n    return this;\n  }\n\n  private finalInjectionsInit() {\n    this.initConfigCollection();\n    this.initInjectService();\n    this.initContextProvider();\n  }\n\n  private startApp(\n    events?: Partial void;\n      onError: (error, ctx) => void;\n    }>\n  ) {\n    const { onStart = undefined, onError = undefined } = events || {};\n    new (this.appBuilder || Astroboy)(this.appConfigs || {})\n      .on(\"start\", (app: Koa) => {\n        this.readConfigs(app[\"config\"]);\n        this.readRuntimeEnv(app);\n        this.resetDIResolver();\n        this.resolveBundles();\n        this.resolveInjections();\n        onStart && onStart(app);\n      })\n      .on(\"error\", (error, ctx) => {\n        onError && onError(error, ctx);\n      });\n  }\n\n  /** 预注册，会覆盖装饰器的定义注册 */\n  private preInject(type: InjectScope, service: Constructor): this;\n  private preInject(\n    type: InjectScope,\n    token_implement: [Constructor, any]\n  ): this;\n  private preInject(type: InjectScope, p: any | [any, any]) {\n    const args = p instanceof Array ? p : [p, p];\n    switch (type) {\n      case InjectScope.Scope:\n        this.preScopeds.push([args[0], args[1] || args[0]]);\n        break;\n      case InjectScope.Singleton:\n        this.preSingletons.push([args[0], args[1] || args[0]]);\n        break;\n      default:\n        this.preUniques.push([args[0], args[1] || args[0]]);\n        break;\n    }\n    return this;\n  }\n\n  /** 直接注册，允许`@Injectable()`装饰器之后进行定义复写 */\n  private directInject(type: InjectScope, service: [Constructor]): this;\n  private directInject(\n    type: InjectScope,\n    token_implement: [Constructor, any]\n  ): this;\n  private directInject(type: InjectScope, args: [any] | [any, any]) {\n    switch (type) {\n      case InjectScope.Scope:\n        this.sendInjection(args[0], args[1] || args[0], InjectScope.Scope);\n        break;\n      case InjectScope.Singleton:\n        this.sendInjection(args[0], args[1] || args[0], InjectScope.Singleton);\n        break;\n      default:\n        this.sendInjection(args[0], args[1] || args[0], InjectScope.New);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * DI项最终注册登记\n   *\n   * @author Big Mogician\n   * @private\n   * @param {any} token\n   * @param {any} inject\n   * @param {InjectScope} scope\n   * @returns\n   * @memberof Server\n   */\n  private sendInjection(token: any, inject: any, scope: InjectScope) {\n    if (!DIContainer.isFactory(inject)) {\n      return this.di.register(token, inject, scope);\n    }\n    // 底层服务，直接使用底层工厂函数\n    if (token === InjectService || token === Configs || token === Context) {\n      return this.di.register(token, inject, scope);\n    }\n    return this.di.register(\n      token,\n      (scopeId, metadata) => {\n        const injector = this.di.get(InjectService, scopeId);\n        const configs = this.di.get(Configs, scopeId);\n        return inject({ injector, configs });\n      },\n      scope\n    );\n  }\n\n  /**\n   * ## 初始化上下文服务\n   * @description\n   * @author Big Mogician\n   * @private\n   * @memberof Server\n   */\n  private initContextProvider() {\n    this.scoped(Context, (scopeId?: ScopeID, { ctx = null } = {}) => {\n      if (ctx === null) {\n        throw new Error(\n          \"invalid call, you can only call a context in request pipe scope.\"\n        );\n      }\n      return new Context(ctx);\n    });\n  }\n\n  /**\n   * ## 初始化手工注入服务\n   * * 可以自举\n   * @description\n   * @author Big Mogician\n   * @private\n   * @memberof Server\n   */\n  private initInjectService() {\n    this.scoped(InjectService, (scopeId?: ScopeID) => ({\n      get: (token: InjectToken) => this.di.get(token, scopeId),\n      INTERNAL_dispose: () => this.di.dispose(scopeId),\n      scopeId\n    }));\n  }\n\n  /**\n   * ## 注入全局配置容器服务\n   * @description\n   * @author Big Mogician\n   * @private\n   * @memberof Server\n   */\n  private initConfigCollection() {\n    this.singleton(Configs, () => ({\n      get: this.configs.get.bind(this.configs)\n    }));\n  }\n}\n\ntype ServerBundle = PartReset;\ntype InnerBundle = ServerBundle & {\n  \"@options\": [any, any?][];\n  \"@singletons\": [Constructor, any?][];\n  \"@scopeds\": [Constructor, any?][];\n  \"@uniques\": [Constructor, any?][];\n};\n/**\n * ## DI Bundles\n * * 导入并移动使用DI容器的注册api\n * * 和普通注入项解析方式相同\n */\nexport const Bundles: ChangeReturn = {\n  option(...args: any[]): ServerBundle {\n    Bundles[\"@options\"].push(args);\n    return Bundles as any;\n  },\n  scoped(...args: any[]): ServerBundle {\n    Bundles[\"@scopeds\"].push(args);\n    return Bundles as any;\n  },\n  singleton(...args: any[]): ServerBundle {\n    Bundles[\"@singletons\"].push(args);\n    return Bundles as any;\n  },\n  unique(...args: any[]): ServerBundle {\n    Bundles[\"@uniques\"].push(args);\n    return Bundles as any;\n  },\n  \"@options\": [],\n  \"@singletons\": [],\n  \"@scopeds\": [],\n  \"@uniques\": []\n} as any;\nconst _innerBundle: InnerBundle = Bundles as any;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IContext.html":{"url":"interfaces/IContext.html","title":"interface - IContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IContext\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IContext.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    callService\n                                \n                                \n                                    getConfig\n                                \n                                \n                                    getLib\n                                \n                                \n                                    getService\n                                \n                                \n                                    getServiceClass\n                                \n                                \n                                    invokeServiceMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callService\n                            \n                            \n                        \n                    \n                \n                \n                    \ncallService(service: string, method: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:19\n                            \n                        \n\n\n                \n                    \n                            调用服务\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                                    描述\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                服务名\n\n                                                        \n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                方法名\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                参数\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLib\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLib(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetService(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:12\n                            \n                        \n\n\n                \n                    \n                            获取一个 Service 类实例\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getServiceClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetServiceClass(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeServiceMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \ninvokeServiceMethod(pkgName: string, service: string, method: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IContext.ts:27\n                            \n                        \n\n\n                \n                    \n                            调用服务\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                                    描述\n                                            \n                                        \n                                        \n                                                \n                                                        pkgName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                包名\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                        \n                                                                参数\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Koa from \"koa\";\n\nexport interface IContext extends Koa.Context {\n  config: any;\n  getConfig(...args: any[]): any;\n  getServiceClass(...args: any[]): any;\n  /**\n   * 获取一个 Service 类实例\n   * @param {String} packageName 包名\n   * @param {String} serviceName 服务名\n   */\n  getService(...args: any[]): any;\n  /**\n   * 调用服务\n   * @param {String} service 服务名\n   * @param {String} method 方法名\n   * @param {Object} args 参数\n   */\n  callService(service: string, method: string, ...args: any[]): any;\n  /**\n   * 调用服务\n   * @param {String} pkgName 包名\n   * @param {String} serviceName 服务名\n   * @param {String} methodName 方法名\n   * @param {Object} args 参数\n   */\n  invokeServiceMethod(\n    pkgName: string,\n    service: string,\n    method: string,\n    ...args: any[]\n  ): any;\n  getLib(...args: any[]): any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IDevCmdOptions.html":{"url":"interfaces/IDevCmdOptions.html","title":"interface - IDevCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IDevCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/dev/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        debug\n                                \n                                \n                                        env\n                                \n                                \n                                        inspect\n                                \n                                \n                                        mock\n                                \n                                \n                                        port\n                                \n                                \n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inspect\n                                    \n                                \n                                \n                                    \n                                        inspect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IDevCmdOptions {\n  config: string;\n  debug: string | boolean;\n  env: string;\n  port: number | string;\n  mock: string | boolean;\n  tsconfig: string;\n  inspect: boolean;\n}\n\nexport const options: CommandPlugin = {\n  name: \"dev\",\n  description: \"本地开发，开启后端服务\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"使用自定义的atc.config.js配置文件\"],\n    [\"-D, --debug [debugName]\", \"开启 debug 模式\"],\n    [\"-E, --env [NODE_ENV]\", \"设置 NODE_ENV 环境变量，默认 development\"],\n    [\"-P, --port [NODE_PORT]\", \"设置 NODE_PORT 环境变量，默认 8201\"],\n    [\n      \"-M, --mock [proxyUrl]\",\n      \"开启 mock 模式，默认 proxy 地址为 http://127.0.0.1:8001\"\n    ],\n    [\"-T, --tsconfig [config]\", \"使用自定义的ts编译配置文件\"],\n    [\"-I, --inspect [inspect]\", \"启用inspector，开启编辑器断点调试\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc dev\");\n    console.log(\"    $ atc dev --debug\");\n    console.log(\"    $ atc dev --debug koa:application\");\n    console.log(\"    $ atc dev --debug --mock\");\n    console.log(\"    $ atc dev --mock http://127.0.0.1:8001\");\n    console.log(\"    $ atc dev --mock\");\n    console.log(\"    $ atc dev --env pre\");\n    console.log(\"    $ atc dev --port 8201\");\n    console.log(\"    $ atc dev --env development --port 8201\");\n    console.log(\"    $ atc dev --tsconfig app/tsconfig.json\");\n    console.log(\"    $ atc dev --inspect\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IENV.html":{"url":"interfaces/IENV.html","title":"interface - IENV","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IENV\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/configs/env.config.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        diType\n                                \n                                \n                                        env\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        diType\n                                    \n                                \n                                \n                                    \n                                        diType:     \"native\" | \"proxy\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"native\" | \"proxy\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    设置DI解析的模式，默认：'native' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    运行环境，默认：'development' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createConfig } from \"../services/Configs\";\n\ninterface IENV {\n  /** 设置DI解析的模式，默认：`'native'` */\n  diType: \"native\" | \"proxy\";\n  /** 运行环境，默认：`'development'` */\n  env: string;\n}\n\nexport const defaultEnv: IENV = {\n  diType: \"native\",\n  env: \"development\"\n};\n\n/** astroboy.ts环境变量 */\nexport const ENV = createConfig(\"@astroboy.ts\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IENV-1.html":{"url":"interfaces/IENV-1.html","title":"interface - IENV-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IENV\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        NODE_ENV\n                                \n                                \n                                            可选的\n                                        NODE_PORT\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/base.ts:13\n                            \n                        \n            \n        \n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_ENV\n                                    \n                                \n                                \n                                    \n                                        NODE_ENV:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_PORT\n                                    \n                                \n                                \n                                    \n                                        NODE_PORT:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IErrorHandler.html":{"url":"interfaces/IErrorHandler.html","title":"interface - IErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IErrorHandler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/render.options.ts\n        \n\n            \n                描述\n            \n            \n                模板渲染错误处理接口\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        path\n                                \n                                \n                                        tplStr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面渲染函数，作为兜底的渲染能力提供，\n\n默认(dev)：() => \"${错误的堆栈信息}\"\"\n默认(prod)：() => \"Internal Server Error\"\n通常不要复写此字段，除非path或tplStr能够提供可用的内容\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面模板的path，默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tplStr\n                                    \n                                \n                                \n                                    \n                                        tplStr:     string | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    错误页面字符串模板，默认：undefined \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\nimport { createOptions } from \"../services/Configs\";\nimport { NunjunksEngine } from \"../plugins/nunjunks\";\nimport { IViewEngine } from \"../typings/IViewEngine\";\n\n/**\n * ## 模板渲染错误处理接口\n * @description\n * @author Big Mogician\n * @interface IErrorHandler\n */\ninterface IErrorHandler {\n  /** 错误页面模板的path，默认：`undefined` */\n  path: string | false;\n  /** 错误页面字符串模板，默认：`undefined` */\n  tplStr: string | false;\n  /**\n   * 错误页面渲染函数，作为兜底的渲染能力提供，\n   * * 默认(dev)：`() => \"${错误的堆栈信息}\"\"`\n   * * 默认(prod)：`() => \"Internal Server Error\"`\n   * * 通常不要复写此字段，除非`path`或`tplStr`能够提供可用的内容\n   */\n  content: (error: Error, title?: string) => string;\n}\n\n/**\n * ## 配置RenderResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface RenderResultOptions\n */\nexport interface RenderResultOptions {\n  /** astroboy原生渲染的参数配置 */\n  astConf: {\n    /** 使用原生的渲染逻辑，默认：`false` */\n    use: boolean;\n    /** 原生astroboy渲染时的`config`字段，默认：`undefined` */\n    configs: any;\n    /** 原生astroboy渲染时的`state`字段，默认：`undefined` */\n    state: any;\n  };\n  /** 模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined` */\n  root: string;\n  /** 模板文件相对路径，默认：`\"\"` */\n  path: string;\n  /** 模板字符串，如果提供将优先使用此渲染，默认：`undefined` */\n  tplStr: string;\n  /** 配置信息，将作为渲染引擎需要接受的configs字段下传，默认：`undefined` */\n  configs: any;\n  /** 默认的模板引擎，默认：`\"nunjunks\"` */\n  engine: T;\n  /** 模板引擎DI列表，可以动态merge合并配置，默认：`{ nunjunks: NunjunksEngine }` */\n  engines: {\n    [prop: string]: Constructor;\n  };\n  /** 当渲染错误(生产模式)需要走的执行逻辑 */\n  onError: Partial;\n  /** 当渲染错误(开发模式)需要走的执行逻辑 */\n  onDevError: Partial;\n}\n\nexport const defaultRenderResultOptions: RenderResultOptions = {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n};\n\nfunction checkCustomError(error: Error) {\n  return error && error.name && error.name !== \"Error\";\n}\n\n/** RenderResult配置token */\nexport const RENDER_RESULT_OPTIONS = createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IGlobalErrorHandler.html":{"url":"interfaces/IGlobalErrorHandler.html","title":"interface - IGlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IGlobalErrorHandler\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/errors.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        handler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions, Configs } from \"../services/Configs\";\nimport { InjectService } from \"../services/Injector\";\nimport { RenderResult } from \"../results/render\";\nimport { RENDER_RESULT_OPTIONS } from \"./render.options\";\nimport { ENV } from \"../configs/env.config\";\nimport { Context } from \"../services/Context\";\nimport { Render } from \"../services/Render\";\nimport { SimpleLogger } from \"../plugins/simple-logger\";\n\ninterface IGlobalErrorHandler {\n  handler?: (error: any, injector: InjectService, configs: Configs) => void;\n}\n\nexport const defaultGlobalError: IGlobalErrorHandler = {\n  handler: async (error, injector, configs) => {\n    const render = injector.get(Render);\n    const { ctx } = injector.get(Context);\n    const { env } = configs.get(ENV);\n    const { onError, onDevError } = configs.get(RENDER_RESULT_OPTIONS);\n    const { content: defaultRender, ...args } =\n      env === \"production\" ? onError : onDevError;\n    render.setView(\"__viewError\", error);\n    try {\n      const path = !args.path ? undefined : args.path;\n      const tpl = !args.tplStr ? undefined : args.tplStr;\n      if (!path && !tpl) {\n        throw new Error(\"No template provided for global error handler.\");\n      }\n      const result = new RenderResult({ path, tplStr: tpl });\n      ctx.body = await result.toResult({ injector, configs });\n    } catch (_) {\n      const logger = injector.get(SimpleLogger);\n      logger.trace(\"GLOBAL_ERROR render failed\", _);\n      ctx.body = defaultRender(error, \"Internal Server Error\");\n    }\n  }\n};\n\nexport const GLOBAL_ERROR = createOptions(\"GLOBAL_ERROR\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IGlobalSetOptions.html":{"url":"interfaces/IGlobalSetOptions.html","title":"interface - IGlobalSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IGlobalSetOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        toSnake\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        toSnake\n                                    \n                                \n                                \n                                    \n                                        toSnake:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IInjectableConfigs.html":{"url":"interfaces/IInjectableConfigs.html","title":"interface - IInjectableConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IInjectableConfigs\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/injectable.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     InjectToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     InjectScope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectScope\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Constructor,\n  IBaseInjectable,\n  InjectScope,\n  InjectToken\n} from \"@bonbons/di\";\nimport { GlobalDI } from \"../utils\";\n\ninterface IInjectableConfigs {\n  type: InjectScope;\n  token: InjectToken;\n}\n\n/**\n * ## 定义服务\n * @description\n * @author Big Mogician\n * @export\n * @param {Partial} [config]\n * @returns\n */\nexport function Injectable(): (target: Constructor) => Constructor;\nexport function Injectable(\n  scope: InjectScope\n): (target: Constructor) => Constructor;\nexport function Injectable(\n  config: Partial\n): (target: Constructor) => Constructor;\nexport function Injectable(config?: InjectScope | Partial) {\n  return function(target: Constructor) {\n    let token: InjectToken = undefined;\n    let scope: InjectScope = InjectScope.Scope;\n    switch (config) {\n      case InjectScope.Scope:\n      case InjectScope.Singleton:\n      case InjectScope.New:\n        scope = config;\n        break;\n      default:\n        const { token: tk = undefined, type: tp = InjectScope.Scope } =\n          config || {};\n        scope = tp || InjectScope.Scope;\n        token = tk;\n    }\n    const prototype: IBaseInjectable = target.prototype;\n    prototype.__valid = true;\n    GlobalDI.register(token || target, target, scope);\n    return >target;\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IMiddlewaresScope.html":{"url":"interfaces/IMiddlewaresScope.html","title":"interface - IMiddlewaresScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IMiddlewaresScope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/middlewares/core.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        ctx\n                                \n                                \n                                        injector\n                                \n                                \n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     Configs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Configs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                    \n                                \n                                \n                                    \n                                        ctx:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IContext } from \"../typings/IContext\";\nimport { InjectService } from \"../services/Injector\";\nimport { Configs } from \"../services/Configs\";\nimport { getScopeId, GlobalDI } from \"../utils\";\n\nexport interface IMiddlewaresScope {\n  injector: InjectService;\n  configs: Configs;\n  ctx: T;\n  next: () => Promise;\n}\n\ntype ProvideInvoker = (\n  bunddle: IMiddlewaresScope\n) => void | Promise;\n\n/**\n * 创建具有依赖注入能力的中间件\n *\n * @author Big Mogician\n * @export\n * @template T extends IContext\n * @param {((bunddle: IMiddlewaresScope, ctx: T, next: () => Promise) => void | Promise)} middleware\n * @returns\n */\nexport function createMiddleware(\n  middleware: ProvideInvoker\n) {\n  return async (ctx: T, next: () => Promise) => {\n    const scopeId = getScopeId(ctx);\n    const configs = GlobalDI.get(Configs, scopeId);\n    const injector = GlobalDI.get(InjectService, scopeId);\n    await middleware({ injector, configs, ctx, next });\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/INunjunksRenderOptions.html":{"url":"interfaces/INunjunksRenderOptions.html","title":"interface - INunjunksRenderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  INunjunksRenderOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/nunjunks/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoescape\n                                \n                                \n                                        cache\n                                \n                                \n                                        lstripBlocks\n                                \n                                \n                                        root\n                                \n                                \n                                        throwOnUndefined\n                                \n                                \n                                        trimBlocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        autoescape\n                                    \n                                \n                                \n                                    \n                                        autoescape:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lstripBlocks\n                                    \n                                \n                                \n                                    \n                                        lstripBlocks:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        throwOnUndefined\n                                    \n                                \n                                \n                                    \n                                        throwOnUndefined:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trimBlocks\n                                    \n                                \n                                \n                                    \n                                        trimBlocks:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import path from \"path\";\nimport { createOptions } from \"../../services/Configs\";\n\nexport interface INunjunksRenderOptions {\n  root: string;\n  autoescape: true;\n  throwOnUndefined: false;\n  trimBlocks: false;\n  lstripBlocks: false;\n  cache: true;\n}\n\nexport const defaultNunjunksOptions: INunjunksRenderOptions = {\n  root: path.resolve(process.cwd(), \"app/views\"),\n  cache: true,\n  autoescape: true,\n  throwOnUndefined: false,\n  trimBlocks: false,\n  lstripBlocks: false\n};\n\nexport const NUNJUNKS_OPTIONS = createOptions(\n  \"NUNJUNKS_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IPreProcess.html":{"url":"interfaces/IPreProcess.html","title":"interface - IPreProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IPreProcess\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/index.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        always\n                                \n                                \n                                        appRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        fileType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制刷新2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRoot\n                                    \n                                \n                                \n                                    \n                                        appRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    整个项目的url前缀，默认：'/' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动生成2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    生成router文件的文件类型，默认：'js' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import Astroboy from \"astroboy\";\nimport { ControllerConstructor } from \"astroboy-router/dist/metadata\";\nimport { createRouter } from \"astroboy-router\";\nimport { GlobalImplements } from \"./utils\";\nimport { copyPrototype } from \"./decorators/controller\";\nimport { initRouters } from \"./builders\";\n\n/**\n * ## 构建路由\n * * 等效astroboy-router的createRouter方法\n * @description\n * @author Big Mogician\n * @export\n * @template T\n * @param {ControllerConstructor} ctor\n * @param {string} name\n * @param {string} root\n * @returns\n */\nexport function buildRouter(\n  ctor: ControllerConstructor,\n  name: string,\n  root: string\n) {\n  const sourceCtor = GlobalImplements.get(ctor);\n  const result = createRouter(sourceCtor, name, root);\n  copyPrototype(ctor, sourceCtor);\n  return result;\n}\n\ninterface IPreProcess {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\n/**\n * ## astroboy.ts 预处理函数\n * * 硬核初始化routers\n * @description\n * @author Big Mogician\n * @export\n * @param {Partial} {\n *   routerAutoBuild: open = defaultEnv.routerAutoBuild,\n *   routerAlwaysBuild: always = defaultEnv.routerAlwaysBuild,\n *   routerRoot: root = defaultEnv.routerRoot\n * }\n */\nexport function preInitFn(configs: Partial): void;\nexport function preInitFn(configs: Partial, inEnd?) {\n  return initRouters(configs, inEnd);\n}\n\nexport * from \"astroboy-router\";\nexport * from \"./decorators\";\nexport * from \"./middlewares\";\nexport * from \"./services/Injector\";\nexport * from \"./services/Context\";\nexport * from \"./services/BaseClass\";\nexport * from \"./services/AstroboyContext\";\nexport * from \"./services/Render\";\nexport * from \"./server\";\nexport * from \"./configs\";\nexport * from \"./options\";\nexport * from \"./typings/IContext\";\nexport * from \"./typings/IResult\";\nexport * from \"./typings/IViewEngine\";\nexport * from \"./typings/IStaticTypeResolver\";\nexport * from \"./results/json\";\nexport * from \"./results/render\";\n\nexport {\n  TypedSerializer,\n  Serialize,\n  Deserialize,\n  Extends\n} from \"./plugins/typed-serializer\";\nexport { NUNJUNKS_OPTIONS } from \"./plugins/nunjunks\";\nexport { SIMPLE_LOGGER_OPTIONS } from \"./plugins/simple-logger\";\n\nexport {\n  Configs,\n  ConfigToken,\n  ConfigEntry,\n  createOptions,\n  createConfig,\n  TokenGenerator,\n  InjectScope\n} from \"./services/Configs\";\n\nexport { Astroboy };\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IResult.html":{"url":"interfaces/IResult.html","title":"interface - IResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IResult.ts\n        \n\n            \n                描述\n            \n            \n                路由方法返回接口定义\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    toResult\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoResult(scope: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IResult.ts:29\n                            \n                        \n\n\n                \n                    \n                            需要实现的解析函数\n\n将目标处理成body内容\n\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ConfigsCollection as ReadonlyConfigs } from \"@bonbons/di\";\nimport { InjectService } from \"../services/Injector\";\n\nexport interface IResultScope {\n  configs: ReadonlyConfigs;\n  injector: InjectService;\n}\n\n/** 表示一个异步过程 */\nexport type Async = T | Promise;\n\n/**\n * ## 路由方法返回接口定义\n * @description\n * @author Big Mogician\n * @export\n * @interface IResult\n */\nexport interface IResult {\n  /**\n   * ### 需要实现的解析函数\n   * * 将目标处理成body内容\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} scope\n   * @returns {(string | Promise)}\n   * @memberof IResult\n   */\n  toResult(scope: IResultScope): string | Promise;\n}\n\nexport type ICommonResultType = string | void | IResult;\n\nexport type IBodyResult = Async;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IResultScope.html":{"url":"interfaces/IResultScope.html","title":"interface - IResultScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IResultScope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IResult.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        configs\n                                \n                                \n                                        injector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     ReadonlyConfigs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ReadonlyConfigs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        injector\n                                    \n                                \n                                \n                                    \n                                        injector:     InjectService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     InjectService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConfigsCollection as ReadonlyConfigs } from \"@bonbons/di\";\nimport { InjectService } from \"../services/Injector\";\n\nexport interface IResultScope {\n  configs: ReadonlyConfigs;\n  injector: InjectService;\n}\n\n/** 表示一个异步过程 */\nexport type Async = T | Promise;\n\n/**\n * ## 路由方法返回接口定义\n * @description\n * @author Big Mogician\n * @export\n * @interface IResult\n */\nexport interface IResult {\n  /**\n   * ### 需要实现的解析函数\n   * * 将目标处理成body内容\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} scope\n   * @returns {(string | Promise)}\n   * @memberof IResult\n   */\n  toResult(scope: IResultScope): string | Promise;\n}\n\nexport type ICommonResultType = string | void | IResult;\n\nexport type IBodyResult = Async;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouter.html":{"url":"interfaces/IRouter.html","title":"interface - IRouter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouter\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/builders.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:    string | IRouter\n\n                    \n                \n                        \n                            \n                                被定义在 src/builders.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import fs from \"fs\";\nimport path from \"path\";\nimport rimraf from \"rimraf\";\nimport { GlobalImplements } from \"./utils\";\nimport { InnerRouterOptions, defaultRouterOptions as df } from \"./options\";\n\ninterface IRouter {\n  [prop: string]: string | IRouter;\n}\n\nexport function initRouters(\n  {\n    ctorFolder: base = df.ctorFolder,\n    routerFolder: routerBase = df.routerFolder,\n    enabled: open = df.enabled,\n    always = df.always,\n    appRoot: root = df.appRoot,\n    fileType = df.fileType\n  }: Partial,\n  onEnd?: (data: { routers?: IRouter; error?: Error }) => void\n) {\n  if (open) {\n    try {\n      const routers: IRouter = {};\n      const ctorPath = path.resolve(base);\n      const routerPath = path.resolve(routerBase);\n      if (always) {\n        // 硬核开关，强撸routers文件夹\n        rimraf.sync(routerPath);\n        fs.mkdirSync(routerPath);\n      } else if (!fs.existsSync(routerPath)) {\n        fs.mkdirSync(routerPath);\n      }\n      checkRouterFolders({\n        turn: 0,\n        baseRouter: routerPath,\n        folders: fs.readdirSync(ctorPath),\n        ctorPath,\n        routerPath,\n        fileType,\n        routers,\n        root\n      });\n      onEnd && onEnd({ routers });\n    } catch (e) {\n      onEnd && onEnd({ error: e });\n    }\n  }\n}\n\nfunction checkRouterFolders({\n  turn,\n  baseRouter,\n  folders,\n  ctorPath,\n  routerPath,\n  fileType,\n  root,\n  routers\n}: {\n  turn: number;\n  baseRouter: string;\n  folders: string[];\n  ctorPath: string;\n  routerPath: string;\n  fileType: string;\n  root: string;\n  routers: IRouter;\n}) {\n  folders.forEach(path => {\n    if (path.indexOf(\".\") === -1) {\n      routers[path] = {};\n      const routerFolder = `${routerPath}/${path}`;\n      const ctorFolder = `${ctorPath}/${path}`;\n      if (!fs.existsSync(routerFolder)) {\n        fs.mkdirSync(routerFolder);\n      }\n      checkRouterFolders({\n        turn: turn + 1,\n        baseRouter,\n        folders: fs.readdirSync(ctorFolder),\n        ctorPath: ctorFolder,\n        routerPath: routerFolder,\n        fileType,\n        routers: routers[path],\n        root\n      });\n    } else {\n      if (checkIfOnlyDeclares(path)) return;\n      createTsRouterFile({\n        turn,\n        baseRouter,\n        ctorPath,\n        routerPath,\n        path,\n        fileType,\n        urlRoot: root,\n        routers\n      });\n    }\n  });\n}\n\nfunction checkIfOnlyDeclares(p: string): any {\n  return p.endsWith(\".d.ts\");\n}\n\nfunction createTsRouterFile({\n  turn,\n  baseRouter,\n  ctorPath,\n  routerPath,\n  path,\n  fileType,\n  urlRoot,\n  routers\n}: {\n  turn: number;\n  baseRouter: string;\n  ctorPath: string;\n  routerPath: string;\n  path: string;\n  fileType: string;\n  urlRoot: string;\n  routers: IRouter;\n}) {\n  try {\n    // 尝试按照新版逻辑解析Controller\n    const commonName = path.split(\".\")[0];\n    const controller = require(`${ctorPath}/${commonName}`);\n    // 找不到router源定义，静默退出\n    if (!controller.prototype[\"@router\"]) return;\n    const sourceCtor = GlobalImplements.get(controller);\n    // 无法解析控制器数据，则判断是老版本的Router\n    if (!sourceCtor) return;\n    const file = createFile(\n      routerPath,\n      baseRouter,\n      commonName,\n      turn,\n      fileType,\n      urlRoot\n    );\n    const _PATH = `${routerPath}/${commonName}.${fileType}`;\n    if (fs.existsSync(_PATH)) {\n      const oldFile = fs.readFileSync(_PATH, { flag: \"r\" });\n      const content = (oldFile.toString() || \"\").split(\"\\n\");\n      // 存在router.js文件，且内容一致，不做处理直接退出\n      if (content[1] === file[1] && content[3] === file[3]) return;\n    }\n    // 复写router.js文件\n    fs.appendFileSync(_PATH, file.join(\"\\n\"), { flag: \"w\" });\n    routers[`${commonName}.${fileType}`] = \"success\";\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction createFile(\n  routerPath: string,\n  baseRouter: string,\n  commonName: string,\n  turn: number,\n  fileType: string,\n  urlRoot: string\n) {\n  const controllerName =\n    routerPath === baseRouter\n      ? commonName\n      : `${routerPath\n          .replace(`${baseRouter}/`, \"\")\n          .replace(/\\//g, \".\")}.${commonName}`;\n  const turnLod = [\"..\"];\n  for (let index = 0; index \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouterCmdOptions.html":{"url":"interfaces/IRouterCmdOptions.html","title":"interface - IRouterCmdOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouterCmdOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/router/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        always\n                                \n                                \n                                            可选的\n                                        approot\n                                \n                                \n                                            可选的\n                                        config\n                                \n                                \n                                            可选的\n                                        details\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        filetype\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approot\n                                    \n                                \n                                \n                                    \n                                        approot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filetype\n                                    \n                                \n                                \n                                    \n                                        filetype:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import fn from \"./actions\";\nimport { CommandPlugin } from \"../base\";\n\nexport interface IRouterCmdOptions {\n  config?: string;\n  enabled?: boolean;\n  always?: boolean;\n  filetype?: string;\n  approot?: string;\n  details?: string;\n  tsconfig?: string;\n}\n\nexport const options: CommandPlugin = {\n  name: \"router\",\n  description: \"astroboy.ts routers cmd\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"use atc.config.js\"],\n    [\"-E, --enabled [isEnabled]\", \"open routers-auto-build\"],\n    [\"-A, --always [isAlways]\", \"set routers-always-rebuild\"],\n    [\"-F, --filetype [fileType]\", \"set routers fileType\"],\n    [\"-R, --approot [appRoot]\", \"set routers-root\"],\n    [\"-T, --tsconfig [tsconfig]\", \"set tsconfig.json\"],\n    [\"-D, --details [showRouters]\", \"show building results or not\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc router\");\n    console.log(\"    $ atc router --always\");\n    console.log(\"    $ atc router --fileType ts\");\n    console.log(\"    $ atc router --approot /v1/prj\");\n    console.log();\n  }\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IRouterMagic.html":{"url":"interfaces/IRouterMagic.html","title":"interface - IRouterMagic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IRouterMagic\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prototype\n                                \n                                \n                                        routerMeta\n                                \n                                \n                                        routes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        prototype\n                                    \n                                \n                                \n                                    \n                                        prototype:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerMeta\n                                    \n                                \n                                \n                                    \n                                        routerMeta:     IRouter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     IRouter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ISimpleLoggerOptions.html":{"url":"interfaces/ISimpleLoggerOptions.html","title":"interface - ISimpleLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ISimpleLoggerOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/simple-logger/options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     SimpleLogLevel | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     SimpleLogLevel | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../../services/Configs\";\nimport { SimpleLogLevel } from \"./base\";\n\nexport interface ISimpleLoggerOptions {\n  level: SimpleLogLevel | number;\n}\n\nexport const defaultSimpleLoggerOptions: ISimpleLoggerOptions = {\n  level: SimpleLogLevel.WARN\n};\n\nexport const SIMPLE_LOGGER_OPTIONS = createOptions(\n  \"SIMPLE_LOGGER_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStaticSerializeOptions.html":{"url":"interfaces/IStaticSerializeOptions.html","title":"interface - IStaticSerializeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStaticSerializeOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IStaticTypeResolver.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Constructor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Constructor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\n\nexport interface IStaticSerializeOptions {\n  format: boolean;\n  type: Constructor;\n}\n\nexport interface IStaticTypedResolver {\n  /** Convert static typed instance to JSON text */\n  ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string;\n  /** Convert JSON text to static typed instance */\n  FromJSON(json: string, type?: Constructor): T;\n  /** Convert static typed instance to javascript object */\n  ToObject(\n    obj: any,\n    options?: Partial>\n  ): any;\n  /** Convert javascript object to static typed instance */\n  FromObject(json: any, type?: Constructor): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IStaticTypedResolver.html":{"url":"interfaces/IStaticTypedResolver.html","title":"interface - IStaticTypedResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IStaticTypedResolver\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IStaticTypeResolver.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    FromJSON\n                                \n                                \n                                    FromObject\n                                \n                                \n                                    ToJSON\n                                \n                                \n                                    ToObject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nFromJSON(json: string, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:15\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert JSON text to static typed instance \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nFromObject(json: any, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:22\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert javascript object to static typed instance \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \nToJSON(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:10\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert static typed instance to JSON text \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToObject\n                            \n                            \n                        \n                    \n                \n                \n                    \nToObject(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IStaticTypeResolver.ts:17\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Convert static typed instance to javascript object \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\n\nexport interface IStaticSerializeOptions {\n  format: boolean;\n  type: Constructor;\n}\n\nexport interface IStaticTypedResolver {\n  /** Convert static typed instance to JSON text */\n  ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string;\n  /** Convert JSON text to static typed instance */\n  FromJSON(json: string, type?: Constructor): T;\n  /** Convert static typed instance to javascript object */\n  ToObject(\n    obj: any,\n    options?: Partial>\n  ): any;\n  /** Convert javascript object to static typed instance */\n  FromObject(json: any, type?: Constructor): T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IView.html":{"url":"interfaces/IView.html","title":"interface - IView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IView\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/configs/view.config.ts\n        \n\n            \n                描述\n            \n            \n                Astroboy的配置的view结构\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cache\n                                \n                                \n                                        defaultExtension\n                                \n                                \n                                        defaultViewEngine\n                                \n                                \n                                        mapping\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultExtension\n                                    \n                                \n                                \n                                    \n                                        defaultExtension:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultViewEngine\n                                    \n                                \n                                \n                                    \n                                        defaultViewEngine:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                    \n                                \n                                \n                                    \n                                        mapping:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createConfig } from \"../services/Configs\";\n\n/**\n * Astroboy的配置的view结构\n * @description\n * @author Big Mogician\n * @interface IView\n */\ninterface IView {\n  cache: boolean;\n  root: string;\n  defaultExtension: string;\n  defaultViewEngine: string;\n  mapping: { [prop: string]: any };\n}\n\nexport const defaultView: Partial = {};\n\n/** astroboy view config */\nexport const CONFIG_VIEW = createConfig(\"view\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/IViewEngine.html":{"url":"interfaces/IViewEngine.html","title":"interface - IViewEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  IViewEngine\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/typings/IViewEngine.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            方法\n                        \n                    \n                    \n                        \n                            \n                                \n                                    render\n                                \n                                \n                                    renderString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender(path: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IViewEngine.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Async\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderString\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenderString(path: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/typings/IViewEngine.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Async\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Async } from \"./IResult\";\n\nexport interface IViewEngine {\n  render(path: string, configs: any): Async;\n  renderString(path: string, configs: any): Async;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerCmdConfig.html":{"url":"interfaces/InnerCmdConfig.html","title":"interface - InnerCmdConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerCmdConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n            \n                继承\n            \n            \n                    CmdConfig\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        env\n                                \n                                \n                                            可选的\n                                        exec\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                    \n                                \n                                \n                                    \n                                        env:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/InnerRouterOptions.html":{"url":"interfaces/InnerRouterOptions.html","title":"interface - InnerRouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  InnerRouterOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/router.options.ts\n        \n\n\n            \n                继承\n            \n            \n                    RouterOptions\n            \n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctorFolder\n                                \n                                \n                                        routerFolder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctorFolder\n                                    \n                                \n                                \n                                    \n                                        ctorFolder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerFolder\n                                    \n                                \n                                \n                                    \n                                        routerFolder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerRouterOptions extends RouterOptions {\n  ctorFolder: string;\n  routerFolder: string;\n}\n\nexport interface RouterOptions {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\nexport const defaultRouterOptions: InnerRouterOptions = {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n};\n\nexport const ROUTER_OPTIONS = createOptions(\"ROUTER_OPTIONS\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/JsonResult.html":{"url":"classes/JsonResult.html","title":"class - JsonResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  JsonResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/results/json.ts\n        \n\n            \n                描述\n            \n            \n                Body序列化约定实现\n\n按照约定将内容序列化到body响应中\n\n\n            \n\n\n            \n                实现\n            \n            \n                        IResult\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                toResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(value: any, configs?: Partial)\n                    \n                \n                        \n                            \n                                被定义在 src/results/json.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            是\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoResult(undefined: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/results/json.ts:32\n                            \n                        \n\n\n                \n                    \n                            将json对象序列化写入body\n\n@框架调用方法，请勿手动调用\n\n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import camel from \"camelcase\";\nimport decamel from \"decamelize\";\nimport set from \"lodash/set\";\nimport { IResult, IResultScope } from \"../typings/IResult\";\nimport { JsonResultOptions, JSON_RESULT_OPTIONS } from \"../options\";\nimport { resolveKeys } from \"../utils\";\n\n/**\n * ## Body序列化约定实现\n * * 按照约定将内容序列化到body响应中\n * @description\n * @author Big Mogician\n * @export\n * @class JsonResult\n * @implements {IResult}\n */\nexport class JsonResult implements IResult {\n  constructor(\n    private value: any,\n    private configs?: Partial\n  ) {}\n\n  /**\n   * ### 将json对象序列化写入body\n   * * @框架调用方法，请勿手动调用\n   * @description\n   * @author Big Mogician\n   * @param {IResultScope} { configs }\n   * @returns {string}\n   * @memberof JsonResult\n   */\n  toResult({ configs }: IResultScope): string {\n    const {\n      format,\n      whiteSpace: b,\n      keyResolver: r,\n      jsonTemplate: tpl,\n      jsonTplKey: tplKey\n    } = {\n      ...configs.get(JSON_RESULT_OPTIONS),\n      ...this.configs\n    };\n    let value = this.value || {};\n    if (tpl) {\n      const n = { ...tpl };\n      if (tplKey) set(n, tplKey, value);\n      value = n;\n    }\n    return JSON.stringify(\n      !r ? value : resolveKeys(r, value),\n      null,\n      decideWhiteSpace(format, b)\n    );\n  }\n}\n\nfunction decideWhiteSpace(format: boolean, b: 0 | 1 | 2 | 4) {\n  if (!format) return \"\";\n  switch (b) {\n    case 4:\n      return \"    \";\n    case 2:\n      return \"  \";\n    case 1:\n      return \" \";\n    case 0:\n      return \"\";\n    default:\n      return \"\";\n  }\n}\n\nfunction camelCase(key: string) {\n  return camel(key);\n}\n\nfunction snakeCase(key: string) {\n  return decamel(key, \"_\");\n}\n\nexport const JsonResolvers = {\n  camelcase: camelCase,\n  snakecase: snakeCase\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/JsonResultOptions.html":{"url":"interfaces/JsonResultOptions.html","title":"interface - JsonResultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  JsonResultOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/json.options.ts\n        \n\n            \n                描述\n            \n            \n                配置JsonResult的解析方式\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                            可选的\n                                        jsonTemplate\n                                \n                                \n                                            可选的\n                                        jsonTplKey\n                                \n                                \n                                            可选的\n                                        keyResolver\n                                \n                                \n                                        whiteSpace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否进行格式化 - 默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonTemplate\n                                    \n                                \n                                \n                                    \n                                        jsonTemplate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    json模板 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonTplKey\n                                    \n                                \n                                \n                                    \n                                        jsonTplKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    json模板上写入内容的字段位置 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyResolver\n                                    \n                                \n                                \n                                    \n                                        keyResolver:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    对象键值处理函数 - 默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whiteSpace\n                                    \n                                \n                                \n                                    \n                                        whiteSpace:     \"0\" | \"1\" | \"2\" | \"4\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"0\" | \"1\" | \"2\" | \"4\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    格式化空格数量 - 默认：2 \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\n/**\n * ## 配置JsonResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface JsonResultOptions\n */\nexport interface JsonResultOptions {\n  /** 是否进行格式化 - 默认：`false` */\n  format: boolean;\n  /** 格式化空格数量 - 默认：`2` */\n  whiteSpace: 0 | 1 | 2 | 4;\n  /** 对象键值处理函数 - 默认：`undefined` */\n  keyResolver?: (key: string) => string;\n  /** json模板 - 默认：`undefined` */\n  jsonTemplate?: { [prop: string]: any };\n  /** json模板上写入内容的字段位置 - 默认：`undefined` */\n  jsonTplKey?: string;\n}\n\nexport const defaultJsonResultOptions: JsonResultOptions = {\n  format: false,\n  whiteSpace: 2,\n  keyResolver: undefined,\n  jsonTemplate: undefined,\n  jsonTplKey: undefined\n};\n\nexport const JSON_RESULT_OPTIONS = createOptions(\n  \"JSON_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/NormalizedMessage.html":{"url":"classes/NormalizedMessage.html","title":"class - NormalizedMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  NormalizedMessage\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/NormalizedMessage.ts\n        \n\n\n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                character\n                            \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                content\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                file\n                            \n                            \n                                    Public\n                                    Readonly\n                                    可选的\n                                line\n                            \n                            \n                                    Public\n                                    Readonly\n                                severity\n                            \n                            \n                                    Static\n                                    Readonly\n                                SEVERITY_ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                SEVERITY_WARNING\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                            \n                                    Static\n                                    Readonly\n                                TYPE_DIAGNOSTIC\n                            \n                            \n                                    Static\n                                    Readonly\n                                TYPE_LINT\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compare\n                            \n                            \n                                    Static\n                                compareNumbers\n                            \n                            \n                                    Static\n                                compareOptionalStrings\n                            \n                            \n                                    Static\n                                compareSeverities\n                            \n                            \n                                    Static\n                                compareTypes\n                            \n                            \n                                    Static\n                                createFromJSON\n                            \n                            \n                                    Static\n                                deduplicate\n                            \n                            \n                                    Static\n                                equals\n                            \n                            \n                                    Public\n                                getFormattedCode\n                            \n                            \n                                    Public\n                                isDiagnosticType\n                            \n                            \n                                    Public\n                                isErrorSeverity\n                            \n                            \n                                    Public\n                                isLintType\n                            \n                            \n                                    Public\n                                isWarningSeverity\n                            \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(data: NormalizedMessageJson)\n                    \n                \n                        \n                            \n                                被定义在 src/cmd/utils/NormalizedMessage.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    NormalizedMessageJson\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            character\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string | number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                可选的\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     number\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SEVERITY_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"error\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SEVERITY_WARNING\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Severity\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"warning\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TYPE_DIAGNOSTIC\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"diagnostic\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TYPE_LINT\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ErrorType\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"lint\"\n                        \n                    \n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compare(messageA: NormalizedMessage, messageB: NormalizedMessage)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messageA\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        messageB\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareNumbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareNumbers(numberA?: number, numberB?: number)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        numberA\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numberB\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareOptionalStrings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareOptionalStrings(stringA?: string, stringB?: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        stringA\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        stringB\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareSeverities\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareSeverities(severityA: Severity, severityB: Severity)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        severityA\n                                                        \n                                                                    Severity\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        severityB\n                                                        \n                                                                    Severity\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareTypes(typeA: ErrorType, typeB: ErrorType)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        typeA\n                                                        \n                                                                    ErrorType\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        typeB\n                                                        \n                                                                    ErrorType\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createFromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFromJSON(json: NormalizedMessageJson)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    NormalizedMessageJson\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     NormalizedMessage\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            deduplicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deduplicate(messages: NormalizedMessage[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messages\n                                                        \n                                                                    NormalizedMessage[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            equals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        equals(messageA: NormalizedMessage, messageB: NormalizedMessage)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        messageA\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        messageB\n                                                        \n                                                                    NormalizedMessage\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormattedCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormattedCode()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     string | number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDiagnosticType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDiagnosticType()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isErrorSeverity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isErrorSeverity()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLintType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isLintType()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isWarningSeverity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isWarningSeverity()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toJSON()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/cmd/utils/NormalizedMessage.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     NormalizedMessageJson\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type ErrorType = \"diagnostic\" | \"lint\";\nexport type Severity = \"error\" | \"warning\";\n\ninterface NormalizedMessageJson {\n  type: ErrorType;\n  code: string | number;\n  severity: Severity;\n  content: string;\n  file?: string;\n  line?: number;\n  character?: number;\n}\n\nexport class NormalizedMessage {\n  public static readonly TYPE_DIAGNOSTIC: ErrorType = \"diagnostic\";\n  public static readonly TYPE_LINT: ErrorType = \"lint\";\n\n  // severity types\n  public static readonly SEVERITY_ERROR: Severity = \"error\";\n  public static readonly SEVERITY_WARNING: Severity = \"warning\";\n\n  public readonly type: ErrorType;\n  public readonly code: string | number;\n  public readonly severity: Severity;\n  public readonly content: string;\n  public readonly file?: string;\n  public readonly line?: number;\n  public readonly character?: number;\n\n  constructor(data: NormalizedMessageJson) {\n    this.type = data.type;\n    this.code = data.code;\n    this.severity = data.severity;\n    this.content = data.content;\n    this.file = data.file;\n    this.line = data.line;\n    this.character = data.character;\n  }\n\n  public static createFromJSON(json: NormalizedMessageJson) {\n    return new NormalizedMessage(json);\n  }\n\n  public static compare(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    if (!(messageA instanceof NormalizedMessage)) {\n      return -1;\n    }\n    if (!(messageB instanceof NormalizedMessage)) {\n      return 1;\n    }\n\n    return (\n      NormalizedMessage.compareTypes(messageA.type, messageB.type) ||\n      NormalizedMessage.compareOptionalStrings(messageA.file, messageB.file) ||\n      NormalizedMessage.compareSeverities(\n        messageA.severity,\n        messageB.severity\n      ) ||\n      NormalizedMessage.compareNumbers(messageA.line, messageB.line) ||\n      NormalizedMessage.compareNumbers(\n        messageA.character,\n        messageB.character\n      ) ||\n      // code can be string (lint failure) or number (typescript error) - should the following line cater for this in some way?\n      NormalizedMessage.compareOptionalStrings(\n        messageA.code as string,\n        messageB.code as string\n      ) ||\n      NormalizedMessage.compareOptionalStrings(\n        messageA.content,\n        messageB.content\n      ) ||\n      0 /* EqualTo */\n    );\n  }\n\n  public static equals(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    return this.compare(messageA, messageB) === 0;\n  }\n\n  public static deduplicate(messages: NormalizedMessage[]) {\n    return messages.sort(NormalizedMessage.compare).filter((message, index) => {\n      return (\n        index === 0 || !NormalizedMessage.equals(message, messages[index - 1])\n      );\n    });\n  }\n\n  public static compareTypes(typeA: ErrorType, typeB: ErrorType) {\n    const priorities = [typeA, typeB].map(type => {\n      return [\n        NormalizedMessage.TYPE_LINT /* 0 */,\n        NormalizedMessage.TYPE_DIAGNOSTIC /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareSeverities(severityA: Severity, severityB: Severity) {\n    const priorities = [severityA, severityB].map(type => {\n      return [\n        NormalizedMessage.SEVERITY_WARNING /* 0 */,\n        NormalizedMessage.SEVERITY_ERROR /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareOptionalStrings(stringA?: string, stringB?: string) {\n    if (stringA === stringB) {\n      return 0;\n    }\n    if (stringA === undefined || stringA === null) {\n      return -1;\n    }\n    if (stringB === undefined || stringB === null) {\n      return 1;\n    }\n\n    return stringA.toString().localeCompare(stringB.toString());\n  }\n\n  public static compareNumbers(numberA?: number, numberB?: number) {\n    if (numberA === numberB) {\n      return 0;\n    }\n    if (numberA === undefined || numberA === null) {\n      return -1;\n    }\n    if (numberB === undefined || numberB === null) {\n      return 1;\n    }\n    return numberA - numberB;\n  }\n\n  public toJSON() {\n    return {\n      type: this.type,\n      code: this.code,\n      severity: this.severity,\n      content: this.content,\n      file: this.file,\n      line: this.line,\n      character: this.character\n    } as NormalizedMessageJson;\n  }\n\n  public isDiagnosticType() {\n    return NormalizedMessage.TYPE_DIAGNOSTIC === this.type;\n  }\n\n  public isLintType() {\n    return NormalizedMessage.TYPE_LINT === this.type;\n  }\n\n  public getFormattedCode() {\n    return this.isDiagnosticType() ? \"TS\" + this.code : this.code;\n  }\n\n  public isErrorSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_ERROR;\n  }\n\n  public isWarningSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_WARNING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/NormalizedMessageJson.html":{"url":"interfaces/NormalizedMessageJson.html","title":"interface - NormalizedMessageJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  NormalizedMessageJson\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/utils/NormalizedMessage.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        character\n                                \n                                \n                                        code\n                                \n                                \n                                        content\n                                \n                                \n                                            可选的\n                                        file\n                                \n                                \n                                            可选的\n                                        line\n                                \n                                \n                                        severity\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        character\n                                    \n                                \n                                \n                                    \n                                        character:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                    \n                                \n                                \n                                    \n                                        line:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        severity\n                                    \n                                \n                                \n                                    \n                                        severity:     Severity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Severity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ErrorType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ErrorType = \"diagnostic\" | \"lint\";\nexport type Severity = \"error\" | \"warning\";\n\ninterface NormalizedMessageJson {\n  type: ErrorType;\n  code: string | number;\n  severity: Severity;\n  content: string;\n  file?: string;\n  line?: number;\n  character?: number;\n}\n\nexport class NormalizedMessage {\n  public static readonly TYPE_DIAGNOSTIC: ErrorType = \"diagnostic\";\n  public static readonly TYPE_LINT: ErrorType = \"lint\";\n\n  // severity types\n  public static readonly SEVERITY_ERROR: Severity = \"error\";\n  public static readonly SEVERITY_WARNING: Severity = \"warning\";\n\n  public readonly type: ErrorType;\n  public readonly code: string | number;\n  public readonly severity: Severity;\n  public readonly content: string;\n  public readonly file?: string;\n  public readonly line?: number;\n  public readonly character?: number;\n\n  constructor(data: NormalizedMessageJson) {\n    this.type = data.type;\n    this.code = data.code;\n    this.severity = data.severity;\n    this.content = data.content;\n    this.file = data.file;\n    this.line = data.line;\n    this.character = data.character;\n  }\n\n  public static createFromJSON(json: NormalizedMessageJson) {\n    return new NormalizedMessage(json);\n  }\n\n  public static compare(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    if (!(messageA instanceof NormalizedMessage)) {\n      return -1;\n    }\n    if (!(messageB instanceof NormalizedMessage)) {\n      return 1;\n    }\n\n    return (\n      NormalizedMessage.compareTypes(messageA.type, messageB.type) ||\n      NormalizedMessage.compareOptionalStrings(messageA.file, messageB.file) ||\n      NormalizedMessage.compareSeverities(\n        messageA.severity,\n        messageB.severity\n      ) ||\n      NormalizedMessage.compareNumbers(messageA.line, messageB.line) ||\n      NormalizedMessage.compareNumbers(\n        messageA.character,\n        messageB.character\n      ) ||\n      // code can be string (lint failure) or number (typescript error) - should the following line cater for this in some way?\n      NormalizedMessage.compareOptionalStrings(\n        messageA.code as string,\n        messageB.code as string\n      ) ||\n      NormalizedMessage.compareOptionalStrings(\n        messageA.content,\n        messageB.content\n      ) ||\n      0 /* EqualTo */\n    );\n  }\n\n  public static equals(\n    messageA: NormalizedMessage,\n    messageB: NormalizedMessage\n  ) {\n    return this.compare(messageA, messageB) === 0;\n  }\n\n  public static deduplicate(messages: NormalizedMessage[]) {\n    return messages.sort(NormalizedMessage.compare).filter((message, index) => {\n      return (\n        index === 0 || !NormalizedMessage.equals(message, messages[index - 1])\n      );\n    });\n  }\n\n  public static compareTypes(typeA: ErrorType, typeB: ErrorType) {\n    const priorities = [typeA, typeB].map(type => {\n      return [\n        NormalizedMessage.TYPE_LINT /* 0 */,\n        NormalizedMessage.TYPE_DIAGNOSTIC /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareSeverities(severityA: Severity, severityB: Severity) {\n    const priorities = [severityA, severityB].map(type => {\n      return [\n        NormalizedMessage.SEVERITY_WARNING /* 0 */,\n        NormalizedMessage.SEVERITY_ERROR /* 1 */\n      ].indexOf(type);\n    });\n\n    return priorities[0] - priorities[1];\n  }\n\n  public static compareOptionalStrings(stringA?: string, stringB?: string) {\n    if (stringA === stringB) {\n      return 0;\n    }\n    if (stringA === undefined || stringA === null) {\n      return -1;\n    }\n    if (stringB === undefined || stringB === null) {\n      return 1;\n    }\n\n    return stringA.toString().localeCompare(stringB.toString());\n  }\n\n  public static compareNumbers(numberA?: number, numberB?: number) {\n    if (numberA === numberB) {\n      return 0;\n    }\n    if (numberA === undefined || numberA === null) {\n      return -1;\n    }\n    if (numberB === undefined || numberB === null) {\n      return 1;\n    }\n    return numberA - numberB;\n  }\n\n  public toJSON() {\n    return {\n      type: this.type,\n      code: this.code,\n      severity: this.severity,\n      content: this.content,\n      file: this.file,\n      line: this.line,\n      character: this.character\n    } as NormalizedMessageJson;\n  }\n\n  public isDiagnosticType() {\n    return NormalizedMessage.TYPE_DIAGNOSTIC === this.type;\n  }\n\n  public isLintType() {\n    return NormalizedMessage.TYPE_LINT === this.type;\n  }\n\n  public getFormattedCode() {\n    return this.isDiagnosticType() ? \"TS\" + this.code : this.code;\n  }\n\n  public isErrorSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_ERROR;\n  }\n\n  public isWarningSeverity() {\n    return this.severity === NormalizedMessage.SEVERITY_WARNING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/NunjunksEngine.html":{"url":"injectables/NunjunksEngine.html","title":"injectable - NunjunksEngine","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  NunjunksEngine\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/nunjunks/core.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                @configs\n                            \n                            \n                                    Private\n                                @loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEnv\n                            \n                            \n                                    Public\n                                    Async\n                                render\n                            \n                            \n                                    Public\n                                    Async\n                                renderString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configs\n                                \n                                \n                                    loader\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(cfg: Configs, rs: Render)\n                    \n                \n                        \n                            \n                                被定义在 src/plugins/nunjunks/core.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        cfg\n                                                  \n                                                        \n                                                                    Configs\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                                \n                                                        rs\n                                                  \n                                                        \n                                                                    Render\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createEnv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createEnv(configs?: INunjunksRenderOptions)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                        \n                                                                    INunjunksRenderOptions\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        render(name: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            renderString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        renderString(tpl: string, configs: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            @configs\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     INunjunksRenderOptions\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            @loader\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     FileSystemLoader\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/nunjunks/core.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        configs\n                    \n                \n\n                \n                    \n                        getconfigs()\n                    \n                \n                            \n                                \n                                    被定义在 src/plugins/nunjunks/core.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n\n                \n                    \n                        getloader()\n                    \n                \n                            \n                                \n                                    被定义在 src/plugins/nunjunks/core.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"../../decorators/injectable\";\nimport { Render } from \"../../services/Render\";\nimport { IViewEngine } from \"../../typings/IViewEngine\";\nimport { Configs } from \"../../services/Configs\";\nimport { NUNJUNKS_OPTIONS, INunjunksRenderOptions } from \"./options\";\nimport { FileSystemLoader, Environment } from \"nunjucks\";\n\n@Injectable()\nexport class NunjunksEngine implements IViewEngine {\n  private \"@configs\": INunjunksRenderOptions;\n  private \"@loader\": FileSystemLoader;\n\n  private get configs() {\n    return (\n      this[\"@configs\"] || (this[\"@configs\"] = this.cfg.get(NUNJUNKS_OPTIONS))\n    );\n  }\n\n  private get loader() {\n    return (\n      this[\"@loader\"] ||\n      (this[\"@loader\"] = new FileSystemLoader(this.configs.root, {\n        noCache: !this.configs.cache\n      }))\n    );\n  }\n\n  private createEnv(configs?: INunjunksRenderOptions) {\n    return new Environment(\n      this.loader,\n      !configs ? this.configs : { ...this.configs, ...configs }\n    );\n  }\n\n  constructor(private cfg: Configs, private rs: Render) {}\n\n  public async render(name: string, configs: any): Promise {\n    return this.createEnv(configs).render(name, this.rs.views);\n  }\n\n  public async renderString(tpl: string, configs: any): Promise {\n    return this.createEnv(configs).renderString(tpl, this.rs.views);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/ParamsOptions.html":{"url":"interfaces/ParamsOptions.html","title":"interface - ParamsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  ParamsOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        transform\n                                \n                                \n                                        useStatic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        transform\n                                    \n                                \n                                \n                                    \n                                        transform:     ParamsResolver\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ParamsResolver\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useStatic\n                                    \n                                \n                                \n                                    \n                                        useStatic:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RealConfigCollection.html":{"url":"classes/RealConfigCollection.html","title":"class - RealConfigCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RealConfigCollection\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Configs.ts\n        \n\n\n\n            \n                实现\n            \n            \n                        IConfigCollection\n            \n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                toArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map()\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Configs.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(token: ConfigToken)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:33\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    ConfigToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(token: ConfigToken, entry: T)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:29\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    ConfigToken\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toArray()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Configs.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     ConfigEntry[]\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IConfigCollection,\n  ConfigsCollection as ReadonlyConfigs\n} from \"@bonbons/di\";\n\nexport { InjectScope } from \"@bonbons/di\";\n\nexport interface ConfigToken {\n  key: symbol;\n}\n\nexport interface ConfigEntry {\n  token: ConfigToken;\n  value: T;\n}\n\nexport type TokenGenerator = (key: string) => ConfigToken;\n\nexport const createOptions: TokenGenerator = (key: string) => ({\n  key: Symbol(key)\n});\nexport const createConfig: TokenGenerator = (key: string) => ({\n  key: Symbol(`config::${key}`)\n});\n\nexport class RealConfigCollection implements IConfigCollection {\n  private map = new Map();\n\n  public set(token: ConfigToken, entry: T) {\n    this.map.set(token.key, { value: entry });\n  }\n\n  public get(token: ConfigToken): T {\n    const entry = this.map.get(token.key);\n    return entry && entry.value;\n  }\n\n  public toArray(): ConfigEntry[] {\n    return Array.from(this.map.entries()).map(([sb, { value }]) => ({\n      token: { key: sb },\n      value\n    }));\n  }\n}\n\nexport namespace Configs {\n  export interface Contract extends ReadonlyConfigs {}\n}\n\n/**\n * ## 全局配置容器\n * @description\n * @author Big Mogician\n * @export\n * @abstract\n * @class Configs\n * @implements {ReadonlyConfigs}\n */\nexport abstract class Configs implements Configs.Contract {\n  /**\n   * ### 解析并获得token对应的配置信息\n   * @description\n   * @author Big Mogician\n   * @abstract\n   * @template T\n   * @param {ConfigToken} token\n   * @returns {T}\n   * @memberof Configs\n   */\n  abstract get(token: ConfigToken): T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Render.html":{"url":"injectables/Render.html","title":"injectable - Render","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Render\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Render.ts\n        \n\n            \n                描述\n            \n            \n                统一渲染服务\n\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _views\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                            \n                                    Public\n                                setView\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    views\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(context: AstroboyContext)\n                    \n                \n                        \n                            \n                                被定义在 src/services/Render.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    AstroboyContext\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:52\n                            \n                        \n\n\n                \n                    \n                            Render init\n\n重载方法已实现新的初始化逻辑\n\n\n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(obj: literal type, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(key: string, obj: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(key: string, obj: any, options: Partial)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setView(...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Render.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _views\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     any\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Render.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        views\n                    \n                \n\n                \n                    \n                        getviews()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/Render.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import isPlainObject from \"lodash/isPlainObject\";\nimport set from \"lodash/set\";\nimport { Injectable } from \"../decorators\";\nimport { AstroboyContext } from \"./AstroboyContext\";\nimport { resolveKeys } from \"../utils\";\nimport { JsonResolvers } from \"../results/json\";\n\ninterface IGlobalSetOptions {\n  toSnake: boolean;\n}\n\nexport namespace Render {\n  export interface Contract {\n    readonly views: any;\n    setView(obj: { [prop: string]: any }): void;\n    setView(\n      obj: { [prop: string]: any },\n      options: Partial\n    ): void;\n    setView(key: string, obj: any): void;\n    setView(key: string, obj: any, options: Partial): void;\n  }\n}\n\n/**\n * ## 统一渲染服务\n * @description\n * @author Big Mogician\n * @export\n * @class Render\n */\n@Injectable()\nexport class Render implements Render.Contract {\n  private _views: any = {};\n\n  public get views() {\n    return this._views;\n  }\n\n  constructor(protected context: AstroboyContext) {\n    this.init();\n  }\n\n  /**\n   * ## Render init\n   * * 重载方法已实现新的初始化逻辑\n   * @description\n   * @author Big Mogician\n   * @protected\n   * @memberof Render\n   */\n  protected init() {}\n\n  public setView(obj: { [prop: string]: any }): void;\n  public setView(\n    obj: { [prop: string]: any },\n    options: Partial\n  ): void;\n  public setView(key: string, obj: any): void;\n  public setView(\n    key: string,\n    obj: any,\n    options: Partial\n  ): void;\n  public setView(...args: any[]) {\n    const [p1, p2, p3] = args;\n    let toSnake = false;\n    let isObj = false;\n    let keyStr: string = undefined;\n    let toSave: any = undefined;\n    if (isPlainObject(p1)) {\n      const { toSnake: toS = false } = >(p2 || {});\n      toSnake = toS;\n      isObj = true;\n      toSave = p1;\n    } else {\n      const { toSnake: toS = false } = >(p3 || {});\n      toSnake = toS;\n      keyStr = p1;\n      toSave = p2;\n    }\n    if (isObj) {\n      this._views = {\n        ...this._views,\n        ...(toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {})\n      };\n    } else {\n      set(\n        this._views,\n        keyStr,\n        toSnake\n          ? resolveKeys(JsonResolvers.snakecase, toSave || {})\n          : toSave || {}\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/RenderResult.html":{"url":"classes/RenderResult.html","title":"class - RenderResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  RenderResult\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/results/render.ts\n        \n\n            \n                描述\n            \n            \n                Body渲染约定的实现\n\n按照约定将模板渲染到body相应中\n\n\n            \n\n\n            \n                实现\n            \n            \n                        IResult\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configs\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                toResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(value: string | Partial)\n                    \n                \n                        \n                            \n                                被定义在 src/results/render.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string | Partial\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configs\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Partial\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/results/render.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            toResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toResult(undefined: IResultScope)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/results/render.ts:27\n                            \n                        \n\n\n                \n                    \n                            框架调用，请勿手动调用 \n\n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    IResultScope\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import merge from \"lodash/merge\";\nimport { IResult, IResultScope } from \"../typings/IResult\";\nimport { RenderResultOptions, RENDER_RESULT_OPTIONS } from \"../options\";\nimport { Context } from \"../services/Context\";\nimport { SimpleLogger } from \"../plugins/simple-logger\";\nimport { ENV } from \"../configs/env.config\";\nimport { IContext } from \"../typings/IContext\";\nimport { Render } from \"../services/Render\";\n\n/**\n * ## Body渲染约定的实现\n * * 按照约定将模板渲染到body相应中\n * @description\n * @author Big Mogician\n * @export\n * @class RenderResult\n * @implements {IResult}\n */\nexport class RenderResult implements IResult {\n  private configs!: Partial;\n\n  constructor(value: string | Partial) {\n    this.configs = typeof value === \"string\" ? { path: value } : value;\n  }\n\n  /** 框架调用，请勿手动调用 */\n  async toResult({ injector, configs }: IResultScope): Promise {\n    const { ctx } = injector.get(Context);\n    const opts = merge(\n      {},\n      configs.get(RENDER_RESULT_OPTIONS) || {},\n      this.configs || {}\n    );\n    const {\n      root,\n      path: xpath,\n      tplStr,\n      engines,\n      astConf,\n      engine: key,\n      configs: confs\n    } = opts;\n    if (astConf && !!astConf.use) {\n      return await ctx.render(xpath, astConf.state, astConf.configs);\n    }\n    const engine = injector.get(engines[key]);\n    const path = !root ? xpath : `${root}/${xpath}`;\n    try {\n      return !tplStr\n        ? await engine.render(path, confs)\n        : await engine.renderString(tplStr, confs);\n    } catch (e) {\n      const logger = injector.get(SimpleLogger);\n      const render = injector.get(Render);\n      const { ctx } = injector.get>(Context);\n      const { env } = configs.get(ENV);\n      const errroTitle =\n        (e.name && `模板渲染错误: ${e.name}`) || \"模板渲染错误\";\n      render.setView(\"__viewError\", e);\n      logger.debug(errroTitle, e);\n      ctx.status = 500;\n      const { path: errorPath, tplStr: errorTpl, content } =\n        env === \"production\" ? opts.onError : opts.onDevError;\n      if (errorPath) return await engine.render(errorPath, confs);\n      if (errorTpl) return await engine.renderString(errorTpl, confs);\n      return (content && content(e)) || \"Internal Server Error\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RenderResultOptions.html":{"url":"interfaces/RenderResultOptions.html","title":"interface - RenderResultOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RenderResultOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/render.options.ts\n        \n\n            \n                描述\n            \n            \n                配置RenderResult的解析方式\n\n            \n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        astConf\n                                \n                                \n                                        configs\n                                \n                                \n                                        engine\n                                \n                                \n                                        engines\n                                \n                                \n                                        onDevError\n                                \n                                \n                                        onError\n                                \n                                \n                                        path\n                                \n                                \n                                        root\n                                \n                                \n                                        tplStr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        astConf\n                                    \n                                \n                                \n                                    \n                                        astConf:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    astroboy原生渲染的参数配置 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configs\n                                    \n                                \n                                \n                                    \n                                        configs:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    配置信息，将作为渲染引擎需要接受的configs字段下传，默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    默认的模板引擎，默认：\"nunjunks\" \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engines\n                                    \n                                \n                                \n                                    \n                                        engines:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板引擎DI列表，可以动态merge合并配置，默认：{ nunjunks: NunjunksEngine } \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onDevError\n                                    \n                                \n                                \n                                    \n                                        onDevError:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    当渲染错误(开发模式)需要走的执行逻辑 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onError\n                                    \n                                \n                                \n                                    \n                                        onError:     Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     Partial\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    当渲染错误(生产模式)需要走的执行逻辑 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板文件相对路径，默认：\"\" \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：undefined \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tplStr\n                                    \n                                \n                                \n                                    \n                                        tplStr:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    模板字符串，如果提供将优先使用此渲染，默认：undefined \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Constructor } from \"@bonbons/di\";\nimport { createOptions } from \"../services/Configs\";\nimport { NunjunksEngine } from \"../plugins/nunjunks\";\nimport { IViewEngine } from \"../typings/IViewEngine\";\n\n/**\n * ## 模板渲染错误处理接口\n * @description\n * @author Big Mogician\n * @interface IErrorHandler\n */\ninterface IErrorHandler {\n  /** 错误页面模板的path，默认：`undefined` */\n  path: string | false;\n  /** 错误页面字符串模板，默认：`undefined` */\n  tplStr: string | false;\n  /**\n   * 错误页面渲染函数，作为兜底的渲染能力提供，\n   * * 默认(dev)：`() => \"${错误的堆栈信息}\"\"`\n   * * 默认(prod)：`() => \"Internal Server Error\"`\n   * * 通常不要复写此字段，除非`path`或`tplStr`能够提供可用的内容\n   */\n  content: (error: Error, title?: string) => string;\n}\n\n/**\n * ## 配置RenderResult的解析方式\n * @description\n * @author Big Mogician\n * @export\n * @interface RenderResultOptions\n */\nexport interface RenderResultOptions {\n  /** astroboy原生渲染的参数配置 */\n  astConf: {\n    /** 使用原生的渲染逻辑，默认：`false` */\n    use: boolean;\n    /** 原生astroboy渲染时的`config`字段，默认：`undefined` */\n    configs: any;\n    /** 原生astroboy渲染时的`state`字段，默认：`undefined` */\n    state: any;\n  };\n  /** 模板根路径，如果提供，path将会拼装成绝对路径下到对应的渲染引擎。默认：`undefined` */\n  root: string;\n  /** 模板文件相对路径，默认：`\"\"` */\n  path: string;\n  /** 模板字符串，如果提供将优先使用此渲染，默认：`undefined` */\n  tplStr: string;\n  /** 配置信息，将作为渲染引擎需要接受的configs字段下传，默认：`undefined` */\n  configs: any;\n  /** 默认的模板引擎，默认：`\"nunjunks\"` */\n  engine: T;\n  /** 模板引擎DI列表，可以动态merge合并配置，默认：`{ nunjunks: NunjunksEngine }` */\n  engines: {\n    [prop: string]: Constructor;\n  };\n  /** 当渲染错误(生产模式)需要走的执行逻辑 */\n  onError: Partial;\n  /** 当渲染错误(开发模式)需要走的执行逻辑 */\n  onDevError: Partial;\n}\n\nexport const defaultRenderResultOptions: RenderResultOptions = {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n};\n\nfunction checkCustomError(error: Error) {\n  return error && error.name && error.name !== \"Error\";\n}\n\n/** RenderResult配置token */\nexport const RENDER_RESULT_OPTIONS = createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  Request\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/controller.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Constructor, IBaseInjectable } from \"@bonbons/di\";\nimport { Router } from \"astroboy-router\";\nimport { createInstance, GlobalImplements, getInjector } from \"../utils\";\nimport { InjectService } from \"../services/Injector\";\nimport { Context } from \"../services/Context\";\nimport { ICommonResultType, IResult } from \"../typings/IResult\";\nimport { IContext } from \"../typings/IContext\";\nimport { Configs } from \"../services/Configs\";\nimport { tryGetRouteMagic, RouteArgument } from \"./route\";\nimport { STATIC_RESOLVER } from \"../options/typed-serialize.options\";\nimport { IStaticTypedResolver } from \"../typings/IStaticTypeResolver\";\n\ndeclare module \"koa\" {\n  interface Request {\n    body: any;\n  }\n}\n\nconst INTERNAL_INJECTOR = \"$INTERNAL_INJECTOR\";\nconst $$injector = \"$$injector\";\n\n/**\n * ## 定义控制器\n * * routes部分由astroboy-router实现\n * @description\n * @author Big Mogician\n * @export\n * @param {string} prefix\n * @returns\n */\nexport function Controller(prefix: string) {\n  return function(target: Constructor) {\n    const prototype: IBaseInjectable = target.prototype;\n    prototype.__valid = true;\n    Router(prefix)(target);\n    const DI_CONTROLLER = class {\n      constructor(ctx) {\n        const injector = getInjector(ctx);\n        const controller = createInstance(target, ctx);\n        controller[INTERNAL_INJECTOR] = injector;\n        return controller;\n      }\n    };\n    Object.defineProperty(prototype, $$injector, {\n      get() {\n        return this[INTERNAL_INJECTOR];\n      },\n      configurable: false,\n      enumerable: false\n    });\n    const { routes = {} } = prototype[\"@router\"];\n    Object.getOwnPropertyNames(prototype).forEach(name => {\n      if (name === \"@router\") return;\n      if (name === \"constructor\") return;\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, name);\n      const { value, get } = descriptor;\n      if (get) return;\n      if (name in routes && value && typeof value === \"function\") {\n        const { params: routeParams } = tryGetRouteMagic(prototype, name);\n        descriptor.value = async function() {\n          const injector: InjectService = this[$$injector];\n          const { ctx } = injector.get(Context);\n          const staticResolver = injector.get(Configs).get(STATIC_RESOLVER);\n          const params = resolveRouteMethodParams(\n            routeParams,\n            ctx,\n            staticResolver\n          );\n          const result: ICommonResultType = await value.bind(this)(...params);\n          if (result) resolveMethodResult(result, ctx, injector);\n        };\n        Object.defineProperty(prototype, name, descriptor);\n      }\n    });\n    copyPrototype(DI_CONTROLLER, target);\n    GlobalImplements.set(DI_CONTROLLER, target);\n    return >DI_CONTROLLER;\n  };\n}\n\nexport function copyPrototype(\n  DI_CONTROLLER: Constructor,\n  target: Constructor\n) {\n  Object.getOwnPropertyNames(target.prototype).forEach(name => {\n    Object.defineProperty(\n      DI_CONTROLLER.prototype,\n      name,\n      Object.getOwnPropertyDescriptor(target.prototype, name)\n    );\n  });\n  // @ts-ignore\n  DI_CONTROLLER.prototype.__proto__ = target.prototype.__proto__;\n  // @ts-ignore\n  DI_CONTROLLER.__proto__ = target.__proto__;\n}\n\nfunction resolveRouteMethodParams(\n  routeParams: RouteArgument[],\n  ctx: IContext,\n  staticResolver: IStaticTypedResolver\n) {\n  const params: any[] = [];\n  routeParams.forEach(i => {\n    const { index, type, resolver, ctor, static: stac } = i;\n    let final: any;\n    if (type === \"body\") {\n      const v = !resolver ? ctx.request.body : resolver(ctx.request.body || {});\n      final = resolveStaticType(stac, ctor, v, staticResolver);\n    } else {\n      const v = !resolver\n        ? { ...ctx.query, ...ctx.params }\n        : resolver({ ...ctx.query, ...ctx.params });\n      final = resolveStaticType(stac, ctor, v, staticResolver);\n    }\n    params[index] = final;\n  });\n  return params;\n}\n\nfunction resolveStaticType(\n  stac: boolean | undefined,\n  ctor: any,\n  value: any,\n  staticResolver: IStaticTypedResolver\n) {\n  return !ctor || stac === false\n    ? value || {}\n    : typeTransform(staticResolver, value, ctor);\n}\n\nfunction typeTransform(\n  staticResolver: IStaticTypedResolver,\n  value: any,\n  ctor: any\n) {\n  switch (ctor) {\n    case Number:\n    case String:\n      return ctor(value);\n    case Boolean:\n      return String(value || \"\") === \"true\";\n    case Object:\n      return value || {};\n    default:\n      return staticResolver.FromObject(value || {}, ctor);\n  }\n}\n\nasync function resolveMethodResult(\n  result: string | IResult,\n  ctx: IContext,\n  injector: InjectService\n) {\n  if ((result).toResult) {\n    ctx.body = await (result).toResult({\n      injector,\n      configs: injector.get(Configs)\n    });\n  } else {\n    ctx.body = result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouteArgument.html":{"url":"interfaces/RouteArgument.html","title":"interface - RouteArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouteArgument\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/decorators/route.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctor\n                                \n                                \n                                        index\n                                \n                                \n                                        resolver\n                                \n                                \n                                        static\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        ctor\n                                    \n                                \n                                \n                                    \n                                        ctor:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolver\n                                    \n                                \n                                \n                                    \n                                        resolver:     ParamsResolver | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     ParamsResolver | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        static\n                                    \n                                \n                                \n                                    \n                                        static:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"params\" | \"body\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"params\" | \"body\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  APIFactory,\n  CustomRouteFactory\n} from \"astroboy-router/dist/decorators/route.factory\";\nimport { METHOD, IRouteFactory, IRouter } from \"astroboy-router/dist/metadata\";\nimport { tryGetRouter } from \"astroboy-router/dist/decorators/utils\";\nimport { getMethodParamsType } from \"../utils\";\n\nconst MAGIC_CONTENT = new Map>();\n\ntype ParamsFactory = (\n  target: T,\n  propertyKey: string,\n  index: number\n) => void;\ntype ParamsResolver = (source: T) => R;\n\ninterface ParamsOptions {\n  transform: ParamsResolver;\n  useStatic: boolean;\n}\n\nexport interface RouteArgument {\n  type: \"params\" | \"body\";\n  index: number;\n  resolver: ParamsResolver | undefined;\n  static: boolean | undefined;\n  ctor: any | undefined;\n}\n\nexport interface IRouterMagic {\n  prototype: T;\n  routerMeta: IRouter;\n  routes: {\n    [prop: string]: {\n      params: RouteArgument[];\n    };\n  };\n}\n\nexport function tryGetRouteMagic(prototype: T, key: string) {\n  const router = tryGetRouterMagic(prototype);\n  let route = router.routes[key];\n  if (!route) {\n    router.routes[key] = route = {\n      params: []\n    };\n  }\n  return route;\n}\n\nexport function tryGetRouterMagic(prototype: T) {\n  let found = MAGIC_CONTENT.get(prototype);\n  if (!found) {\n    MAGIC_CONTENT.set(\n      prototype,\n      (found = {\n        prototype,\n        routes: {},\n        routerMeta: tryGetRouter(prototype)\n      })\n    );\n  }\n  return found;\n}\n\n/**\n * ## 从request中获取params和query\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromParams(): ParamsFactory;\nexport function FromParams(options: Partial): ParamsFactory;\nexport function FromParams(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"params\"\n    });\n  };\n}\n\n/**\n * ## 从request中获取body\n * @description\n * @author Big Mogician\n * @export\n * @returns {ParamsFactory}\n */\nexport function FromBody(): ParamsFactory;\nexport function FromBody(options: Partial): ParamsFactory;\nexport function FromBody(options?: Partial) {\n  const { transform = undefined, useStatic = undefined } = options || {};\n  return function dynamic_params(\n    prototype: T,\n    propKey: string,\n    index: number\n  ) {\n    route_query({\n      prototype,\n      propKey,\n      index,\n      transform,\n      useStatic,\n      type: \"body\"\n    });\n  };\n}\n\nfunction route_query({\n  type,\n  prototype,\n  propKey,\n  index,\n  transform,\n  useStatic\n}: {\n  type: \"params\" | \"body\";\n  prototype: T;\n  propKey: string;\n  index: number;\n  transform?: any;\n  useStatic?: boolean;\n}) {\n  const types = getMethodParamsType(prototype, propKey);\n  tryGetRouteMagic(prototype, propKey).params.push({\n    ctor: resolveParamType(types[index]),\n    resolver: transform,\n    static: useStatic,\n    type,\n    index\n  });\n}\n\nfunction resolveParamType(type?: any) {\n  if (!type) return undefined;\n  if (type === Object) return undefined;\n  return type;\n}\n\nfunction addMagicForRoute(method: METHOD, path: string): IRouteFactory {\n  return function route_magic(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    APIFactory(method, path)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 最高扩展性的路由声明\n * * 使用这个扩展工厂构造Route声明\n * @description\n * @author Big Mogician\n * @export\n * @param {{\n *   method: METHOD;\n *   tpls: string[];\n *   name?: string;\n *   isIndex?: boolean;\n * }} configs\n * @returns\n */\nexport function __BASE_ROUTE_DECO_FACTORY(configs: {\n  method: METHOD;\n  tpls: string[];\n  name?: string;\n  isIndex?: boolean;\n}) {\n  return function __route_custom(\n    prototype: T,\n    propKey: string,\n    descriptor?: PropertyDescriptor\n  ) {\n    return CustomRouteFactory(configs)(prototype, propKey, descriptor);\n  };\n}\n\n/**\n * ## 定义GET请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function GET(path: string): IRouteFactory {\n  return addMagicForRoute(\"GET\", path);\n}\n\n/**\n * ## 定义PUT请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function PUT(path: string): IRouteFactory {\n  return addMagicForRoute(\"PUT\", path);\n}\n\n/**\n * ## 定义POST请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function POST(path: string): IRouteFactory {\n  return addMagicForRoute(\"POST\", path);\n}\n\n/**\n * ## 定义DELETE请求\n * @description\n * @author Big Mogician\n * @export\n * @param {string} path\n * @returns {IRouteFactory}\n */\nexport function DELETE(path: string): IRouteFactory {\n  return addMagicForRoute(\"DELETE\", path);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig.html":{"url":"interfaces/RouterConfig.html","title":"interface - RouterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    RConfig\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./src/cmd/base\";\n\nnamespace CMD {\n  export interface Env extends E {}\n  export interface RouterConfig extends RConfig {}\n  export interface Config extends CmdConfig {\n    env?: Env;\n    routers?: RouterConfig;\n  }\n\n  export function create(config: Config) {\n    return createCmdConfig(config);\n  }\n\n  export function merge(merge: Config, config: Config) {\n    return mergeCmdConfig(merge, config);\n  }\n}\n\nexport default CMD;\n\nexport {\n  E as Env,\n  RConfig as RouterConfig,\n  CmdConfig as Config,\n  createCmdConfig as create,\n  mergeCmdConfig as merge\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig-1.html":{"url":"interfaces/RouterConfig-1.html","title":"interface - RouterConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/base.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                            可选的\n                                        always\n                                \n                                \n                                            可选的\n                                        approot\n                                \n                                \n                                            可选的\n                                        details\n                                \n                                \n                                            可选的\n                                        enabled\n                                \n                                \n                                            可选的\n                                        filetype\n                                \n                                \n                                            可选的\n                                        tsconfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approot\n                                    \n                                \n                                \n                                    \n                                        approot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filetype\n                                    \n                                \n                                \n                                    \n                                        filetype:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsconfig\n                                    \n                                \n                                \n                                    \n                                        tsconfig:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            可选的\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import get from \"lodash/get\";\n\nexport interface CommandPlugin {\n  name: string;\n  description: string;\n  options: Array;\n  action: (...args: any[]) => void;\n  help: (...args: any[]) => void;\n}\n\nexport interface IENV {\n  NODE_ENV?: string;\n  NODE_PORT?: number | string;\n  [key: string]: any;\n}\n\nexport interface RouterConfig {\n  enabled?: boolean;\n  always?: boolean;\n  approot?: string;\n  filetype?: \"js\" | \"ts\";\n  details?: boolean;\n  tsconfig?: string;\n}\n\nexport interface CmdConfig {\n  tsconfig?: string;\n  inspect?: boolean;\n  env?: IENV;\n  watch?: string[] | false;\n  ignore?: string[] | false;\n  verbose?: boolean;\n  debug?: boolean | string;\n  mock?: boolean | string;\n  typeCheck?: boolean;\n  transpile?: boolean;\n  routers?: RouterConfig;\n}\n\nexport interface InnerCmdConfig extends CmdConfig {\n  env?: IENV & { __TSCONFIG?: any; __TRANSPILE?: any };\n  exec?: string;\n}\n\nexport function createCmdConfig(config: CmdConfig): CmdConfig {\n  return config;\n}\n\nexport function mergeCmdConfig(merge: CmdConfig, config: CmdConfig): CmdConfig {\n  const watch = get(merge, \"watch\", undefined);\n  const ignore = get(merge, \"ignore\", undefined);\n  const oldEnvs = get(merge, \"env\", {});\n  const newEnvs = get(config, \"env\", {});\n  return {\n    tsconfig: get(merge, \"tsconfig\", config.tsconfig),\n    inspect: get(merge, \"inspect\", config.inspect),\n    env: {\n      ...oldEnvs,\n      ...newEnvs\n    },\n    watch: !watch\n      ? config.watch\n      : config.watch !== false\n      ? [...watch, ...(config.watch || [])]\n      : [],\n    ignore: !ignore\n      ? config.ignore\n      : config.ignore !== false\n      ? [...ignore, ...(config.ignore || [])]\n      : [],\n    verbose: get(merge, \"verbose\", config.verbose),\n    debug: get(merge, \"debug\", config.debug),\n    mock: get(merge, \"mock\", config.mock),\n    typeCheck: get(merge, \"typeCheck\", config.typeCheck),\n    transpile: get(merge, \"transpile\", config.transpile),\n    routers: {\n      ...get(merge, \"routers\", {}),\n      ...get(config, \"routers\", {})\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterConfig-2.html":{"url":"interfaces/RouterConfig-2.html","title":"interface - RouterConfig-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterConfig\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/cmd/cmd.ts\n        \n\n\n            \n                继承\n            \n            \n                    RConfig\n            \n\n\n\n\n    \n\n\n    \n        import {\n  CmdConfig,\n  createCmdConfig,\n  mergeCmdConfig,\n  RouterConfig as RConfig,\n  IENV as E\n} from \"./base\";\n\n// export namespace CMD {\nexport interface Env extends E {}\nexport interface RouterConfig extends RConfig {}\nexport interface Config extends CmdConfig {\n  env?: Env;\n  routers?: RouterConfig;\n}\n\nexport function create(config: Config) {\n  return createCmdConfig(config);\n}\n\nexport function merge(merge: Config, config: Config) {\n  return mergeCmdConfig(merge, config);\n}\n// }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"interfaces/RouterOptions.html":{"url":"interfaces/RouterOptions.html","title":"interface - RouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  接口\n  RouterOptions\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/options/router.options.ts\n        \n\n\n\n        \n            索引\n            \n                \n                    \n                        \n                            属性列表\n                        \n                    \n                    \n                        \n                            \n                                \n                                        always\n                                \n                                \n                                        appRoot\n                                \n                                \n                                        enabled\n                                \n                                \n                                        fileType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                属性列表\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                    \n                                \n                                \n                                    \n                                        always:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否强制刷新2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRoot\n                                    \n                                \n                                \n                                    \n                                        appRoot:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    整个项目的url前缀，默认：'/' \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    是否自动生成2.0的routers，默认：false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     \"js\" | \"ts\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            类型 :     \"js\" | \"ts\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    生成router文件的文件类型，默认：'js' \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createOptions } from \"../services/Configs\";\n\nexport interface InnerRouterOptions extends RouterOptions {\n  ctorFolder: string;\n  routerFolder: string;\n}\n\nexport interface RouterOptions {\n  /** 是否自动生成2.0的routers，默认：`false` */\n  enabled: boolean;\n  /** 是否强制刷新2.0的routers，默认：`false` */\n  always: boolean;\n  /** 整个项目的url前缀，默认：`'/'` */\n  appRoot: string;\n  /** 生成router文件的文件类型，默认：`'js'` */\n  fileType: \"js\" | \"ts\";\n}\n\nexport const defaultRouterOptions: InnerRouterOptions = {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n};\n\nexport const ROUTER_OPTIONS = createOptions(\"ROUTER_OPTIONS\");\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/Scope.html":{"url":"injectables/Scope.html","title":"injectable - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  Scope\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/services/Scope.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _init\n                            \n                            \n                                    Private\n                                scopeId\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                begin\n                            \n                            \n                                    Public\n                                diration\n                            \n                            \n                                    Protected\n                                end\n                            \n                            \n                                    Protected\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            存取器\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            begin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        begin()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            diration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        diration()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        end()\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                返回 :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(id: ScopeID)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/services/Scope.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    ScopeID\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _init\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : false\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scopeId\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ScopeID\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Date\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Date\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/services/Scope.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        存取器\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    被定义在 src/services/Scope.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"../decorators/injectable\";\nimport { ScopeID } from \"@bonbons/di\";\n\nexport namespace Scope {\n  export interface Contract {\n    readonly id: ScopeID;\n    diration(): number;\n  }\n}\n\n@Injectable()\nexport class Scope implements Scope.Contract {\n  private _init = false;\n  private scopeId!: ScopeID;\n  private start!: Date;\n  private stop!: Date;\n\n  public get id() {\n    return this.scopeId;\n  }\n\n  protected init(id: ScopeID) {\n    if (this._init) return this;\n    this._init = true;\n    this.scopeId = id;\n    return this;\n  }\n\n  protected begin() {\n    if (!this.start) {\n      this.start = new Date();\n    }\n  }\n\n  protected end() {\n    if (!this.stop) {\n      this.stop = new Date();\n    }\n  }\n\n  public diration() {\n    if (this.start && this.stop) {\n      return this.stop.getTime() - this.start.getTime();\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"injectables/SimpleLogger.html":{"url":"injectables/SimpleLogger.html","title":"injectable - SimpleLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  可注入的\n  SimpleLogger\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/simple-logger/logger.ts\n        \n\n\n\n            \n    索引\n    \n        \n                \n                    \n                        属性列表\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pkgEnv\n                            \n                        \n                    \n                \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                    Public\n                                trace\n                            \n                            \n                                    Public\n                                trace\n                            \n                            \n                                    Public\n                                trace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    构造方法\n        \n            \n                \n                    \nconstructor(configs: Configs)\n                    \n                \n                        \n                            \n                                被定义在 src/plugins/simple-logger/logger.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                    Configs\n                                                        \n                                                  \n                                                    \n                                                            否\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(title: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(title: string, details: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debug(...msg: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(level: SimpleLogLevel, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    SimpleLogLevel\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trace(title: string)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trace(title: string, details: any)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trace(...msg: any[])\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            属性列表\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pkgEnv\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ISimpleLoggerOptions\n\n                        \n                    \n                        \n                            \n                                    被定义在 src/plugins/simple-logger/logger.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import chalk from \"chalk\";\nimport { Injectable } from \"../../decorators/injectable\";\nimport { Configs } from \"../../services/Configs\";\nimport { SIMPLE_LOGGER_OPTIONS, ISimpleLoggerOptions } from \"./options\";\nimport { SimpleLogLevel } from \"./base\";\n\nfunction createStamp(date?: Date): string {\n  const tData = date || new Date();\n  return `[${chalk.cyan(\n    `${tData.toLocaleDateString()} ${tData.toLocaleTimeString()}:${tData.getMilliseconds()}`\n  )}]-`;\n}\n\nfunction createType(type: SimpleLogLevel): string {\n  let color: string;\n  let tps: string;\n  switch (type) {\n    case SimpleLogLevel.FATAL:\n    case SimpleLogLevel.ERROR:\n      [color, tps] = [\"red\", \"ERROR\"];\n      break;\n    case SimpleLogLevel.WARN:\n      [color, tps] = [\"yellow\", \"WARN\"];\n      break;\n    case SimpleLogLevel.INFO:\n      [color, tps] = [\"blue\", \"INFO\"];\n      break;\n    case SimpleLogLevel.DEBUG:\n      [color, tps] = [\"green\", \"DEBUG\"];\n      break;\n    default:\n      [color, tps] = [\"white\", \"TRACE\"];\n  }\n  return `[${chalk[color](tps)}]-`;\n}\n\n@Injectable()\nexport class SimpleLogger {\n  private pkgEnv: ISimpleLoggerOptions;\n\n  constructor(private configs: Configs) {\n    this.pkgEnv = this.configs.get(SIMPLE_LOGGER_OPTIONS);\n  }\n\n  private log(level: SimpleLogLevel, ...args: any[]) {\n    if (level \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"classes/TypedSerializerCreator.html":{"url":"classes/TypedSerializerCreator.html","title":"class - TypedSerializerCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  类列表\n  TypedSerializerCreator\n\n\n\n        \n            API\n        \n        \n            源代码\n        \n\n\n\n    \n        \n            文件\n        \n        \n            src/plugins/typed-serializer/core.ts\n        \n\n            \n                描述\n            \n            \n                内建静态类型序列化工具类\n\n            \n\n\n            \n                实现\n            \n            \n                        IStaticTypedResolver\n            \n\n            \n                例子\n            \n            \n            \n\n            \n    索引\n    \n        \n\n                \n                    \n                        方法\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                FromJSON\n                            \n                            \n                                    Public\n                                FromObject\n                            \n                            \n                                    Public\n                                ToJSON\n                            \n                            \n                                    Public\n                                ToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            方法\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FromJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        FromJSON(json: string, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:29\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        FromObject(json: any, type?: Constructor)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:43\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    Constructor\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ToJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ToJSON(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:17\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ToObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ToObject(obj: any, options?: Partial>)\n                    \n                \n\n\n                        \n                            \n                                    被定义在 src/plugins/typed-serializer/core.ts:35\n                            \n                        \n\n                        \n                            \n                                类型参数 :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    参数列表 :\n                                    \n                                        \n                                            \n                                                名称\n                                                    类型\n                                                可选的\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            否\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    Partial>\n                                                        \n                                                    \n                                                    \n                                                            是\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                返回 :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IStaticTypedResolver,\n  IStaticSerializeOptions\n} from \"../../typings/IStaticTypeResolver\";\nimport { Serialize, Deserialize, GenericDeserialize } from \"cerialize\";\nimport { Constructor } from \"@bonbons/di\";\n\n/**\n * 内建静态类型序列化工具类\n * @description\n * @author Big Mogician\n * @export\n * @class TypedSerializerCreator\n * @implements {IStaticTypedResolver}\n */\nexport class TypedSerializerCreator implements IStaticTypedResolver {\n  public ToJSON(\n    obj: any,\n    options?: Partial>\n  ): string {\n    if (options === undefined) options = { format: false };\n    return JSON.stringify(\n      Serialize(obj, options.type),\n      null,\n      options.format ? \"  \" : 0\n    );\n  }\n\n  public FromJSON(json: string, type?: Constructor): T {\n    return !type\n      ? (Deserialize(JSON.parse(json)) as T)\n      : (GenericDeserialize(JSON.parse(json), type) as T);\n  }\n\n  public ToObject(\n    obj: any,\n    options?: Partial>\n  ): any {\n    if (options === undefined) options = { format: false };\n    return Serialize(obj, options.type);\n  }\n\n  public FromObject(json: any, type?: Constructor): T {\n    return !type\n      ? (Deserialize(json) as T)\n      : (GenericDeserialize(json, type) as T);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n迭代记录\n1.0.11-rc.4\n\nServer 部分函数支持继承树扩展\n少量代码重构\n\n1.0.11-rc.2\n\n新增 Bundles 特性支持移动 DI\n\n1.0.11\n\n更新 @bonbons/di 到 1.3.5\n增加 UT 覆盖\n\n1.0.9-rc.1\n\n[ BREAKING CHANGE ] 调整 DI 接受工厂函数的类型，工厂函数 injector 和 configs\n\n1.0.8\n\n1.0.8 功能锁定\n\n1.0.7-rc.3\n\n恢复 tsconfig-paths 支持\n\n1.0.7-rc.1\n\n调整版本策略\n\n1.0.7\n\n1.0.7 功能锁定\n调整 package 解构\n修复问题\n\n1.0.6-rc.3\n\n[ BREAKING CHANGE ] rename CMD to AtcCLI\n\n1.0.6\n\n1.0.6 功能锁定\n\n1.0.5-rc.5\n\n新增 CMD namespace\n\n1.0.5\n\n1.0.5 功能锁定\natc 支持并行类型检查，默认开启\n\n1.0.4\n\n1.0.4 功能锁定\n\n1.0.3-rc.21\n\n细节优化\n\n1.0.3-rc.16\n\n新增全局错误处理\n\n1.0.3-rc.12\n\n修复 Injectable 装饰器故障\n\n1.0.3-rc.9\n\n增强多重继承的类型化写法\nRender 新增 init 重载钩子\n\n1.0.3-rc.7\n\n[ BREAKING CHANGE ] 调整 RenderResult 的原生参数配置\n所有基础服务全部完成契约化，可以通过 class 本身的 Contract 拿到其公共接口\n增加大量文档和注释\n\n1.0.3-rc.5\n\nDI 接入的重构\nInjectable 装饰器赠加新的重载\n\n1.0.3-rc.4\n\n增加单元测试\n\n1.0.3-rc.1\n\n功能锁定 1.0.3，开始新一轮 rc\n\n1.0.2-rc.39\n\n调整了内部日志的记录方式\n增强了 RenderResult 的模板扩展能力\n强化了模板渲染异常的处理逻辑\n\n1.0.2-rc.37\n\n[ BREAKING CHANGE ] 调整配置文件参数\n增加 atc-cli 对 router 命令的 config 文件支持\n\n1.0.2-rc.35\n\n[ BREAKING CHANGE ] 去除 atc-cli 对 js 的支持，去掉参数 --ts\n调整视觉风格\n\n1.0.2-rc.31\n\n修复找不到 Controller 的问题\n修复 nunjunks 默认模板 root 路径不正确的问题\n\n1.0.2-rc.29\n\n内置 nunjunks 模板渲染引擎\n新增 Render DI 渲染服务，可以自定义实现\n\n1.0.2-rc.28\n\nastt 新增 --config 指令，允许使用配置文件启动 cli\n\n1.0.2-rc.24\n\n[ BREAKING CHANGE ] astt 更名 atc ，并支持新的 dev 命令\n\n1.0.2-rc.23\n\nastt-cli 新增 tsconfig 配置支持\nastt-cli 新增 details 配置支持\n\n1.0.2-rc.20\n\nJsonResult 内置了支持模板定制的能力\n新增 RenderResult 对象能力\n新增 CONFIG_VIEW config 描述 astroboy 的 view 配置\n\n1.0.2-rc.18\n\n新增 __BASE_ROUTE_DECO_FACTORY 装饰器，为 Route 自定义提供最高扩展性\n\n1.0.2-rc.16\n\nastt-cli 工具已加入，支持生成 routers\n\n1.0.2-rc.1\n\n锁定 1.02 功能，开始新一轮 rc\n\n1.0.1-rc.30\n\n针对 @Controller 修饰过的 ts 控制器，将自动生成对应的 router.ts 文件\n当不存在 app/routers 文件夹的时候自动创建\n提供了一个独立的初始化routers的函数来支持进行发布前的预处理\n默认不执行初始化动作，可以选择预处理或是动态处理任意一种方式来实现\n\n1.0.1-rc.22\n\n[ BREAKING CHANGE ] 重新调整 Context 和 AstroboyContext 对于 ctx 类型复写的行为\n[ BREAKING CHANGE ] Context 取消在 AstroboyContext 中公开，只在继承链路中可见\nAstroboyContext 现在支持复写 app 和 config 字段的类型\n\n1.0.1-rc.20\n\n支持 DI 多重继承的能力\n\n1.0.1-rc.18\n\n[ BREAKING CHANGE ] 移除 @bonbons/di 的定义输出，并修复部分接口\n修复 astroboy-router 的一个兼容问题\n\n1.0.1-rc.15\n\n实现路由参数注入和类型安全映射\n支持扩展基础注入器，实现路由参数字段注入\n\n1.0.1-rc.14\n\n基本功能完成\n修复一些问题\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    文档概览\n\n\n\n    \n\n\n\n    \n        \n            文件\n            类型\n            标识符\n            注释\n        \n    \n    \n        \n            \n                \n                cmd.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            function\n            create\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                cmd.ts\n            \n            function\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            interface\n            IRouter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            checkIfOnlyDeclares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            checkRouterFolders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createJsFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createTsFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            createTsRouterFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/builders.ts\n            \n            function\n            initRouters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            CmdConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            CommandPlugin\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            IENV\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            InnerCmdConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            function\n            createCmdConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/base.ts\n            \n            function\n            mergeCmdConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            interface\n            RouterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            function\n            create\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/cmd.ts\n            \n            function\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/actions.ts\n            \n            function\n            refreshToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/actions.ts\n            \n            function\n            startTypeCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            function\n            validation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/check.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/dev/options.ts\n            \n            interface\n            IDevCmdOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/dev/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/index.ts\n            \n            function\n            initCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/init.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            transpile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            tsconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/register.ts\n            \n            variable\n            tsnode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/router/actions.ts\n            \n            function\n            showRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/router/options.ts\n            \n            interface\n            IRouterCmdOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/router/options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            class\n            CancellationToken\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            interface\n            CancellationTokenData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cmd/utils/CancellationToken.ts\n            \n            function\n            existsSync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/NormalizedMessage.ts\n            \n            class\n            NormalizedMessage\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/cmd/utils/NormalizedMessage.ts\n            \n            interface\n            NormalizedMessageJson\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cmd/utils/loadConfig.ts\n            \n            function\n            loadConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            interface\n            ConfigurationFile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            createProgram\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            loadLinterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cmd/utils/typeCheck.ts\n            \n            function\n            loadProgramConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            interface\n            IENV\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            variable\n            defaultEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/env.config.ts\n            \n            variable\n            ENV\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            interface\n            IView\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            variable\n            CONFIG_VIEW\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configs/view.config.ts\n            \n            variable\n            defaultView\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            Controller\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            copyPrototype\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveMethodResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveRouteMethodParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            resolveStaticType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            function\n            typeTransform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            variable\n            $$injector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/controller.ts\n            \n            variable\n            INTERNAL_INJECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            interface\n            IInjectableConfigs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/injectable.ts\n            \n            function\n            Injectable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            IRouterMagic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            ParamsOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            interface\n            RouteArgument\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            __BASE_ROUTE_DECO_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            addMagicForRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            DELETE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            FromParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            GET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            POST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            PUT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            resolveParamType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            route_query\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            tryGetRouteMagic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            function\n            tryGetRouterMagic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/route.ts\n            \n            variable\n            MAGIC_CONTENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            interface\n            IPreProcess\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            buildRouter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preInitFn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            function\n            preInitFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/core.ts\n            \n            interface\n            IMiddlewaresScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/middlewares/core.ts\n            \n            function\n            createMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            disposeRequestScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            initRequestScope\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            function\n            tryCatchGlobalError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/index.ts\n            \n            variable\n            serverInit\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            interface\n            IGlobalErrorHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            variable\n            defaultGlobalError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/errors.options.ts\n            \n            variable\n            GLOBAL_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            interface\n            JsonResultOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            variable\n            defaultJsonResultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/json.options.ts\n            \n            variable\n            JSON_RESULT_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            interface\n            IErrorHandler\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            interface\n            RenderResultOptions\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            function\n            checkCustomError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            variable\n            defaultRenderResultOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/render.options.ts\n            \n            variable\n            RENDER_RESULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            interface\n            InnerRouterOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            interface\n            RouterOptions\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            variable\n            defaultRouterOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/router.options.ts\n            \n            variable\n            ROUTER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/options/typed-serialize.options.ts\n            \n            variable\n            STATIC_RESOLVER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/core.ts\n            \n            injectable\n            NunjunksEngine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            interface\n            INunjunksRenderOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            variable\n            defaultNunjunksOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/nunjunks/options.ts\n            \n            variable\n            NUNJUNKS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            injectable\n            SimpleLogger\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            function\n            createStamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/logger.ts\n            \n            function\n            createType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            interface\n            ISimpleLoggerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            variable\n            defaultSimpleLoggerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/simple-logger/options.ts\n            \n            variable\n            SIMPLE_LOGGER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/core.ts\n            \n            class\n            TypedSerializerCreator\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            DeserializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/defines.ts\n            \n            function\n            SerializeDefine\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/plugins/typed-serializer/index.ts\n            \n            variable\n            TypedSerializer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            class\n            JsonResult\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            camelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            decideWhiteSpace\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            function\n            snakeCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/json.ts\n            \n            variable\n            JsonResolvers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/results/render.ts\n            \n            class\n            RenderResult\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            class\n            Server\n            \n                47 %\n                (26/55)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            interface\n            FactoryContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            variable\n            _innerBundle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            variable\n            Bundles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/services/AstroboyContext.ts\n            \n            injectable\n            AstroboyContext\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/services/AstroboyContext.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/services/BaseClass.ts\n            \n            class\n            BaseClass\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/services/BaseClass.ts\n            \n            variable\n            BC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            class\n            RealConfigCollection\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            ConfigEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            ConfigToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            variable\n            createConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Configs.ts\n            \n            variable\n            createOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Context.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createInjectMixin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createProxyByDepts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Injector.ts\n            \n            function\n            createProxyByKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            injectable\n            Render\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/Render.ts\n            \n            interface\n            IGlobalSetOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/Scope.ts\n            \n            injectable\n            Scope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/services/Scope.ts\n            \n            interface\n            Contract\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IContext.ts\n            \n            interface\n            IContext\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/typings/IResult.ts\n            \n            interface\n            IResult\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/typings/IResult.ts\n            \n            interface\n            IResultScope\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IStaticTypeResolver.ts\n            \n            interface\n            IStaticSerializeOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/typings/IStaticTypeResolver.ts\n            \n            interface\n            IStaticTypedResolver\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/typings/IViewEngine.ts\n            \n            interface\n            IViewEngine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            createInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getMethodParamsType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getPropertyType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getPrototypeConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getShortScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            isCustomClassInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            optionAssign\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            resolveDepts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            resolveKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            setColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            setScopeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            Colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            GlobalDI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            GlobalImplements\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit.ts\n            \n            function\n            defineUnit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        依赖项\n    \n    \n        \n            @bonbons/di : ^1.3.5\n        \n            @types/koa : ^2.0.47\n        \n            @types/koa-router : ^7.0.35\n        \n            @types/node : ^10.12.10\n        \n            @types/uuid : 3.4.4\n        \n            astroboy : 0.0.37\n        \n            astroboy-router : 1.2.0-rc.1\n        \n            camelcase : 4.1.0\n        \n            cerialize : 0.1.18\n        \n            chalk : 2.4.1\n        \n            commander : 2.19.0\n        \n            decamelize : 1.2.0\n        \n            lodash : ^4.17.11\n        \n            nodemon : 1.18.8\n        \n            nunjucks : 3.1.6\n        \n            rimraf : 2.6.2\n        \n            tsconfig-paths : 3.7.0\n        \n            tslib : ^1.9.3\n        \n            uuid : 3.3.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  列举\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            SimpleLogLevel   (src/.../base.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/plugins/simple-logger/base.ts\n    \n        \n            \n                \n                    \n                        \n                        SimpleLogLevel\n                    \n                \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                值 : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                值 : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                值 : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                值 : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                值 : 4\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                值 : 5\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n&#x1F31F;astroboy.ts\n\n基于astroboy的 DI 版本，TypeScript3.2 信仰加成\n\n\n\n\n\n已经实现的功能\n\n高性能依赖注入[ 实现：@bonbons/di ]\n控制器声明式路由[ 实现：astroboy-router ]\n可扩展的注入式模版引擎\n可配置容器定义化\nDI 可注入依赖实现多重继承\n配置容器对接 astroboy 标准 configs 模式\n自动化生成 astroboy 的 routers 规范\n命令行工具支持\n完整兼容 astroboy 原始语义，支持任意扩展\n支持完整依赖注入能力的高级中间件\n路由方法返回配置接口化\n\n\n&#x1F628; 更多功能正在开发中...\n\nWiki + Demo\n\nDemo1:多版本并存 - 最大兼容预览(多重代码风格可以共存)\nDemo2:全量 astroboy.ts+构建 base 项目包 - base 仓库预览(构建继承 astroboy.ts 的 base 项目)\nDemo3:使用 base 仓库构建应用 - 最大预览(使用 base 项目构建应用)\nCore - 核心组件\nServices - 内置服务列表\nConfigs/Options - 配置列表\nDecorators - 装饰器列表\nFunctions - 功能函数\nInterfaces - 公开接口列表\n\n安装\nnpm install astroboy.tsyarn add astroboy.ts接入说明\n1. 按照 astroboy 框架要求创建应用程序目录（略）\n2. 调整 app.ts\nimport path from \"path\";\nimport { Server, Astroboy } from \"astroboy.ts\";\n\nServer.Create(Astroboy, {\n  ROOT_PATH: path.resolve(__dirname, \"..\")\n}).run({\n  onStart: () => console.log(\"hello world!\"),\n  onError: err => console.log(`oh shit : ${String(err)}`)\n});3. 配置初始化中间件\n\napp/middleware/server-init.ts\n\nimport { serverInit } from \"astroboy.ts\";\n\nexport = () => serverInit;\nconfig/middleware.default.js\n\nmodule.exports = {\n  \"server-init\": {\n    priority: 0.1,\n    enable: true\n  }\n};\nconfig/config.default.js\n\n/**\n * 默认配置文件\n */\nconst path = require(\"path\");\n\nmodule.exports = {\n  \"@astroboy.ts\": {\n    showTrace: false,\n    diType: \"proxy\"\n  }\n};4. 启动\n# 本地安装astrpboy.ts\n./node_modules/.bin/atc dev --inspect --tsconfig app/tsconfig.json\n# 全局装过astrpboy.ts\natc dev --inspect --tsconfig app/tsconfig.json开发姿势\n0.cli 配置文件\nastroboy.ts 开放了一个配置文件，用来简化 cli 参数的使用，类似 webpack，可以使用--config 参数修改配置文件的名字。\n\natc.config.js - 一个简单的配置文件\n\nconst path = require(\"path\");\n\nmodule.exports = {\n  tsconfig: \"tsconfig.json\",\n  inspect: true,\n  typeCheck: true,\n  transpile: true,\n  debug: \"*\",\n  mock: \"http://127.0.0.1:8001\",\n  // atc router 的命令配置\n  routers: {\n    enabled: true,\n    always: false,\n    approot: \"/v1\",\n    filetype: \"ts\",\n    details: true\n  },\n  // atc-cli监控的文件修改列表，自动重启node服务\n  watch: [\n    path.join(__dirname, \"app/**/*.*\"),\n    path.join(__dirname, \"config/**/*.*\"),\n    path.join(__dirname, \"plugins/**/*.*\")\n  ],\n  // 忽略的文件列表\n  ignore: []\n};1.编写路由控制器\n控制器方面使用装饰器来定制 Router 的业务层级，确定 Route 的 url 和 method，提供 params 和 body 的注入获取能力，并抽象了响应中 body 的写入能力。\n\napp/controllers/test.ts\n\nimport {\n  Controller,\n  Configs,\n  AstroboyContext,\n  ENV,\n  JsonResult,\n  GET,\n  POST,\n  FromParams,\n  FromBody,\n  Deserialize,\n  IContext\n} from \"astroboy.ts\";\n\ninterface GetQuery {\n  id: string;\n  name: string;\n  type: string;\n}\n\ninterface PostData {\n  id: number;\n  name: string;\n}\n\n@Controller(\"test\")\nclass TestController {\n  // 构造函数注入能力\n  constructor(\n    private configs: Configs,\n    private base: AstroboyContext\n  ) {}\n\n  // GET: {项目前缀}/api/test/testGet/:type?id=xxxx&name=xxxx\n  @GET(\"testGet/:type\")\n  // 显式进行params参数前提，作为路由方法参数\n  // 使用接口为了更好的类型描述，不会进行任何运行时类型处理\n  public methodGet(@FromParams() params: GetQuery) {\n    const { ctx } = this.base;\n    const { id, name, type } = params;\n    ctx.type = \"application/json\";\n    // JsonResult实现了IResult接口，提供将json内容编程化写入body的能力，同时提供了Configs容器的配置化支持\n    // 你可以自己实现自定义逻辑，只要实现IResult接口即可\n    return new JsonResult({\n      id,\n      name,\n      type,\n      url: ctx.url\n    });\n  }\n\n  // POST: {项目前缀}/api/post/:type?id=xxxx&name=xxxx\n  @POST(\"post/:type\")\n  // body也能进行相似的流程实现参数前提\n  // 你仍然可以进行直接解构\n  public async methodPost(\n    @FromParams() params: GetQuery,\n    @FromBody() { id, name }: PostData\n  ) {\n    const { name, id: id2, type } = params;\n    return new JsonResult({\n      id,\n      name,\n      type,\n      id2,\n      name\n    });\n  }\n}\n\nexport = TestController;到此一个业务路由层级的构建并没有完成，和原生 astroboy 开发类似，相应的需要一个 router 文件来创建 astroboy 的 router 数组定义。\n\napp/routers/test.ts\n\nimport TEST from \"../controllers/test\";\nimport { buildRouter } from \"astroboy.ts\";\n\n// “test”代表controllers内的文件级别\n// “/v1”代表应用的路由前缀，这里只作为示例\nexport = buildRouter(TEST, \"test\", \"/v1\");\n注：1.0.1-rc.27 版本以后已经支持自动生成 router，不需再要上述步骤，有两种模式任选其一，操作如下：\n\n1. routers 预处理模式\n\n使用 astroboy.ts 提供的命令行工具\n\n# 在开发启动或者生产打包前确保执行即可\n./node_modules/.bin/atc router --always --filetype ts2. 动态初始化(不推荐)\n\n配置 app/app.ts 文件 (但是在删除控制器后，需要手动删除 routers 中多余的文件)\n\nServer.Create(..., {\n  ...\n})\n  .option(ROUTER_OPTIONS, { appRoot: \"/v1\", enabled: true })\n  ...到此一个完整的业务级别的 router 构造完成了。\n2.编写可注入服务\nastroboy.ts 按照 IoC 模式的指导思路进行设计，所有的服务都应该按照 DI 的方式（无论是手动还是自动）获取、组装和构造逻辑层级。\n\napp/services/test.ts\n\nimport { Injectable } from \"astroboy.ts\";\n\n@Injectable()\nclass TestService {\n  private value = 98765;\n\n  public add(v: number) {\n    this.value += v;\n  }\n\n  public showValue() {\n    return this.value;\n  }\n}\n\nexport = TestService;astroboy.ts 服务的默认行为是范围单例（scoped），简单的描述来说，一个服务在同一个请求流程中总是保持单例状态，并在请求结束后释放。scoped 服务可以在请求流程中的任意位置获取，并承担数据传输载体的职责。\n你当然可以手动改变这一默认行为：\n// 请确保你了解type的含义，以免服务出现不符合预期的行为\n@Injectable({ type: InjectScope.Singleton })\nclass Test02Service {\n  ...\n}其他行为：\n\nnew（每次获取总是创建一个全新的对象）\nsingleton（在整个应用中保持唯一并积累副作用）\n\n服务还具有其他高级功能（包括依赖注入分离和实现多重继承），这里不一一展开了。\n3.对接 astroboy 的配置\n创建接口来描述 astroboy 的配置中的各个业务部分：\n\nconfig/options/demo.ts\n\nimport { createConfig } from \"astroboy.ts\";\n\ninterface DemoOptions {\n  /** ccccc */\n  key01: number;\n  key02: string;\n}\n\nexport const DEMO_OPTIONS = createConfig(\"demo\");\nconfig/config.default.js\n\n/**\n * 默认配置文件\n */\nconst path = require(\"path\");\n\nmodule.exports = {\n  \"@astroboy.ts\": {\n    showTrace: true,\n    diType: \"proxy\"\n  },\n\n  demo: {\n    key01: 12345,\n    key02: \"woshinidie\"\n  },\n\n  strOpt: \"test_string_config\"\n};这样既可以更好的描述原本混乱的 config 文件，同时可以在对 config 访问的时候提供定义支持。\n// 注入Configs服务，然后获取配置\n// opts变量将会被正确的绑定上类型信息\nconst opts = this.configs.get(DEMO_OPTIONS);4.在中间件中使用依赖注入\n过程比较轻量，废话不多，直接上 demo：\n\napp/middlewares/demo.ts\n\nimport { injectScope, ENV, Context } from \"astroboy.ts\";\nimport DataService from \"../services/Data\";\n\nexport = () =>\n  injectScope(async ({ injector, configs, ctx, next }) => {\n    // console.log(configs.get(ENV).showTrace);\n    const data = injector.get(DataService);\n    data.setStamp(new Date().getTime());\n    await next();\n    // console.log(\"fuck\");\n  });\n文档完善中...\n\n\nMIT License\nCopyright (c) 2018 NODE.Mogician bigmogician@outlook.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 NODE.Mogician\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    模块列表\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    概述\n\n    \n\n    \n        \n            \n                \n                    \n                    5 可注入的\n                \n            \n        \n        \n            \n                \n                    \n                    8 类列表\n                \n            \n        \n        \n            \n                \n                    \n                    50 接口\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  类型别名\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            Async   (src/.../IResult.ts)\n                        \n                        \n                            ChangeReturn   (src/.../utils.ts)\n                        \n                        \n                            DIPair   (src/.../server.ts)\n                        \n                        \n                            ErrorType   (src/.../NormalizedMessage.ts)\n                        \n                        \n                            IBodyResult   (src/.../IResult.ts)\n                        \n                        \n                            ICommonResultType   (src/.../IResult.ts)\n                        \n                        \n                            InnerBundle   (src/.../server.ts)\n                        \n                        \n                            ParamsFactory   (src/.../route.ts)\n                        \n                        \n                            ParamsResolver   (src/.../route.ts)\n                        \n                        \n                            PartReset   (src/.../utils.ts)\n                        \n                        \n                            ProvideInvoker   (src/.../core.ts)\n                        \n                        \n                            ServerBundle   (src/.../server.ts)\n                        \n                        \n                            Severity   (src/.../NormalizedMessage.ts)\n                        \n                        \n                            TokenGenerator   (src/.../Configs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/typings/IResult.ts\n    \n    \n        \n            \n                \n                    \n                    Async\n                \n            \n            \n                \n                    表示一个异步过程 \n\n                \n            \n            \n                \n                        T | Promise\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IBodyResult\n                \n            \n            \n                \n                        Async\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ICommonResultType\n                \n            \n            \n                \n                        string | void | IResult\n\n                \n            \n        \n    \n    src/utils.ts\n    \n    \n        \n            \n                \n                    \n                    ChangeReturn\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PartReset\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/server.ts\n    \n    \n        \n            \n                \n                    \n                    DIPair\n                \n            \n            \n                \n                        [any, any]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InnerBundle\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServerBundle\n                \n            \n            \n                \n                        PartReset\n\n                \n            \n        \n    \n    src/cmd/utils/NormalizedMessage.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorType\n                \n            \n            \n                \n                        \"diagnostic\" | \"lint\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Severity\n                \n            \n            \n                \n                        \"error\" | \"warning\"\n\n                \n            \n        \n    \n    src/decorators/route.ts\n    \n    \n        \n            \n                \n                    \n                    ParamsFactory\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamsResolver\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    src/middlewares/core.ts\n    \n    \n        \n            \n                \n                    \n                    ProvideInvoker\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    src/services/Configs.ts\n    \n    \n        \n            \n                \n                    \n                    TokenGenerator\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  其他\n  变量\n\n\n\n    索引\n    \n        \n            \n                \n                    \n                        \n                            _innerBundle   (src/.../server.ts)\n                        \n                        \n                            $$injector   (src/.../controller.ts)\n                        \n                        \n                            BC   (src/.../BaseClass.ts)\n                        \n                        \n                            Bundles   (src/.../server.ts)\n                        \n                        \n                            Colors   (src/.../utils.ts)\n                        \n                        \n                            CONFIG_VIEW   (src/.../view.config.ts)\n                        \n                        \n                            createConfig   (src/.../Configs.ts)\n                        \n                        \n                            createOptions   (src/.../Configs.ts)\n                        \n                        \n                            defaultEnv   (src/.../env.config.ts)\n                        \n                        \n                            defaultGlobalError   (src/.../errors.options.ts)\n                        \n                        \n                               (src/.../check.ts)\n                        \n                        \n                            defaultJsonResultOptions   (src/.../json.options.ts)\n                        \n                        \n                               (src/.../init.ts)\n                        \n                        \n                            defaultNunjunksOptions   (src/.../options.ts)\n                        \n                        \n                            defaultRenderResultOptions   (src/.../render.options.ts)\n                        \n                        \n                            defaultRouterOptions   (src/.../router.options.ts)\n                        \n                        \n                            defaultSimpleLoggerOptions   (src/.../options.ts)\n                        \n                        \n                            defaultView   (src/.../view.config.ts)\n                        \n                        \n                            ENV   (src/.../env.config.ts)\n                        \n                        \n                            GLOBAL_ERROR   (src/.../errors.options.ts)\n                        \n                        \n                            GlobalDI   (src/.../utils.ts)\n                        \n                        \n                            GlobalImplements   (src/.../utils.ts)\n                        \n                        \n                            INTERNAL_INJECTOR   (src/.../controller.ts)\n                        \n                        \n                            JSON_RESULT_OPTIONS   (src/.../json.options.ts)\n                        \n                        \n                            JsonResolvers   (src/.../json.ts)\n                        \n                        \n                            MAGIC_CONTENT   (src/.../route.ts)\n                        \n                        \n                            NUNJUNKS_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            options   (src/.../options.ts)\n                        \n                        \n                            RENDER_RESULT_OPTIONS   (src/.../render.options.ts)\n                        \n                        \n                            ROUTER_OPTIONS   (src/.../router.options.ts)\n                        \n                        \n                            serverInit   (src/.../index.ts)\n                        \n                        \n                            SIMPLE_LOGGER_OPTIONS   (src/.../options.ts)\n                        \n                        \n                            STATIC_RESOLVER   (src/.../typed-serialize.options.ts)\n                        \n                        \n                            transpile   (src/.../register.ts)\n                        \n                        \n                            tsconfig   (src/.../register.ts)\n                        \n                        \n                            tsnode   (src/.../register.ts)\n                        \n                        \n                            TypedSerializer   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _innerBundle\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     InnerBundle\n\n                        \n                    \n                    \n                        \n                            缺省值 : Bundles as any\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Bundles\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ChangeReturn\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  option(...args: any[]): ServerBundle {\n    Bundles[\"@options\"].push(args);\n    return Bundles as any;\n  },\n  scoped(...args: any[]): ServerBundle {\n    Bundles[\"@scopeds\"].push(args);\n    return Bundles as any;\n  },\n  singleton(...args: any[]): ServerBundle {\n    Bundles[\"@singletons\"].push(args);\n    return Bundles as any;\n  },\n  unique(...args: any[]): ServerBundle {\n    Bundles[\"@uniques\"].push(args);\n    return Bundles as any;\n  },\n  \"@options\": [],\n  \"@singletons\": [],\n  \"@scopeds\": [],\n  \"@uniques\": []\n} as any\n                        \n                    \n\n                \n                    \n                        DI Bundles\n\n导入并移动使用DI容器的注册api\n和普通注入项解析方式相同\n\n\n                    \n                \n\n            \n        \n\n    src/decorators/controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $$injector\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"$$injector\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INTERNAL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     string\n\n                        \n                    \n                    \n                        \n                            缺省值 : \"$INTERNAL_INJECTOR\"\n                        \n                    \n\n\n            \n        \n\n    src/services/BaseClass.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BC\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : C\n                        \n                    \n\n\n            \n        \n\n    src/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Colors\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  reset: \"\\x1b[0m\",\n  red: \"\\x1b[31m\\x1b[1m\",\n  green: \"\\x1b[32m\",\n  blue: \"\\x1b[34m\",\n  yellow: \"\\x1b[33m\",\n  cyan: \"\\x1b[36m\",\n  magenta: \"\\x1b[35m\",\n  white: \"\\x1b[37m\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalDI\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new DIContainer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GlobalImplements\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map()\n                        \n                    \n\n\n            \n        \n\n    src/configs/view.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_VIEW\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createConfig(\"view\")\n                        \n                    \n\n                \n                    \n                        astroboy view config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultView\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     Partial\n\n                        \n                    \n                    \n                        \n                            缺省值 : {}\n                        \n                    \n\n\n            \n        \n\n    src/services/Configs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     TokenGenerator\n\n                        \n                    \n                    \n                        \n                            缺省值 : (key: string) => ({\n  key: Symbol(`config::${key}`)\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     TokenGenerator\n\n                        \n                    \n                    \n                        \n                            缺省值 : (key: string) => ({\n  key: Symbol(key)\n})\n                        \n                    \n\n\n            \n        \n\n    src/configs/env.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultEnv\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     IENV\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  diType: \"native\",\n  env: \"development\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ENV\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createConfig(\"@astroboy.ts\")\n                        \n                    \n\n                \n                    \n                        astroboy.ts环境变量 \n\n                    \n                \n\n            \n        \n\n    src/options/errors.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGlobalError\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     IGlobalErrorHandler\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  handler: async (error, injector, configs) => {\n    const render = injector.get(Render);\n    const { ctx } = injector.get(Context);\n    const { env } = configs.get(ENV);\n    const { onError, onDevError } = configs.get(RENDER_RESULT_OPTIONS);\n    const { content: defaultRender, ...args } =\n      env === \"production\" ? onError : onDevError;\n    render.setView(\"__viewError\", error);\n    try {\n      const path = !args.path ? undefined : args.path;\n      const tpl = !args.tplStr ? undefined : args.tplStr;\n      if (!path && !tpl) {\n        throw new Error(\"No template provided for global error handler.\");\n      }\n      const result = new RenderResult({ path, tplStr: tpl });\n      ctx.body = await result.toResult({ injector, configs });\n    } catch (_) {\n      const logger = injector.get(SimpleLogger);\n      logger.trace(\"GLOBAL_ERROR render failed\", _);\n      ctx.body = defaultRender(error, \"Internal Server Error\");\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GLOBAL_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\"GLOBAL_ERROR\")\n                        \n                    \n\n\n            \n        \n\n    src/cmd/dev/check.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/options/json.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultJsonResultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     JsonResultOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  format: false,\n  whiteSpace: 2,\n  keyResolver: undefined,\n  jsonTemplate: undefined,\n  jsonTplKey: undefined\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            JSON_RESULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"JSON_RESULT_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/cmd/init.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env\n                        \n                    \n\n\n            \n        \n\n    src/plugins/nunjunks/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNunjunksOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     INunjunksRenderOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  root: path.resolve(process.cwd(), \"app/views\"),\n  cache: true,\n  autoescape: true,\n  throwOnUndefined: false,\n  trimBlocks: false,\n  lstripBlocks: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUNJUNKS_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"NUNJUNKS_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/options/render.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRenderResultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     RenderResultOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  astConf: {\n    use: false,\n    configs: undefined,\n    state: undefined\n  },\n  path: \"\",\n  tplStr: undefined,\n  root: undefined,\n  configs: undefined,\n  engine: \"nunjunks\",\n  engines: {\n    nunjunks: NunjunksEngine\n  },\n  onError: {\n    path: undefined,\n    tplStr: undefined,\n    content: _ => \"Internal Server Error\"\n  },\n  onDevError: {\n    path: undefined,\n    tplStr: undefined,\n    content: (e, title) => `\n      ${(checkCustomError(\n        e\n      ) &&\n        `${title || \"Render Error\"} -- ${e.name}`) ||\n        (title || \"Render Error\")}\n      ${\n        e.stack\n      }\n    `\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RENDER_RESULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"RENDER_RESULT_OPTIONS\"\n)\n                        \n                    \n\n                \n                    \n                        RenderResult配置token \n\n                    \n                \n\n            \n        \n\n    src/options/router.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRouterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     InnerRouterOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  enabled: false,\n  always: false,\n  ctorFolder: \"app/controllers\",\n  routerFolder: \"app/routers\",\n  appRoot: \"/\",\n  fileType: \"js\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\"ROUTER_OPTIONS\")\n                        \n                    \n\n\n            \n        \n\n    src/plugins/simple-logger/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSimpleLoggerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     ISimpleLoggerOptions\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  level: SimpleLogLevel.WARN\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIMPLE_LOGGER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"SIMPLE_LOGGER_OPTIONS\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/results/json.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JsonResolvers\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     object\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  camelcase: camelCase,\n  snakecase: snakeCase\n}\n                        \n                    \n\n\n            \n        \n\n    src/decorators/route.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAGIC_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new Map>()\n                        \n                    \n\n\n            \n        \n\n    src/cmd/dev/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"dev\",\n  description: \"本地开发，开启后端服务\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"使用自定义的atc.config.js配置文件\"],\n    [\"-D, --debug [debugName]\", \"开启 debug 模式\"],\n    [\"-E, --env [NODE_ENV]\", \"设置 NODE_ENV 环境变量，默认 development\"],\n    [\"-P, --port [NODE_PORT]\", \"设置 NODE_PORT 环境变量，默认 8201\"],\n    [\n      \"-M, --mock [proxyUrl]\",\n      \"开启 mock 模式，默认 proxy 地址为 http://127.0.0.1:8001\"\n    ],\n    [\"-T, --tsconfig [config]\", \"使用自定义的ts编译配置文件\"],\n    [\"-I, --inspect [inspect]\", \"启用inspector，开启编辑器断点调试\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc dev\");\n    console.log(\"    $ atc dev --debug\");\n    console.log(\"    $ atc dev --debug koa:application\");\n    console.log(\"    $ atc dev --debug --mock\");\n    console.log(\"    $ atc dev --mock http://127.0.0.1:8001\");\n    console.log(\"    $ atc dev --mock\");\n    console.log(\"    $ atc dev --env pre\");\n    console.log(\"    $ atc dev --port 8201\");\n    console.log(\"    $ atc dev --env development --port 8201\");\n    console.log(\"    $ atc dev --tsconfig app/tsconfig.json\");\n    console.log(\"    $ atc dev --inspect\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/cmd/router/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            类型 :     CommandPlugin\n\n                        \n                    \n                    \n                        \n                            缺省值 : {\n  name: \"router\",\n  description: \"astroboy.ts routers cmd\",\n  options: [\n    [\"-C, --config [atcConfig]\", \"use atc.config.js\"],\n    [\"-E, --enabled [isEnabled]\", \"open routers-auto-build\"],\n    [\"-A, --always [isAlways]\", \"set routers-always-rebuild\"],\n    [\"-F, --filetype [fileType]\", \"set routers fileType\"],\n    [\"-R, --approot [appRoot]\", \"set routers-root\"],\n    [\"-T, --tsconfig [tsconfig]\", \"set tsconfig.json\"],\n    [\"-D, --details [showRouters]\", \"show building results or not\"]\n  ],\n  action: fn,\n  help: () => {\n    console.log(\"\");\n    console.log(\"  Examples:\");\n    console.log(\"\");\n    console.log(\"    $ atc router\");\n    console.log(\"    $ atc router --always\");\n    console.log(\"    $ atc router --fileType ts\");\n    console.log(\"    $ atc router --approot /v1/prj\");\n    console.log();\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/middlewares/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            serverInit\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : async (ctx: IContext, next: () => Promise) => {\n  const { injector, scope, logger } = initRequestScope(ctx);\n  try {\n    await next();\n  } catch (error) {\n    await tryCatchGlobalError(injector, error);\n  } finally {\n    disposeRequestScope(scope, logger, injector);\n  }\n}\n                        \n                    \n\n                \n                    \n                        astroboy.ts初始化中间件\n\n请确保此中间件的优先级足够高\n建议优先级\n\n\n                    \n                \n\n            \n        \n\n    src/options/typed-serialize.options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STATIC_RESOLVER\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : createOptions(\n  \"STATIC_RESOLVER\"\n)\n                        \n                    \n\n\n            \n        \n\n    src/cmd/register.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            transpile\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.__TRANSPILE === \"true\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsconfig\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : process.env.__TSCONFIG\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsnode\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : require(\"ts-node\")\n                        \n                    \n\n\n            \n        \n\n    src/plugins/typed-serializer/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TypedSerializer\n                            \n                        \n                    \n                \n                    \n                        \n                            缺省值 : new TypedSerializerCreator()\n                        \n                    \n\n                \n                    \n                        内建静态类型序列化工具 (based on cerialize) \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        无匹配的结果 \"\"\n    \n\n"}}
}
